

// ===== .eslintrc.json =====

{
    "extends": "next/core-web-vitals",
    "rules": {
        "@next/next/no-img-element": "off",
        "react-hooks/exhaustive-deps": "warn"
    }
}

// ===== app\api\certificates\route.js =====

import { NextRequest, NextResponse } from 'next/server';
import { query } from '@/lib/db';

export async function GET(request: NextRequest) {
    try {
        const { searchParams } = new URL(request.url);
        const userId = searchParams.get('userId');
        const courseId = searchParams.get('courseId');

        let queryStr = `
      SELECT 
        c.*,
        u.first_name as user_first_name,
        u.last_name as user_last_name,
        crs.title as course_title,
        CASE 
          WHEN c.expiration_date < NOW() THEN 'expired'
          WHEN c.expiration_date < NOW() + INTERVAL '30 days' THEN 'expiring_soon'
          ELSE 'valid'
        END as validity_status
      FROM certificates c
      JOIN users u ON c.user_id = u.id
      JOIN courses crs ON c.course_id = crs.id
      WHERE 1=1
    `;

        const params: any[] = [];
        let paramCount = 1;

        if (userId) {
            queryStr += ` AND c.user_id = $${paramCount}`;
            params.push(userId);
            paramCount++;
        }

        if (courseId) {
            queryStr += ` AND c.course_id = $${paramCount}`;
            params.push(courseId);
            paramCount++;
        }

        queryStr += ' ORDER BY c.issued_at DESC';

        const certificates = await query(queryStr, params);
        return NextResponse.json(certificates.rows);
    } catch (error) {
        console.error('Error fetching certificates:', error);
        return NextResponse.json(
            { error: 'Error fetching certificates' },
            { status: 500 }
        );
    }
}

export async function POST(request: NextRequest) {
    try {
        const body = await request.json();
        const { user_id, course_id, score, issued_by, expiration_days = 365 } = body;

        console.log('Datos recibidos para certificado:', body);

        // Validaciones
        if (!user_id || !course_id || score === undefined || !issued_by) {
            return NextResponse.json(
                { error: 'Datos incompletos: user_id, course_id, score e issued_by son requeridos' },
                { status: 400 }
            );
        }

        if (score < 0 || score > 100) {
            return NextResponse.json(
                { error: 'El score debe estar entre 0 y 100' },
                { status: 400 }
            );
        }

        // Verificar si el usuario existe
        const userCheck = await query(
            'SELECT id, first_name, last_name FROM users WHERE id = $1 AND deleted_at IS NULL',
            [user_id]
        );

        if (userCheck.rows.length === 0) {
            return NextResponse.json(
                { error: 'Usuario no encontrado' },
                { status: 404 }
            );
        }

        // Verificar si el curso existe
        const courseCheck = await query(
            'SELECT id, title FROM courses WHERE id = $1 AND deleted_at IS NULL',
            [course_id]
        );

        if (courseCheck.rows.length === 0) {
            return NextResponse.json(
                { error: 'Curso no encontrado' },
                { status: 404 }
            );
        }

        // Verificar si ya existe un certificado para este usuario y curso
        const existingCert = await query(
            'SELECT id FROM certificates WHERE user_id = $1 AND course_id = $2',
            [user_id, course_id]
        );

        if (existingCert.rows.length > 0) {
            return NextResponse.json(
                { error: 'Ya existe un certificado para este usuario y curso' },
                { status: 400 }
            );
        }

        // Generar número de certificado único
        const timestamp = Date.now();
        const randomStr = Math.random().toString(36).substr(2, 9).toUpperCase();
        const certificateNumber = `CERT-${timestamp}-${randomStr}`;

        // Calcular fecha de expiración
        const expirationDate = `NOW() + INTERVAL '${expiration_days} days'`;

        // Insertar certificado
        const result = await query(
            `INSERT INTO certificates 
       (user_id, course_id, certificate_number, score, issued_by, expiration_date)
       VALUES ($1, $2, $3, $4, $5, ${expirationDate})
       RETURNING *`,
            [user_id, course_id, certificateNumber, score, issued_by]
        );

        console.log('Certificado creado exitosamente:', result.rows[0]);

        return NextResponse.json(result.rows[0], { status: 201 });

    } catch (error) {
        console.error('Error creating certificate:', error);
        return NextResponse.json(
            { error: 'Error interno del servidor al crear certificado' },
            { status: 500 }
        );
    }
}

export async function DELETE(request: NextRequest) {
    try {
        const { searchParams } = new URL(request.url);
        const id = searchParams.get('id');

        if (!id) {
            return NextResponse.json(
                { error: 'ID de certificado es requerido' },
                { status: 400 }
            );
        }

        // Verificar si el certificado existe
        const certCheck = await query(
            'SELECT id FROM certificates WHERE id = $1',
            [id]
        );

        if (certCheck.rows.length === 0) {
            return NextResponse.json(
                { error: 'Certificado no encontrado' },
                { status: 404 }
            );
        }

        // Eliminar certificado
        await query(
            'DELETE FROM certificates WHERE id = $1',
            [id]
        );

        return NextResponse.json({
            message: 'Certificado eliminado correctamente'
        });

    } catch (error) {
        console.error('Error deleting certificate:', error);
        return NextResponse.json(
            { error: 'Error interno del servidor al eliminar certificado' },
            { status: 500 }
        );
    }
}

// ===== app\api\certificates\send-email\route.ts =====

import { NextRequest, NextResponse } from 'next/server';
import { query } from '@/lib/db';

export async function POST(request: NextRequest) {
    try {
        const body = await request.json();
        const { userId, certificateNumber } = body;

        if (!userId || !certificateNumber) {
            return NextResponse.json(
                { error: 'userId y certificateNumber son requeridos' },
                { status: 400 }
            );
        }

        // Obtener información del certificado y usuario
        const certificateInfo = await query(`
      SELECT 
        c.*,
        u.email as user_email,
        u.first_name,
        u.last_name,
        crs.title as course_title
      FROM certificates c
      JOIN users u ON c.user_id = u.id
      JOIN courses crs ON c.course_id = crs.id
      WHERE c.user_id = $1 AND c.certificate_number = $2
    `, [userId, certificateNumber]);

        if (certificateInfo.rows.length === 0) {
            return NextResponse.json(
                { error: 'Certificado no encontrado' },
                { status: 404 }
            );
        }

        const cert = certificateInfo.rows[0];

        // Aquí iría la lógica real para enviar el email
        // Por ahora, solo simulamos el envío
        console.log('Enviando email de certificado:', {
            to: cert.user_email,
            subject: `Certificado de Completación - ${cert.course_title}`,
            certificateNumber: cert.certificate_number,
            studentName: `${cert.first_name} ${cert.last_name}`,
            courseName: cert.course_title,
            score: cert.score,
            issuedAt: cert.issued_at,
            expirationDate: cert.expiration_date
        });

        return NextResponse.json({
            success: true,
            message: 'Email enviado exitosamente',
            sentTo: cert.user_email
        });

    } catch (error) {
        console.error('Error sending certificate email:', error);
        return NextResponse.json(
            { error: 'Error interno del servidor al enviar email' },
            { status: 500 }
        );
    }
}

// ===== app\api\courses\route.ts =====

import { NextResponse } from 'next/server';
import { Course } from '@/types';

// Datos de ejemplo para cursos
const sampleCourses: Course[] = [
    {
        id: '1',
        title: 'Seguridad Industrial',
        description: 'Curso completo sobre normas de seguridad en el entorno industrial',
        instructorId: '2',
        duration: 240,
        isActive: true,
        category: 'Seguridad',
        level: 'intermediate',
        thumbnailUrl: '/api/placeholder/300/200',
        createdAt: '2024-01-15T10:00:00Z',
        updatedAt: '2024-01-20T15:30:00Z'
    },
    {
        id: '2',
        title: 'Primeros Auxilios',
        description: 'Aprende técnicas básicas de primeros auxilios para emergencias',
        instructorId: '2',
        duration: 180,
        isActive: true,
        category: 'Salud',
        level: 'beginner',
        thumbnailUrl: '/api/placeholder/300/200',
        createdAt: '2024-02-01T09:15:00Z',
        updatedAt: '2024-02-10T14:20:00Z'
    },
    {
        id: '3',
        title: 'Manejo Defensivo',
        description: 'Técnicas de conducción segura y preventiva',
        instructorId: '2',
        duration: 300,
        isActive: true,
        category: 'Conducción',
        level: 'intermediate',
        thumbnailUrl: '/api/placeholder/300/200',
        createdAt: '2024-02-15T11:30:00Z',
        updatedAt: '2024-02-25T16:45:00Z'
    }
];

export async function GET() {
    try {
        // Simular un retraso de red
        await new Promise(resolve => setTimeout(resolve, 1000));

        return NextResponse.json(sampleCourses);
    } catch (error) {
        console.error('Error fetching courses:', error);
        return NextResponse.json(
            { error: 'Error fetching courses' },
            { status: 500 }
        );
    }
}

// ===== app\api\courses\[courseId]\modules\route.ts =====

import { NextResponse } from 'next/server';
import { CourseModule } from '@/types';

const sampleModules: Record<string, CourseModule[]> = {
    '1': [
        {
            id: '101',
            courseId: '1',
            title: 'Introducción a EPP',
            description: 'Equipo de Protección Personal básico',
            contentType: 'video',
            contentUrl: '/api/placeholder/video',
            duration: 1200,
            orderIndex: 1,
            isPublished: true,
            createdAt: '2024-01-16T10:00:00Z',
            updatedAt: '2024-01-16T10:00:00Z'
        },
        {
            id: '102',
            courseId: '1',
            title: 'Normas OSHA',
            description: 'Estándares de seguridad ocupacional',
            contentType: 'video',
            contentUrl: '/api/placeholder/video',
            duration: 1800,
            orderIndex: 2,
            isPublished: true,
            createdAt: '2024-01-17T10:00:00Z',
            updatedAt: '2024-01-17T10:00:00Z'
        }
    ],
    '2': [
        {
            id: '201',
            courseId: '2',
            title: 'RCP Básico',
            description: 'Reanimación cardiopulmonar',
            contentType: 'video',
            contentUrl: '/api/placeholder/video',
            duration: 1500,
            orderIndex: 1,
            isPublished: true,
            createdAt: '2024-02-02T10:00:00Z',
            updatedAt: '2024-02-02T10:00:00Z'
        }
    ]
};

export async function GET(
    request: Request,
    { params }: { params: { courseId: string } }
) {
    try {
        const { courseId } = params;

        // Simular un retraso de red
        await new Promise(resolve => setTimeout(resolve, 800));

        const modules = sampleModules[courseId] || [];

        return NextResponse.json(modules);
    } catch (error) {
        console.error('Error fetching course modules:', error);
        return NextResponse.json(
            { error: 'Error fetching course modules' },
            { status: 500 }
        );
    }
}

// ===== app\api\coursesmodules\route.ts =====

import { NextRequest, NextResponse } from 'next/server';
import { query } from '@/lib/db';

export async function GET() {
    try {
        const courses = await query(`
      SELECT 
        c.*,
        u.first_name as instructor_first_name,
        u.last_name as instructor_last_name,
        COUNT(e.id) as enrolled_students,
        COUNT(DISTINCT cert.id) as certificates_issued
      FROM courses c
      LEFT JOIN users u ON c.instructor_id = u.id
      LEFT JOIN user_course_enrollments e ON c.id = e.course_id
      LEFT JOIN certificates cert ON c.id = cert.course_id
      WHERE c.deleted_at IS NULL
      GROUP BY c.id, u.first_name, u.last_name
      ORDER BY c.created_at DESC
    `);

        return NextResponse.json(courses);
    } catch (error) {
        return NextResponse.json(
            { error: 'Error fetching courses' },
            { status: 500 }
        );
    }
}

export async function POST(request: NextRequest) {
    try {
        const body = await request.json();
        const { title, description, instructor_id, duration, category, level, objectives, requirements } = body;

        const result = await query(
            `INSERT INTO courses 
       (title, description, instructor_id, duration, category, level, objectives, requirements) 
       VALUES ($1, $2, $3, $4, $5, $6, $7, $8) 
       RETURNING *`,
            [title, description, instructor_id, duration, category, level, objectives, requirements]
        );

        return NextResponse.json(result[0]);
    } catch (error) {
        return NextResponse.json(
            { error: 'Error creating course' },
            { status: 500 }
        );
    }
}

// ===== app\api\coursesmodules\[id]\modules\route.ts =====

import { NextRequest, NextResponse } from 'next/server';
import { query } from '@/lib/db';

export async function GET(
    request: NextRequest,
    { params }: { params: { id: string } }
) {
    try {
        const modules = await query(`
      SELECT 
        cm.*,
        m.filename as media_filename,
        m.file_type as media_type,
        m.thumbnail_url as media_thumbnail,
        m.duration as media_duration
      FROM course_modules cm
      LEFT JOIN media m ON cm.media_id = m.id
      WHERE cm.course_id = $1 AND cm.deleted_at IS NULL
      ORDER BY cm.order_index
    `, [params.id]);

        return NextResponse.json(modules);
    } catch (error) {
        return NextResponse.json(
            { error: 'Error fetching course modules' },
            { status: 500 }
        );
    }
}

// ===== app\api\coursesmodules\[id]\route.ts =====

import { NextRequest, NextResponse } from 'next/server';
import { query } from '@/lib/db';

export async function GET(
    request: NextRequest,
    { params }: { params: { id: string } }
) {
    try {
        const course = await query(`
      SELECT 
        c.*,
        u.first_name as instructor_first_name,
        u.last_name as instructor_last_name,
        u.email as instructor_email,
        COUNT(DISTINCT e.id) as enrolled_students,
        COUNT(DISTINCT cert.id) as certificates_issued
      FROM courses c
      LEFT JOIN users u ON c.instructor_id = u.id
      LEFT JOIN user_course_enrollments e ON c.id = e.course_id
      LEFT JOIN certificates cert ON c.id = cert.course_id
      WHERE c.id = $1 AND c.deleted_at IS NULL
      GROUP BY c.id, u.first_name, u.last_name, u.email
    `, [params.id]);

        if (course.length === 0) {
            return NextResponse.json(
                { error: 'Course not found' },
                { status: 404 }
            );
        }

        return NextResponse.json(course[0]);
    } catch (error) {
        return NextResponse.json(
            { error: 'Error fetching course' },
            { status: 500 }
        );
    }
}

export async function PUT(
    request: NextRequest,
    { params }: { params: { id: string } }
) {
    try {
        const body = await request.json();
        const { title, description, instructor_id, duration, category, level, is_active, objectives, requirements } = body;

        const result = await query(
            `UPDATE courses 
       SET title = $1, description = $2, instructor_id = $3, duration = $4, 
           category = $5, level = $6, is_active = $7, objectives = $8, requirements = $9, updated_at = NOW()
       WHERE id = $10 AND deleted_at IS NULL
       RETURNING *`,
            [title, description, instructor_id, duration, category, level, is_active, objectives, requirements, params.id]
        );

        return NextResponse.json(result[0]);
    } catch (error) {
        return NextResponse.json(
            { error: 'Error updating course' },
            { status: 500 }
        );
    }
}

export async function DELETE(
    request: NextRequest,
    { params }: { params: { id: string } }
) {
    try {
        await query(
            'UPDATE courses SET deleted_at = NOW() WHERE id = $1',
            [params.id]
        );

        return NextResponse.json({ message: 'Course deleted successfully' });
    } catch (error) {
        return NextResponse.json(
            { error: 'Error deleting course' },
            { status: 500 }
        );
    }
}

// ===== app\api\dashboard\stats\route.ts =====

import { NextRequest, NextResponse } from 'next/server';
import { query } from '@/lib/db';

export async function GET() {
    try {
        const [
            totalUsers,
            totalCourses,
            totalEnrollments,
            totalCertificates,
            recentEnrollments,
            popularCourses
        ] = await Promise.all([
            // Total usuarios
            query('SELECT COUNT(*) FROM users WHERE deleted_at IS NULL'),

            // Total cursos
            query('SELECT COUNT(*) FROM courses WHERE deleted_at IS NULL AND is_active = true'),

            // Total inscripciones
            query('SELECT COUNT(*) FROM user_course_enrollments'),

            // Total certificados
            query('SELECT COUNT(*) FROM certificates'),

            // Inscripciones recientes (últimos 7 días)
            query(`
        SELECT 
          e.*,
          c.title as course_title,
          u.first_name as user_first_name,
          u.last_name as user_last_name
        FROM user_course_enrollments e
        LEFT JOIN courses c ON e.course_id = c.id
        LEFT JOIN users u ON e.user_id = u.id
        WHERE e.enrolled_at >= NOW() - INTERVAL '7 days'
        ORDER BY e.enrolled_at DESC
        LIMIT 10
      `),

            // Cursos más populares
            query(`
        SELECT 
          c.*,
          COUNT(e.id) as enrollment_count,
          u.first_name as instructor_first_name,
          u.last_name as instructor_last_name
        FROM courses c
        LEFT JOIN user_course_enrollments e ON c.id = e.course_id
        LEFT JOIN users u ON c.instructor_id = u.id
        WHERE c.deleted_at IS NULL AND c.is_active = true
        GROUP BY c.id, u.first_name, u.last_name
        ORDER BY enrollment_count DESC
        LIMIT 5
      `)
        ]);

        return NextResponse.json({
            totalUsers: parseInt(totalUsers[0]?.count || '0'),
            totalCourses: parseInt(totalCourses[0]?.count || '0'),
            totalEnrollments: parseInt(totalEnrollments[0]?.count || '0'),
            totalCertificates: parseInt(totalCertificates[0]?.count || '0'),
            recentEnrollments,
            popularCourses
        });
    } catch (error) {
        return NextResponse.json(
            { error: 'Error fetching dashboard stats' },
            { status: 500 }
        );
    }
}

// ===== app\api\enrollments\route.ts =====

import { NextRequest, NextResponse } from 'next/server';
import { query } from '@/lib/db';

export async function GET(request: NextRequest) {
    try {
        const { searchParams } = new URL(request.url);
        const userId = searchParams.get('userId');
        const courseId = searchParams.get('courseId');

        let queryStr = `
      SELECT 
        e.*,
        c.title as course_title,
        u.first_name as user_first_name,
        u.last_name as user_last_name,
        COUNT(DISTINCT mp.module_id) as completed_modules,
        COUNT(DISTINCT cm.id) as total_modules
      FROM user_course_enrollments e
      LEFT JOIN courses c ON e.course_id = c.id
      LEFT JOIN users u ON e.user_id = u.id
      LEFT JOIN course_modules cm ON e.course_id = cm.course_id AND cm.deleted_at IS NULL
      LEFT JOIN user_module_progress mp ON e.user_id = mp.user_id AND cm.id = mp.module_id AND mp.status = 'completed'
      WHERE e.course_id IS NOT NULL
    `;

        const params: any[] = [];
        let paramCount = 1;

        if (userId) {
            queryStr += ` AND e.user_id = $${paramCount}`;
            params.push(userId);
            paramCount++;
        }

        if (courseId) {
            queryStr += ` AND e.course_id = $${paramCount}`;
            params.push(courseId);
            paramCount++;
        }

        queryStr += ' GROUP BY e.id, c.title, u.first_name, u.last_name ORDER BY e.enrolled_at DESC';

        const enrollments = await query(queryStr, params);

        return NextResponse.json(enrollments);
    } catch (error) {
        return NextResponse.json(
            { error: 'Error fetching enrollments' },
            { status: 500 }
        );
    }
}

export async function POST(request: NextRequest) {
    try {
        const body = await request.json();
        const { user_id, course_id } = body;

        // Verificar si ya está inscrito
        const existing = await query(
            'SELECT id FROM user_course_enrollments WHERE user_id = $1 AND course_id = $2',
            [user_id, course_id]
        );

        if (existing.length > 0) {
            return NextResponse.json(
                { error: 'User already enrolled in this course' },
                { status: 400 }
            );
        }

        const result = await query(
            `INSERT INTO user_course_enrollments (user_id, course_id) 
       VALUES ($1, $2) 
       RETURNING *`,
            [user_id, course_id]
        );

        return NextResponse.json(result[0]);
    } catch (error) {
        return NextResponse.json(
            { error: 'Error creating enrollment' },
            { status: 500 }
        );
    }
}

// ===== app\api\evaluations\route.ts =====

import { NextRequest, NextResponse } from 'next/server';
import { query } from '@/lib/db';

export async function GET(request: NextRequest) {
    try {
        const { searchParams } = new URL(request.url);
        const courseId = searchParams.get('courseId');
        const moduleId = searchParams.get('moduleId');

        let queryStr = `
      SELECT 
        e.*,
        c.title as course_title,
        cm.title as module_title,
        u.first_name as created_by_first_name,
        u.last_name as created_by_last_name,
        COUNT(DISTINCT eq.id) as questions_count
      FROM evaluations e
      LEFT JOIN courses c ON e.course_id = c.id
      LEFT JOIN course_modules cm ON e.module_id = cm.id
      LEFT JOIN users u ON e.created_by = u.id
      LEFT JOIN evaluation_questions eq ON e.id = eq.evaluation_id
      WHERE e.is_active = true
    `;

        const params: any[] = [];
        let paramCount = 1;

        if (courseId) {
            queryStr += ` AND e.course_id = $${paramCount}`;
            params.push(courseId);
            paramCount++;
        }

        if (moduleId) {
            queryStr += ` AND e.module_id = $${paramCount}`;
            params.push(moduleId);
            paramCount++;
        }

        queryStr += ' GROUP BY e.id, c.title, cm.title, u.first_name, u.last_name ORDER BY e.created_at DESC';

        const evaluations = await query(queryStr, params);
        return NextResponse.json(evaluations);
    } catch (error) {
        return NextResponse.json(
            { error: 'Error fetching evaluations' },
            { status: 500 }
        );
    }
}

export async function POST(request: NextRequest) {
    try {
        const body = await request.json();
        const {
            title, description, course_id, module_id, time_limit,
            passing_score, max_attempts, shuffle_questions, shuffle_options,
            show_correct_answers, questions
        } = body;

        // Insertar evaluación
        const evaluationResult = await query(
            `INSERT INTO evaluations 
       (title, description, course_id, module_id, time_limit, passing_score, 
        max_attempts, shuffle_questions, shuffle_options, show_correct_answers) 
       VALUES ($1, $2, $3, $4, $5, $6, $7, $8, $9, $10) 
       RETURNING *`,
            [title, description, course_id, module_id, time_limit, passing_score,
                max_attempts, shuffle_questions, shuffle_options, show_correct_answers]
        );

        const evaluation = evaluationResult[0];

        // Insertar preguntas y opciones
        for (const questionData of questions) {
            const questionResult = await query(
                `INSERT INTO evaluation_questions 
         (evaluation_id, question_text, question_type, points, order_index, explanation) 
         VALUES ($1, $2, $3, $4, $5, $6) 
         RETURNING *`,
                [evaluation.id, questionData.question_text, questionData.question_type,
                questionData.points, questionData.order_index, questionData.explanation]
            );

            const question = questionResult[0];

            for (const optionData of questionData.options) {
                await query(
                    `INSERT INTO question_options 
           (question_id, option_text, is_correct, order_index) 
           VALUES ($1, $2, $3, $4)`,
                    [question.id, optionData.option_text, optionData.is_correct, optionData.order_index]
                );
            }
        }

        return NextResponse.json(evaluation);
    } catch (error) {
        return NextResponse.json(
            { error: 'Error creating evaluation' },
            { status: 500 }
        );
    }
}

// ===== app\api\evaluations\[id]\questions\route.ts =====

import { NextRequest, NextResponse } from 'next/server';
import { query } from '@/lib/db';

export async function GET(
    request: NextRequest,
    { params }: { params: { id: string } }
) {
    try {
        const { searchParams } = new URL(request.url);
        const userId = searchParams.get('userId');
        const attemptId = searchParams.get('attemptId');

        if (!userId || !attemptId) {
            return NextResponse.json(
                { error: 'userId and attemptId are required' },
                { status: 400 }
            );
        }

        // Verificar que el intento pertenece al usuario
        const attemptCheck = await query(
            'SELECT id FROM evaluation_attempts WHERE id = $1 AND user_id = $2 AND status = $3',
            [attemptId, userId, 'in-progress']
        );

        if (attemptCheck.length === 0) {
            return NextResponse.json(
                { error: 'Invalid attempt' },
                { status: 400 }
            );
        }

        // Obtener configuración de la evaluación
        const evaluation = await query(
            'SELECT shuffle_questions, shuffle_options FROM evaluations WHERE id = $1',
            [params.id]
        );

        if (evaluation.length === 0) {
            return NextResponse.json(
                { error: 'Evaluation not found' },
                { status: 404 }
            );
        }

        // Obtener preguntas (mezclar si está configurado)
        let questionsQuery = `
      SELECT 
        eq.id,
        eq.question_text,
        eq.question_type,
        eq.points,
        eq.explanation,
        json_agg(
          json_build_object(
            'id', qo.id,
            'option_text', qo.option_text,
            'order_index', qo.order_index
          ) ORDER BY ${evaluation[0].shuffle_options ? 'RANDOM()' : 'qo.order_index'}
        ) as options
      FROM evaluation_questions eq
      LEFT JOIN question_options qo ON eq.id = qo.question_id
      WHERE eq.evaluation_id = $1
      GROUP BY eq.id
      ${evaluation[0].shuffle_questions ? 'ORDER BY RANDOM()' : 'ORDER BY eq.order_index'}
    `;

        const questions = await query(questionsQuery, [params.id]);

        // Ocultar respuestas correctas
        const sanitizedQuestions = questions.map((q: any) => ({
            ...q,
            options: q.options.map((opt: any) => ({
                id: opt.id,
                option_text: opt.option_text,
                order_index: opt.order_index
            }))
        }));

        return NextResponse.json(sanitizedQuestions);
    } catch (error) {
        return NextResponse.json(
            { error: 'Error fetching questions' },
            { status: 500 }
        );
    }
}

// ===== app\api\evaluations\[id]\results\route.ts =====

import { NextRequest, NextResponse } from 'next/server';
import { query } from '@/lib/db';

export async function GET(
    request: NextRequest,
    { params }: { params: { id: string } }
) {
    try {
        const { searchParams } = new URL(request.url);
        const userId = searchParams.get('userId');

        if (!userId) {
            return NextResponse.json(
                { error: 'userId is required' },
                { status: 400 }
            );
        }

        // Obtener todos los intentos del usuario
        const attempts = await query(`
      SELECT 
        ea.*,
        e.title as evaluation_title,
        e.passing_score
      FROM evaluation_attempts ea
      LEFT JOIN evaluations e ON ea.evaluation_id = e.id
      WHERE ea.evaluation_id = $1 AND ea.user_id = $2
      ORDER BY ea.attempt_number DESC
    `, [params.id, userId]);

        // Obtener estadísticas
        const stats = await query(`
      SELECT 
        COUNT(*) as total_attempts,
        MAX(score) as best_score,
        AVG(score) as average_score,
        COUNT(CASE WHEN score >= passing_score THEN 1 END) as passed_attempts
      FROM evaluation_attempts ea
      LEFT JOIN evaluations e ON ea.evaluation_id = e.id
      WHERE ea.evaluation_id = $1 AND ea.user_id = $2
    `, [params.id, userId]);

        return NextResponse.json({
            attempts,
            statistics: stats[0]
        });
    } catch (error) {
        return NextResponse.json(
            { error: 'Error fetching results' },
            { status: 500 }
        );
    }
}

// ===== app\api\evaluations\[id]\route.ts =====

import { NextRequest, NextResponse } from 'next/server';
import { query } from '@/lib/db';

export async function GET(
  request: NextRequest,
  { params }: { params: { id: string } }
) {
  try {
    // Obtener evaluación
    const evaluationResult = await query(`
      SELECT 
        e.*,
        c.title as course_title,
        cm.title as module_title,
        u.first_name as created_by_first_name,
        u.last_name as created_by_last_name
      FROM evaluations e
      LEFT JOIN courses c ON e.course_id = c.id
      LEFT JOIN course_modules cm ON e.module_id = cm.id
      LEFT JOIN users u ON e.created_by = u.id
      WHERE e.id = $1 AND e.is_active = true
    `, [params.id]);

    if (evaluationResult.length === 0) {
      return NextResponse.json(
        { error: 'Evaluation not found' },
        { status: 404 }
      );
    }

    const evaluation = evaluationResult[0];

    // Obtener preguntas con opciones
    const questionsResult = await query(`
      SELECT 
        eq.*,
        json_agg(
          json_build_object(
            'id', qo.id,
            'option_text', qo.option_text,
            'is_correct', qo.is_correct,
            'order_index', qo.order_index
          ) ORDER BY qo.order_index
        ) as options
      FROM evaluation_questions eq
      LEFT JOIN question_options qo ON eq.id = qo.question_id
      WHERE eq.evaluation_id = $1
      GROUP BY eq.id
      ORDER BY eq.order_index
    `, [params.id]);

    return NextResponse.json({
      ...evaluation,
      questions: questionsResult
    });
  } catch (error) {
    return NextResponse.json(
      { error: 'Error fetching evaluation' },
      { status: 500 }
    );
  }
}

// ===== app\api\evaluations\[id]\start\route.ts =====

import { NextRequest, NextResponse } from 'next/server';
import { query } from '@/lib/db';

export async function POST(
    request: NextRequest,
    { params }: { params: { id: string } }
) {
    try {
        const { userId } = await request.json();

        // Verificar intentos previos
        const previousAttempts = await query(
            `SELECT COUNT(*) as attempt_count 
       FROM evaluation_attempts 
       WHERE evaluation_id = $1 AND user_id = $2 AND status = 'completed'`,
            [params.id, userId]
        );

        const attemptCount = parseInt(previousAttempts[0]?.attempt_count || '0');

        // Verificar máximo de intentos
        const evaluation = await query(
            'SELECT max_attempts FROM evaluations WHERE id = $1',
            [params.id]
        );

        if (evaluation.length === 0) {
            return NextResponse.json(
                { error: 'Evaluation not found' },
                { status: 404 }
            );
        }

        if (attemptCount >= evaluation[0].max_attempts) {
            return NextResponse.json(
                { error: 'Maximum attempts reached' },
                { status: 400 }
            );
        }

        // Crear nuevo intento
        const attemptResult = await query(
            `INSERT INTO evaluation_attempts 
       (evaluation_id, user_id, attempt_number) 
       VALUES ($1, $2, $3) 
       RETURNING *`,
            [params.id, userId, attemptCount + 1]
        );

        return NextResponse.json(attemptResult[0]);
    } catch (error) {
        return NextResponse.json(
            { error: 'Error starting evaluation' },
            { status: 500 }
        );
    }
}

// ===== app\api\evaluations\[id]\submit\route.ts =====

import { NextRequest, NextResponse } from 'next/server';
import { query } from '@/lib/db';

export async function POST(
    request: NextRequest,
    { params }: { params: { id: string } }
) {
    try {
        const { userId, attemptId, answers, timeSpent } = await request.json();

        // Verificar intento
        const attempt = await query(
            'SELECT * FROM evaluation_attempts WHERE id = $1 AND user_id = $2 AND status = $3',
            [attemptId, userId, 'in-progress']
        );

        if (attempt.length === 0) {
            return NextResponse.json(
                { error: 'Invalid attempt' },
                { status: 400 }
            );
        }

        // Calcular puntaje
        let correctAnswers = 0;
        let totalQuestions = 0;

        for (const answer of answers) {
            const correctOptions = await query(
                'SELECT id FROM question_options WHERE question_id = $1 AND is_correct = true',
                [answer.questionId]
            );

            totalQuestions++;

            // Verificar si la respuesta es correcta
            const userSelected = answer.selectedOptions;
            const correctIds = correctOptions.map((opt: any) => opt.id);

            const isCorrect =
                userSelected.length === correctIds.length &&
                userSelected.every((optId: string) => correctIds.includes(optId));

            if (isCorrect) {
                correctAnswers++;
            }
        }

        const score = totalQuestions > 0 ? Math.round((correctAnswers / totalQuestions) * 100) : 0;

        // Actualizar intento
        const updatedAttempt = await query(
            `UPDATE evaluation_attempts 
       SET completed_at = NOW(), time_spent = $1, score = $2, status = 'completed', user_answers = $3
       WHERE id = $4 
       RETURNING *`,
            [timeSpent, score, JSON.stringify(answers), attemptId]
        );

        return NextResponse.json({
            attempt: updatedAttempt[0],
            score,
            correctAnswers,
            totalQuestions,
            passed: score >= (await query('SELECT passing_score FROM evaluations WHERE id = $1', [params.id]))[0].passing_score
        });
    } catch (error) {
        return NextResponse.json(
            { error: 'Error submitting evaluation' },
            { status: 500 }
        );
    }
}

// ===== app\api\media\route.ts =====

import { NextRequest, NextResponse } from 'next/server';
import { query } from '@/lib/db';

export async function GET(request: NextRequest) {
    try {
        const { searchParams } = new URL(request.url);
        const type = searchParams.get('type');
        const courseId = searchParams.get('courseId');
        const moduleId = searchParams.get('moduleId');

        let queryStr = `
      SELECT m.*, 
             u.first_name as uploaded_by_first_name,
             u.last_name as uploaded_by_last_name,
             c.title as course_title,
             mt.name as media_type
      FROM media m
      LEFT JOIN users u ON m.uploaded_by = u.id
      LEFT JOIN courses c ON m.course_id = c.id
      LEFT JOIN media_types mt ON m.media_type_id = mt.id
      WHERE m.deleted_at IS NULL
    `;

        const params: any[] = [];
        let paramCount = 1;

        if (type) {
            queryStr += ` AND mt.name = $${paramCount}`;
            params.push(type);
            paramCount++;
        }

        if (courseId) {
            queryStr += ` AND m.course_id = $${paramCount}`;
            params.push(courseId);
            paramCount++;
        }

        if (moduleId) {
            queryStr += ` AND m.module_id = $${paramCount}`;
            params.push(moduleId);
            paramCount++;
        }

        queryStr += ' ORDER BY m.created_at DESC';

        const media = await query(queryStr, params);
        return NextResponse.json(media.rows);
    } catch (error) {
        console.error('Error fetching media:', error);
        return NextResponse.json(
            { error: 'Error fetching media' },
            { status: 500 }
        );
    }
}

export async function DELETE(request: NextRequest) {
    try {
        const { searchParams } = new URL(request.url);
        const id = searchParams.get('id');

        if (!id) {
            return NextResponse.json(
                { error: 'ID is required' },
                { status: 400 }
            );
        }

        await query(
            'UPDATE media SET deleted_at = NOW() WHERE id = $1',
            [id]
        );

        return NextResponse.json({ message: 'Media deleted successfully' });
    } catch (error) {
        console.error('Error deleting media:', error);
        return NextResponse.json(
            { error: 'Error deleting media' },
            { status: 500 }
        );
    }
}

// ===== app\api\media\stream\[filename]\route.ts =====

import { NextRequest, NextResponse } from 'next/server';
import { createReadStream, existsSync, statSync } from 'fs';
import { join } from 'path';

export async function GET(
    request: NextRequest,
    { params }: { params: { filename: string } }
) {
    try {
        const filePath = join(process.cwd(), 'public', 'uploads', params.filename);

        if (!existsSync(filePath)) {
            return NextResponse.json({ error: 'File not found' }, { status: 404 });
        }

        const fileStats = statSync(filePath);
        const fileStream = createReadStream(filePath);

        // Determinar content type basado en extensión
        let contentType = 'application/octet-stream';
        if (params.filename.endsWith('.mp4')) contentType = 'video/mp4';
        else if (params.filename.endsWith('.jpg') || params.filename.endsWith('.jpeg')) contentType = 'image/jpeg';
        else if (params.filename.endsWith('.png')) contentType = 'image/png';
        else if (params.filename.endsWith('.pdf')) contentType = 'application/pdf';

        const headers = new Headers();
        headers.set('Content-Type', contentType);
        headers.set('Content-Length', fileStats.size.toString());
        headers.set('Content-Disposition', `inline; filename="${params.filename}"`);

        return new NextResponse(fileStream as any, { headers });

    } catch (error) {
        return NextResponse.json(
            { error: 'Internal server error' },
            { status: 500 }
        );
    }
}

// ===== app\api\media\upload\route.ts =====

import { NextRequest, NextResponse } from 'next/server';
import { writeFile, mkdir } from 'fs/promises';
import { join } from 'path';
import { v4 as uuidv4 } from 'uuid';
import { query } from '@/lib/db';

export async function POST(request: NextRequest) {
    try {
        const formData = await request.formData();
        const file = formData.get('file') as File;
        const courseId = formData.get('courseId') as string;
        const moduleId = formData.get('moduleId') as string;
        const title = formData.get('title') as string;
        const description = formData.get('description') as string;

        if (!file) {
            return NextResponse.json(
                { error: 'No se proporcionó ningún archivo' },
                { status: 400 }
            );
        }

        // Validar tipo de archivo
        const allowedTypes = [
            'image/jpeg', 'image/png', 'image/gif', 'image/webp',
            'video/mp4', 'video/webm', 'video/quicktime'
        ];

        if (!allowedTypes.includes(file.type)) {
            return NextResponse.json(
                { error: 'Tipo de archivo no permitido' },
                { status: 400 }
            );
        }

        // Validar tamaño (máximo 100MB)
        const maxSize = 100 * 1024 * 1024;
        if (file.size > maxSize) {
            return NextResponse.json(
                { error: 'El archivo es demasiado grande (máximo 100MB)' },
                { status: 400 }
            );
        }

        const uploadsDir = join(process.cwd(), 'public', 'uploads');
        await mkdir(uploadsDir, { recursive: true });

        const bytes = await file.arrayBuffer();
        const buffer = Buffer.from(bytes);

        // Generar nombre único
        const fileExtension = file.name.split('.').pop();
        const uniqueName = `${uuidv4()}.${fileExtension}`;
        const filePath = join(uploadsDir, uniqueName);

        // Guardar archivo
        await writeFile(filePath, buffer);

        // Determinar tipo de media
        const mediaType = file.type.startsWith('image') ? 'image' :
            file.type.startsWith('video') ? 'video' : 'document';

        // Insertar en base de datos
        const result = await query(
            `INSERT INTO media 
       (title, description, filename, original_filename, file_path, 
        file_size, file_type, media_type_id, course_id, module_id, uploaded_by) 
       VALUES ($1, $2, $3, $4, $5, $6, $7, 
               (SELECT id FROM media_types WHERE name = $8), $9, $10, $11) 
       RETURNING *`,
            [
                title || file.name,
                description || '',
                uniqueName,
                file.name,
                `/uploads/${uniqueName}`,
                file.size,
                file.type,
                mediaType,
                courseId || null,
                moduleId || null,
                'admin' // ID del usuario que sube (deberías obtenerlo de la sesión)
            ]
        );

        return NextResponse.json({
            success: true,
            message: 'Archivo subido exitosamente',
            file: result.rows[0]
        });

    } catch (error) {
        console.error('Error en upload:', error);
        return NextResponse.json(
            { error: 'Error interno del servidor' },
            { status: 500 }
        );
    }
}

export const config = {
    api: {
        bodyParser: false,
    },
};

// ===== app\api\modules\route.ts =====

import { NextRequest, NextResponse } from 'next/server';
import { query } from '@/lib/db';

export async function GET() {
    try {
        const modules = await query(`
      SELECT 
        cm.*,
        c.title as course_title,
        m.filename as media_filename,
        m.file_type as media_type
      FROM course_modules cm
      LEFT JOIN courses c ON cm.course_id = c.id
      LEFT JOIN media m ON cm.media_id = m.id
      WHERE cm.deleted_at IS NULL
      ORDER BY cm.created_at DESC
    `);

        return NextResponse.json(modules);
    } catch (error) {
        return NextResponse.json(
            { error: 'Error fetching modules' },
            { status: 500 }
        );
    }
}

export async function POST(request: NextRequest) {
    try {
        const body = await request.json();
        const { course_id, title, description, content_type, media_id, order_index, duration, is_published } = body;

        const result = await query(
            `INSERT INTO course_modules 
       (course_id, title, description, content_type, media_id, order_index, duration, is_published) 
       VALUES ($1, $2, $3, $4, $5, $6, $7, $8) 
       RETURNING *`,
            [course_id, title, description, content_type, media_id, order_index, duration, is_published]
        );

        return NextResponse.json(result[0]);
    } catch (error) {
        return NextResponse.json(
            { error: 'Error creating module' },
            { status: 500 }
        );
    }
}

// ===== app\api\modules\[id]\route.ts =====

import { NextRequest, NextResponse } from 'next/server';
import { query } from '@/lib/db';

export async function GET(
    request: NextRequest,
    { params }: { params: { id: string } }
) {
    try {
        const module = await query(`
      SELECT 
        cm.*,
        c.title as course_title,
        m.filename as media_filename,
        m.file_type as media_type,
        m.file_path as media_path,
        m.thumbnail_url as media_thumbnail,
        m.duration as media_duration
      FROM course_modules cm
      LEFT JOIN courses c ON cm.course_id = c.id
      LEFT JOIN media m ON cm.media_id = m.id
      WHERE cm.id = $1 AND cm.deleted_at IS NULL
    `, [params.id]);

        if (module.length === 0) {
            return NextResponse.json(
                { error: 'Module not found' },
                { status: 404 }
            );
        }

        return NextResponse.json(module[0]);
    } catch (error) {
        return NextResponse.json(
            { error: 'Error fetching module' },
            { status: 500 }
        );
    }
}

export async function PUT(
    request: NextRequest,
    { params }: { params: { id: string } }
) {
    try {
        const body = await request.json();
        const { title, description, content_type, media_id, order_index, duration, is_published } = body;

        const result = await query(
            `UPDATE course_modules 
       SET title = $1, description = $2, content_type = $3, media_id = $4, 
           order_index = $5, duration = $6, is_published = $7, updated_at = NOW()
       WHERE id = $8 AND deleted_at IS NULL
       RETURNING *`,
            [title, description, content_type, media_id, order_index, duration, is_published, params.id]
        );

        return NextResponse.json(result[0]);
    } catch (error) {
        return NextResponse.json(
            { error: 'Error updating module' },
            { status: 500 }
        );
    }
}

// ===== app\api\progress\route.ts =====

import { NextRequest, NextResponse } from 'next/server';
import { query } from '@/lib/db';

export async function GET(request: NextRequest) {
    try {
        const { searchParams } = new URL(request.url);
        const userId = searchParams.get('userId');
        const courseId = searchParams.get('courseId');

        if (!userId || !courseId) {
            return NextResponse.json(
                { error: 'userId and courseId are required' },
                { status: 400 }
            );
        }

        // Obtener progreso general del curso
        const courseProgress = await query(`
      SELECT 
        COUNT(DISTINCT mp.module_id) as completed_modules,
        COUNT(DISTINCT cm.id) as total_modules,
        COALESCE(SUM(mp.time_spent), 0) as total_time_spent,
        e.progress_percentage
      FROM user_course_enrollments e
      LEFT JOIN course_modules cm ON e.course_id = cm.course_id AND cm.deleted_at IS NULL
      LEFT JOIN user_module_progress mp ON e.user_id = mp.user_id AND cm.id = mp.module_id
      WHERE e.user_id = $1 AND e.course_id = $2
      GROUP BY e.progress_percentage
    `, [userId, courseId]);

        // Obtener progreso por módulo
        const moduleProgress = await query(`
      SELECT 
        cm.id as module_id,
        cm.title as module_title,
        cm.order_index,
        mp.status,
        mp.time_spent,
        mp.score,
        mp.completed_at,
        CASE 
          WHEN mp.status = 'completed' THEN 100
          WHEN mp.status = 'in-progress' THEN 50
          ELSE 0 
        END as percentage
      FROM course_modules cm
      LEFT JOIN user_module_progress mp ON cm.id = mp.module_id AND mp.user_id = $1
      WHERE cm.course_id = $2 AND cm.deleted_at IS NULL
      ORDER BY cm.order_index
    `, [userId, courseId]);

        return NextResponse.json({
            courseProgress: courseProgress.rows[0] || { completed_modules: 0, total_modules: 0, total_time_spent: 0, progress_percentage: 0 },
            moduleProgress: moduleProgress.rows
        });
    } catch (error) {
        console.error('Error fetching progress:', error);
        return NextResponse.json(
            { error: 'Error fetching progress' },
            { status: 500 }
        );
    }
}

export async function POST(request: NextRequest) {
    try {
        const body = await request.json();
        const { user_id, module_id, course_id, status, time_spent, score } = body;

        // Verificar si ya existe progreso
        const existing = await query(
            'SELECT id FROM user_module_progress WHERE user_id = $1 AND module_id = $2',
            [user_id, module_id]
        );

        let result;
        if (existing.rows.length > 0) {
            // Actualizar progreso existente
            result = await query(
                `UPDATE user_module_progress 
         SET status = $1, time_spent = $2, score = $3, 
             completed_at = CASE WHEN $1 = 'completed' THEN NOW() ELSE completed_at END,
             updated_at = NOW()
         WHERE user_id = $4 AND module_id = $5
         RETURNING *`,
                [status, time_spent, score, user_id, module_id]
            );
        } else {
            // Crear nuevo progreso
            result = await query(
                `INSERT INTO user_module_progress 
         (user_id, module_id, course_id, status, time_spent, score, completed_at) 
         VALUES ($1, $2, $3, $4, $5, $6, CASE WHEN $4 = 'completed' THEN NOW() ELSE NULL END) 
         RETURNING *`,
                [user_id, module_id, course_id, status, time_spent, score]
            );
        }

        // Actualizar progreso general del curso
        await query(`
      UPDATE user_course_enrollments 
      SET progress_percentage = (
        SELECT COALESCE(ROUND((COUNT(DISTINCT mp.module_id) * 100.0 / NULLIF(COUNT(DISTINCT cm.id), 0))), 0)
        FROM course_modules cm
        LEFT JOIN user_module_progress mp ON cm.id = mp.module_id AND mp.user_id = $1 AND mp.status = 'completed'
        WHERE cm.course_id = $2 AND cm.deleted_at IS NULL
      )
      WHERE user_id = $1 AND course_id = $2
    `, [user_id, course_id]);

        return NextResponse.json(result.rows[0]);
    } catch (error) {
        console.error('Error saving progress:', error);
        return NextResponse.json(
            { error: 'Error saving progress' },
            { status: 500 }
        );
    }
}

// ===== app\api\user-progress\route.ts =====

// app/api/user-progress/route.ts
import { NextRequest, NextResponse } from 'next/server';

export async function POST(request: NextRequest) {
    try {
        const body = await request.json();
        const { moduleId, courseId, status, timeSpent } = body;

        // Aquí iría la lógica para guardar en la base de datos
        // Simulamos una respuesta exitosa
        return NextResponse.json({
            success: true,
            message: 'Progreso guardado exitosamente',
            data: {
                moduleId,
                courseId,
                status,
                timeSpent,
                completedAt: new Date().toISOString()
            }
        });

    } catch (error) {
        return NextResponse.json(
            { error: 'Error al guardar el progreso' },
            { status: 500 }
        );
    }
}

export async function GET(request: NextRequest) {
    const { searchParams } = new URL(request.url);
    const courseId = searchParams.get('courseId');

    // Simular datos de progreso (en producción vendrían de la base de datos)
    const mockProgress = {
        courseId,
        completedModules: 2,
        totalModules: 5,
        totalTimeSpent: 3540, // segundos
        modules: [
            { moduleId: 'mod1', status: 'completed', percentage: 100 },
            { moduleId: 'mod2', status: 'completed', percentage: 100 },
            { moduleId: 'mod3', status: 'in-progress', percentage: 45 },
            { moduleId: 'mod4', status: 'not-started', percentage: 0 },
            { moduleId: 'mod5', status: 'not-started', percentage: 0 }
        ]
    };

    return NextResponse.json(mockProgress);
}

// ===== app\api\users\route.ts =====

import { NextRequest, NextResponse } from 'next/server';
import { query } from '@/lib/db';
import bcrypt from 'bcryptjs';

export async function GET() {
    try {
        const users = await query(`
      SELECT 
        id, email, first_name, last_name, role, status, 
        profile_image_url, phone_number, department, position,
        last_login, created_at, updated_at
      FROM users 
      WHERE deleted_at IS NULL
      ORDER BY created_at DESC
    `);

        return NextResponse.json(users.rows);
    } catch (error) {
        console.error('Error fetching users:', error);
        return NextResponse.json(
            { error: 'Error fetching users' },
            { status: 500 }
        );
    }
}

export async function POST(request: NextRequest) {
    try {
        const body = await request.json();
        const { email, first_name, last_name, role, password, phone_number, department, position } = body;

        console.log('Datos recibidos para nuevo usuario:', body);

        // Validaciones básicas
        if (!email || !first_name || !last_name || !password) {
            console.error('Datos incompletos:', { email, first_name, last_name, password });
            return NextResponse.json(
                { error: 'Email, nombre, apellido y contraseña son requeridos' },
                { status: 400 }
            );
        }

        // Validar formato de email
        const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
        if (!emailRegex.test(email)) {
            return NextResponse.json(
                { error: 'El formato del email no es válido' },
                { status: 400 }
            );
        }

        // Validar longitud de contraseña
        if (password.length < 6) {
            return NextResponse.json(
                { error: 'La contraseña debe tener al menos 6 caracteres' },
                { status: 400 }
            );
        }

        // Verificar si el usuario ya existe
        const existingUser = await query(
            'SELECT id FROM users WHERE email = $1 AND deleted_at IS NULL',
            [email]
        );

        if (existingUser.rows.length > 0) {
            return NextResponse.json(
                { error: 'El usuario ya existe' },
                { status: 400 }
            );
        }

        // Hash de la contraseña
        const saltRounds = 12;
        const password_hash = await bcrypt.hash(password, saltRounds);

        // Insertar usuario
        const result = await query(
            `INSERT INTO users 
       (email, first_name, last_name, role, password_hash, phone_number, department, position) 
       VALUES ($1, $2, $3, $4, $5, $6, $7, $8) 
       RETURNING id, email, first_name, last_name, role, status, created_at`,
            [
                email,
                first_name,
                last_name,
                role || 'student',
                password_hash,
                phone_number || null,
                department || null,
                position || null
            ]
        );

        console.log('Usuario creado exitosamente:', result.rows[0]);

        return NextResponse.json(result.rows[0], { status: 201 });

    } catch (error) {
        console.error('Error creating user:', error);
        return NextResponse.json(
            { error: 'Error interno del servidor al crear usuario' },
            { status: 500 }
        );
    }
}

export async function DELETE(request: NextRequest) {
    try {
        const { searchParams } = new URL(request.url);
        const id = searchParams.get('id');

        if (!id) {
            return NextResponse.json(
                { error: 'ID de usuario es requerido' },
                { status: 400 }
            );
        }

        // Verificar si el usuario existe
        const userCheck = await query(
            'SELECT id FROM users WHERE id = $1 AND deleted_at IS NULL',
            [id]
        );

        if (userCheck.rows.length === 0) {
            return NextResponse.json(
                { error: 'Usuario no encontrado' },
                { status: 404 }
            );
        }

        // Soft delete (marcar como eliminado)
        await query(
            'UPDATE users SET deleted_at = NOW() WHERE id = $1',
            [id]
        );

        return NextResponse.json({
            message: 'Usuario eliminado correctamente'
        });

    } catch (error) {
        console.error('Error deleting user:', error);
        return NextResponse.json(
            { error: 'Error interno del servidor al eliminar usuario' },
            { status: 500 }
        );
    }
}

// ===== app\api\users\[id]\certificates\route.ts =====

import { NextRequest, NextResponse } from 'next/server';
import { query } from '@/lib/db';

export async function GET(
    request: NextRequest,
    { params }: { params: { id: string } }
) {
    try {
        const { searchParams } = new URL(request.url);
        const status = searchParams.get('status');

        let queryStr = `
      SELECT 
        c.*,
        crs.title as course_title,
        CASE 
          WHEN c.expiration_date < NOW() THEN 'expired'
          WHEN c.expiration_date < NOW() + INTERVAL '30 days' THEN 'expiring_soon'
          ELSE 'valid'
        END as validity_status,
        EXTRACT(DAY FROM c.expiration_date - NOW()) as days_remaining
      FROM certificates c
      JOIN courses crs ON c.course_id = crs.id
      WHERE c.user_id = $1
    `;

        const queryParams: any[] = [params.id];

        if (status) {
            queryStr += ` AND validity_status = $2`;
            queryParams.push(status);
        }

        queryStr += ' ORDER BY c.issued_at DESC';

        const certificates = await query(queryStr, queryParams);
        return NextResponse.json(certificates.rows);
    } catch (error) {
        console.error('Error fetching user certificates:', error);
        return NextResponse.json(
            { error: 'Error fetching user certificates' },
            { status: 500 }
        );
    }
}

// ===== app\api\users\[id]\courses\route.ts =====

import { NextRequest, NextResponse } from 'next/server';
import { query } from '@/lib/db';

export async function GET(
    request: NextRequest,
    { params }: { params: { id: string } }
) {
    try {
        const { searchParams } = new URL(request.url);
        const status = searchParams.get('status');

        let queryStr = `
      SELECT 
        e.*,
        c.title as course_title,
        c.category as course_category,
        c.level as course_level,
        c.thumbnail_url as course_thumbnail,
        COUNT(DISTINCT CASE WHEN mp.status = 'completed' THEN mp.module_id END) as completed_modules,
        COUNT(DISTINCT cm.id) as total_modules,
        CASE 
          WHEN COUNT(DISTINCT cm.id) > 0 THEN 
            ROUND((COUNT(DISTINCT CASE WHEN mp.status = 'completed' THEN mp.module_id END) * 100.0 / COUNT(DISTINCT cm.id))) 
          ELSE 0 
        END as progress_percentage
      FROM user_course_enrollments e
      JOIN courses c ON e.course_id = c.id
      LEFT JOIN course_modules cm ON c.id = cm.course_id AND cm.deleted_at IS NULL
      LEFT JOIN user_module_progress mp ON e.user_id = mp.user_id AND cm.id = mp.module_id
      WHERE e.user_id = $1
    `;

        const queryParams: any[] = [params.id];

        if (status) {
            queryStr += ` AND e.status = $2`;
            queryParams.push(status);
        }

        queryStr += ' GROUP BY e.id, c.title, c.category, c.level, c.thumbnail_url ORDER BY e.enrolled_at DESC';

        const courses = await query(queryStr, queryParams);
        return NextResponse.json(courses.rows);
    } catch (error) {
        console.error('Error fetching user courses:', error);
        return NextResponse.json(
            { error: 'Error fetching user courses' },
            { status: 500 }
        );
    }
}

// ===== app\api\users\[id]\dashboard\route.ts =====

import { NextRequest, NextResponse } from 'next/server';
import { query } from '@/lib/db';

export async function GET(
    request: NextRequest,
    { params }: { params: { id: string } }
) {
    try {
        const userId = params.id;

        // Obtener resumen general
        const [summary, certificates, recentProgress, upcomingExpirations] = await Promise.all([
            // Resumen general
            query('SELECT * FROM vw_user_progress_summary WHERE user_id = $1', [userId]),

            // Certificados
            query('SELECT * FROM vw_user_certificates WHERE user_id = $1 ORDER BY issued_at DESC', [userId]),

            // Progreso reciente
            query(`
        SELECT * FROM vw_user_course_progress 
        WHERE user_id = $1 
        ORDER BY enrolled_at DESC 
        LIMIT 5
      `, [userId]),

            // Certificados próximos a expirar
            query(`
        SELECT * FROM vw_user_certificates 
        WHERE user_id = $1 AND validity_status = 'expiring_soon'
        ORDER BY expiration_date ASC
        LIMIT 5
      `, [userId])
        ]);

        // Estadísticas adicionales
        const stats = await query(`
      SELECT 
        COUNT(DISTINCT course_id) as active_courses,
        SUM(total_time_spent) as total_learning_time,
        AVG(progress_percentage) as overall_progress,
        COUNT(DISTINCT CASE WHEN enrollment_status = 'completed' THEN course_id END) as completed_this_month
      FROM vw_user_course_progress 
      WHERE user_id = $1 
        AND enrolled_at >= DATE_TRUNC('month', CURRENT_DATE)
    `, [userId]);

        return NextResponse.json({
            summary: summary[0] || {},
            certificates: certificates || [],
            recentProgress: recentProgress || [],
            upcomingExpirations: upcomingExpirations || [],
            statistics: stats[0] || {}
        });
    } catch (error) {
        return NextResponse.json(
            { error: 'Error fetching user dashboard' },
            { status: 500 }
        );
    }
}

// ===== app\certificates\page.tsx =====

'use client';

import { useSafeQuery } from "@/hooks/useSafeQuery";
import Sidebar from "@/components/sidebar";
import CertificateGenerator from "@/components/certificate-generator";
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card";
import { Badge } from "@/components/ui/badge";
import { Button } from "@/components/ui/button";
import { Award, Download, Eye, QrCode } from "lucide-react";
import { Certificate } from "@/types";
import { exportCertificatesToExcel } from "@/lib/exportUtils";
import { useToast } from "@/hooks/use-toast";

export default function CertificatesPage() {
    const { toast } = useToast();

    const { data: certificates, isLoading: certificatesLoading } = useSafeQuery<Certificate[]>({
        queryKey: ['/api/certificates'],
    });

    const handleExportCertificates = () => {
        if (certificates && certificates.length > 0) {
            exportCertificatesToExcel(certificates);
            toast({
                title: "Exportación exitosa",
                description: "Los datos de certificados han sido exportados a Excel.",
            });
        } else {
            toast({
                title: "Sin datos",
                description: "No hay certificados para exportar.",
                variant: "destructive",
            });
        }
    };

    return (
        <div className="flex h-screen overflow-hidden bg-gray-50">
            <Sidebar />

            <div className="flex-1 flex flex-col overflow-hidden">
                <header className="bg-white shadow-sm border-b border-gray-200 px-6 py-4">
                    <div className="flex items-center justify-between">
                        <div className="flex items-center space-x-3">
                            <Award className="text-blue-600" size={28} />
                            <div>
                                <h2 className="text-2xl font-bold text-gray-900">Certificados</h2>
                                <p className="text-gray-600">Gestiona y genera certificados de completación</p>
                            </div>
                        </div>
                        <Button
                            variant="outline"
                            onClick={handleExportCertificates}
                            disabled={!certificates || certificates.length === 0}
                        >
                            <Download className="mr-2" size={16} />
                            Exportar
                        </Button>
                    </div>
                </header>

                <main className="flex-1 overflow-auto p-6 space-y-6">
                    <CertificateGenerator />

                    <div className="bg-white rounded-lg shadow border border-gray-200">
                        <div className="p-4 border-b border-gray-200">
                            <h3 className="text-lg font-semibold text-gray-900">Certificados Emitidos</h3>
                            <p className="text-sm text-gray-600">Historial de certificados generados</p>
                        </div>

                        <div className="p-4">
                            {certificatesLoading ? (
                                <div className="flex justify-center items-center h-32">
                                    <div className="text-center">
                                        <div className="animate-spin rounded-full h-6 w-6 border-b-2 border-blue-600 mx-auto mb-2"></div>
                                        <p className="text-gray-600 text-sm">Cargando certificados...</p>
                                    </div>
                                </div>
                            ) : certificates && certificates.length > 0 ? (
                                <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4">
                                    {certificates.map((certificate) => (
                                        <Card key={certificate.id} className="hover:shadow-md transition-shadow">
                                            <CardHeader className="pb-3">
                                                <div className="flex items-start justify-between">
                                                    <div className="w-10 h-10 bg-yellow-100 rounded-lg flex items-center justify-center">
                                                        <Award className="text-yellow-600" size={20} />
                                                    </div>
                                                    <Badge variant="outline" className="text-xs">
                                                        {certificate.certificateNumber}
                                                    </Badge>
                                                </div>
                                                <CardTitle className="text-sm font-medium">
                                                    Certificado de Completación
                                                </CardTitle>
                                                <CardDescription className="text-xs">
                                                    Emitido por {certificate.issuedBy}
                                                </CardDescription>
                                            </CardHeader>
                                            <CardContent className="pt-0">
                                                <div className="space-y-3">
                                                    <div className="text-xs text-gray-600">
                                                        <p>Fecha: {new Date(certificate.issuedAt).toLocaleDateString('es-ES')}</p>
                                                        <p>Puntuación: {certificate.score}%</p>
                                                    </div>
                                                    <div className="flex items-center space-x-2">
                                                        <Button size="sm" variant="outline" className="flex-1">
                                                            <Eye className="mr-1" size={12} />
                                                            Ver
                                                        </Button>
                                                        <Button size="sm" variant="outline" className="flex-1">
                                                            <Download className="mr-1" size={12} />
                                                            PDF
                                                        </Button>
                                                        <Button size="sm" variant="outline">
                                                            <QrCode size={12} />
                                                        </Button>
                                                    </div>
                                                </div>
                                            </CardContent>
                                        </Card>
                                    ))}
                                </div>
                            ) : (
                                <div className="text-center py-8">
                                    <Award className="mx-auto h-12 w-12 text-gray-400 mb-4" />
                                    <h3 className="text-sm font-medium text-gray-900 mb-2">No hay certificados</h3>
                                    <p className="text-sm text-gray-600">Los certificados aparecerán aquí una vez generados</p>
                                </div>
                            )}
                        </div>
                    </div>
                </main>
            </div>
        </div>
    );
}

// ===== app\course-viewer\page.tsx =====

'use client';

import { useSafeQuery } from "@/hooks/useSafeQuery";
import { useParams } from "next/navigation";
import Sidebar from "@/components/sidebar";
import MultimediaViewer from "@/components/multimedia-viewer";
import { ArrowLeft } from "lucide-react";
import { Button } from "@/components/ui/button";
import Link from "next/link";
import { Course, CourseModule } from "@/types";

interface CourseViewerProps {
    courseId: string;
}

export default function CourseViewer({ courseId }: CourseViewerProps) {
    const params = useParams();

    const { data: course, isLoading: courseLoading } = useSafeQuery<Course>({
        queryKey: ['/api/courses', courseId],
        enabled: !!courseId,
    });

    const { data: modules, isLoading: modulesLoading } = useSafeQuery<CourseModule[]>({
        queryKey: ['/api/courses', courseId, 'modules'],
        enabled: !!courseId,
    });

    return (
        <div className="flex h-screen overflow-hidden bg-gray-50">
            <Sidebar />

            <div className="flex-1 flex flex-col overflow-hidden">
                <header className="bg-white shadow-sm border-b border-gray-200 px-6 py-4">
                    <div className="flex items-center space-x-4">
                        <Link href="/courses">
                            <Button variant="ghost" size="icon">
                                <ArrowLeft size={20} />
                            </Button>
                        </Link>
                        <div>
                            <h2 className="text-2xl font-bold text-gray-900">
                                {courseLoading ? "Cargando..." : course?.title || "Curso no encontrado"}
                            </h2>
                            <p className="text-gray-600">
                                {course?.description || "Visualiza el contenido del curso"}
                            </p>
                        </div>
                    </div>
                </header>

                <main className="flex-1 overflow-auto p-6">
                    {courseLoading || modulesLoading ? (
                        <div className="flex justify-center items-center h-64">
                            <div className="text-center">
                                <div className="animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600 mx-auto mb-4"></div>
                                <p className="text-gray-600">Cargando contenido del curso...</p>
                            </div>
                        </div>
                    ) : course ? (
                        <div className="grid grid-cols-1 lg:grid-cols-3 gap-6">
                            <div className="lg:col-span-2">
                                <MultimediaViewer
                                    courseId={courseId || ''}
                                    modules={modules || []}
                                    currentModuleIndex={0}
                                    onModuleChange={() => { }}
                                />
                            </div>

                            <div className="bg-white rounded-lg shadow border border-gray-200">
                                <div className="p-4 border-b border-gray-200">
                                    <h3 className="text-lg font-semibold text-gray-900">Contenido del Curso</h3>
                                </div>
                                <div className="p-4 space-y-3 max-h-96 overflow-y-auto">
                                    {modules && modules.length > 0 ? (
                                        modules.map((module, index) => (
                                            <div
                                                key={module.id}
                                                className="flex items-center justify-between p-3 hover:bg-gray-50 rounded-lg cursor-pointer transition-colors"
                                            >
                                                <div className="flex items-center space-x-3">
                                                    <div className="w-8 h-8 bg-gray-300 text-gray-600 rounded-full flex items-center justify-center text-sm font-semibold">
                                                        {index + 1}
                                                    </div>
                                                    <div>
                                                        <p className="font-medium text-gray-900">{module.title}</p>
                                                        <p className="text-sm text-gray-600">
                                                            {module.contentType === 'video' ? 'Video' : 'Imagen'}
                                                            {module.duration && ` • ${Math.ceil(module.duration / 60)} min`}
                                                        </p>
                                                    </div>
                                                </div>
                                                <div className="w-4 h-4 border-2 border-gray-300 rounded-full"></div>
                                            </div>
                                        ))
                                    ) : (
                                        <div className="text-center py-8">
                                            <p className="text-gray-600">No hay módulos disponibles</p>
                                        </div>
                                    )}
                                </div>
                            </div>
                        </div>
                    ) : (
                        <div className="text-center py-16">
                            <h3 className="text-lg font-medium text-gray-900 mb-2">Curso no encontrado</h3>
                            <p className="text-gray-600 mb-6">El curso que buscas no existe o ha sido eliminado</p>
                            <Link href="/courses">
                                <Button className="bg-blue-600 hover:bg-blue-700">
                                    Volver a Cursos
                                </Button>
                            </Link>
                        </div>
                    )}
                </main>
            </div>
        </div>
    );
}

// ===== app\courses\page.tsx =====

import Courses from "@/pages/courses";

export default function CoursesPage() {
    return <Courses />;
}

// ===== app\courses\route.ts =====

import { NextRequest, NextResponse } from 'next/server';
import { query } from '@/lib/db';

export async function GET() {
    try {
        const courses = await query(`
      SELECT 
        c.*,
        u.first_name as instructor_first_name,
        u.last_name as instructor_last_name,
        COUNT(e.id) as enrolled_students,
        COUNT(DISTINCT cert.id) as certificates_issued
      FROM courses c
      LEFT JOIN users u ON c.instructor_id = u.id
      LEFT JOIN user_course_enrollments e ON c.id = e.course_id
      LEFT JOIN certificates cert ON c.id = cert.course_id
      WHERE c.deleted_at IS NULL
      GROUP BY c.id, u.first_name, u.last_name
      ORDER BY c.created_at DESC
    `);

        return NextResponse.json(courses);
    } catch (error) {
        return NextResponse.json(
            { error: 'Error fetching courses' },
            { status: 500 }
        );
    }
}

export async function POST(request: NextRequest) {
    try {
        const body = await request.json();
        const { title, description, instructor_id, duration, category, level, objectives, requirements } = body;

        const result = await query(
            `INSERT INTO courses 
       (title, description, instructor_id, duration, category, level, objectives, requirements) 
       VALUES ($1, $2, $3, $4, $5, $6, $7, $8) 
       RETURNING *`,
            [title, description, instructor_id, duration, category, level, objectives, requirements]
        );

        return NextResponse.json(result[0]);
    } catch (error) {
        return NextResponse.json(
            { error: 'Error creating course' },
            { status: 500 }
        );
    }
}

// ===== app\courses\[courseId]\module\[moduleId]\page.tsx =====

// app/courses/[courseId]/module/[moduleId]/page.tsx
'use client';

import { useParams } from "next/navigation";
import { useSafeQuery } from "@/hooks/useSafeQuery";
import Sidebar from "@/components/sidebar";
import { Button } from "@/components/ui/button";
import { Progress } from "@/components/ui/progress";
import { ArrowLeft, ArrowRight, CheckCircle } from "lucide-react";

export default function ModulePage() {
    const params = useParams();
    const courseId = params.courseId as string;
    const moduleId = params.moduleId as string;

    const { data: module, isLoading } = useSafeQuery({
        queryKey: ['/api/modules', moduleId],
    });

    const { data: course } = useSafeQuery({
        queryKey: ['/api/courses', courseId],
    });

    const { data: nextModule } = useSafeQuery({
        queryKey: ['/api/modules', moduleId, 'next'],
    });

    if (isLoading) {
        return <div>Cargando módulo...</div>;
    }

    const renderContent = () => {
        if (!module?.media) return null;

        switch (module.content_type) {
            case 'video':
                return (
                    <video
                        controls
                        className="w-full h-auto max-w-4xl mx-auto"
                        poster={module.media.thumbnail_url}
                    >
                        <source src={`/api/media/stream/${module.media.filename}`} type="video/mp4" />
                        Tu navegador no soporta el elemento de video.
                    </video>
                );

            case 'image':
                return (
                    <img
                        src={`/uploads/${module.media.filename}`}
                        alt={module.title}
                        className="w-full h-auto max-w-4xl mx-auto rounded-lg"
                    />
                );

            default:
                return (
                    <div className="bg-white rounded-lg p-6">
                        <p>Contenido no disponible para visualización</p>
                    </div>
                );
        }
    };

    return (
        <div className="flex h-screen overflow-hidden bg-gray-50">
            <Sidebar />

            <div className="flex-1 flex flex-col overflow-hidden">
                <header className="bg-white shadow-sm border-b border-gray-200 px-6 py-4">
                    <div className="flex items-center space-x-4">
                        <Button variant="ghost" href={`/courses/${courseId}`}>
                            <ArrowLeft size={20} />
                        </Button>
                        <div>
                            <h2 className="text-2xl font-bold text-gray-900">{course?.title}</h2>
                            <p className="text-gray-600">Módulo: {module?.title}</p>
                        </div>
                    </div>
                </header>

                <main className="flex-1 overflow-auto p-6">
                    <div className="max-w-4xl mx-auto">
                        {/* Progress bar */}
                        <div className="mb-6">
                            <div className="flex justify-between text-sm text-gray-600 mb-2">
                                <span>Progreso del módulo</span>
                                <span>25% completado</span>
                            </div>
                            <Progress value={25} />
                        </div>

                        {/* Content */}
                        <div className="bg-white rounded-lg shadow-lg p-6 mb-6">
                            {renderContent()}
                        </div>

                        {/* Description */}
                        <div className="bg-white rounded-lg shadow p-6 mb-6">
                            <h3 className="text-lg font-semibold mb-3">Acerca de este módulo</h3>
                            <p className="text-gray-700">{module?.description}</p>
                        </div>

                        {/* Navigation */}
                        <div className="flex justify-between">
                            <Button variant="outline">
                                <ArrowLeft className="mr-2" size={16} />
                                Módulo Anterior
                            </Button>

                            <Button className="bg-blue-600 hover:bg-blue-700">
                                <CheckCircle className="mr-2" size={16} />
                                Marcar como Completado
                            </Button>

                            {nextModule && (
                                <Button variant="outline" href={`/courses/${courseId}/module/${nextModule.id}`}>
                                    Siguiente Módulo
                                    <ArrowRight className="ml-2" size={16} />
                                </Button>
                            )}
                        </div>
                    </div>
                </main>
            </div>
        </div>
    );
}

// ===== app\courses\[courseId]\page.tsx =====

'use client';

import CourseViewer from "@/app/course-viewer/page";

interface CoursePageProps {
    params: {
        courseId: string;
    };
}

export default function CoursePage({ params }: CoursePageProps) {
    return <CourseViewer courseId={params.courseId} />;
}

// ===== app\dashboard\page.tsx =====

import { NextRequest, NextResponse } from 'next/server';
import { query } from '@/lib/db';

export async function GET(
    request: NextRequest,
    { params }: { params: { id: string } }
) {
    try {
        const { searchParams } = new URL(request.url);
        const status = searchParams.get('status');

        let queryStr = `
      SELECT * FROM vw_user_course_progress 
      WHERE user_id = $1
    `;

        const queryParams: any[] = [params.id];

        if (status) {
            queryStr += ` AND enrollment_status = $2`;
            queryParams.push(status);
        }

        queryStr += ' ORDER BY enrolled_at DESC';

        const courses = await query(queryStr, queryParams);

        return NextResponse.json(courses);
    } catch (error) {
        return NextResponse.json(
            { error: 'Error fetching user courses' },
            { status: 500 }
        );
    }
}

// ===== app\evaluations\page.tsx =====

'use client';

import { useSafeQuery } from "@/hooks/useSafeQuery";
import Sidebar from "@/components/sidebar";
import { Button } from "@/components/ui/button";
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card";
import { Badge } from "@/components/ui/badge";
import { Input } from "@/components/ui/input";
import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from "@/components/ui/select";
import { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from "@/components/ui/table";
import { Download, Filter, Search, BarChart3, Clock, CheckCircle, XCircle, Play } from "lucide-react";
import { useToast } from "@/hooks/use-toast";
import { exportToExcel } from "@/lib/exportUtils";
import { useState } from "react";

interface Evaluation {
    id: string;
    userId: string;
    userName: string;
    courseId: string;
    courseName: string;
    score: number;
    totalQuestions: number;
    correctAnswers: number;
    timeSpent: number;
    status: 'passed' | 'failed' | 'in-progress';
    completedAt: string;
    createdAt: string;
}

export default function EvaluationsPage() {
    const [searchTerm, setSearchTerm] = useState("");
    const [statusFilter, setStatusFilter] = useState("all");
    const [courseFilter, setCourseFilter] = useState("all");
    const { toast } = useToast();

    const { data: evaluations, isLoading } = useSafeQuery<Evaluation[]>({
        queryKey: ['/api/evaluations'],
    });

    const { data: courses = [] } = useSafeQuery({
        queryKey: ['/api/courses'],
    });

    const filteredEvaluations = evaluations?.filter((evalItem) => {
        const matchesSearch =
            evalItem.userName.toLowerCase().includes(searchTerm.toLowerCase()) ||
            evalItem.courseName.toLowerCase().includes(searchTerm.toLowerCase());

        const matchesStatus = statusFilter === "all" || evalItem.status === statusFilter;
        const matchesCourse = courseFilter === "all" || evalItem.courseId === courseFilter;

        return matchesSearch && matchesStatus && matchesCourse;
    }) || [];

    const handleExportEvaluations = () => {
        if (filteredEvaluations && filteredEvaluations.length > 0) {
            const exportData = filteredEvaluations.map(evalItem => ({
                'Estudiante': evalItem.userName,
                'Curso': evalItem.courseName,
                'Puntuación': `${evalItem.score}%`,
                'Estado': evalItem.status === 'passed' ? 'Aprobado' : evalItem.status === 'failed' ? 'Reprobado' : 'En Progreso',
                'Preguntas Correctas': `${evalItem.correctAnswers}/${evalItem.totalQuestions}`,
                'Tiempo': `${Math.floor(evalItem.timeSpent / 60)}:${(evalItem.timeSpent % 60).toString().padStart(2, '0')}`,
                'Fecha Completación': evalItem.completedAt ? new Date(evalItem.completedAt).toLocaleDateString('es-ES') : 'En progreso'
            }));

            exportToExcel(exportData, `evaluaciones_${new Date().toISOString().split('T')[0]}`);
            toast({
                title: "Exportación exitosa",
                description: "Los datos de evaluaciones han sido exportados a Excel.",
            });
        } else {
            toast({
                title: "Sin datos",
                description: "No hay evaluaciones para exportar.",
                variant: "destructive",
            });
        }
    };

    const getStatusBadgeVariant = (status: string) => {
        switch (status) {
            case "passed": return "default";
            case "failed": return "destructive";
            case "in-progress": return "secondary";
            default: return "outline";
        }
    };

    const getStatusIcon = (status: string) => {
        switch (status) {
            case "passed": return <CheckCircle className="h-4 w-4" />;
            case "failed": return <XCircle className="h-4 w-4" />;
            case "in-progress": return <Clock className="h-4 w-4" />;
            default: return null;
        }
    };

    const getStatusText = (status: string) => {
        switch (status) {
            case "passed": return "Aprobado";
            case "failed": return "Reprobado";
            case "in-progress": return "En Progreso";
            default: return status;
        }
    };

    const stats = {
        total: evaluations?.length || 0,
        passed: evaluations?.filter(e => e.status === 'passed').length || 0,
        failed: evaluations?.filter(e => e.status === 'failed').length || 0,
        inProgress: evaluations?.filter(e => e.status === 'in-progress').length || 0,
        averageScore: evaluations && evaluations.length > 0
            ? Math.round(evaluations.reduce((sum, e) => sum + e.score, 0) / evaluations.length)
            : 0
    };

    return (
        <div className="flex h-screen overflow-hidden bg-gray-50">
            <Sidebar />

            <div className="flex-1 flex flex-col overflow-hidden">
                <header className="bg-white shadow-sm border-b border-gray-200 px-6 py-4">
                    <div className="flex items-center justify-between">
                        <div className="flex items-center space-x-3">
                            <BarChart3 className="text-blue-600" size={28} />
                            <div>
                                <h2 className="text-2xl font-bold text-gray-900">Evaluaciones</h2>
                                <p className="text-gray-600">Resultados y seguimiento de evaluaciones</p>
                            </div>
                        </div>
                        <Button
                            variant="outline"
                            onClick={handleExportEvaluations}
                            disabled={!filteredEvaluations || filteredEvaluations.length === 0}
                        >
                            <Download className="mr-2" size={16} />
                            Exportar
                        </Button>
                    </div>
                </header>

                <main className="flex-1 overflow-auto p-6 space-y-6">
                    {/* Estadísticas */}
                    <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-5 gap-6">
                        <Card>
                            <CardHeader className="pb-2">
                                <CardTitle className="text-sm font-medium">Total Evaluaciones</CardTitle>
                            </CardHeader>
                            <CardContent>
                                <div className="text-2xl font-bold">{stats.total}</div>
                            </CardContent>
                        </Card>

                        <Card>
                            <CardHeader className="pb-2">
                                <CardTitle className="text-sm font-medium">Aprobadas</CardTitle>
                            </CardHeader>
                            <CardContent>
                                <div className="text-2xl font-bold text-green-600">{stats.passed}</div>
                            </CardContent>
                        </Card>

                        <Card>
                            <CardHeader className="pb-2">
                                <CardTitle className="text-sm font-medium">Reprobadas</CardTitle>
                            </CardHeader>
                            <CardContent>
                                <div className="text-2xl font-bold text-red-600">{stats.failed}</div>
                            </CardContent>
                        </Card>

                        <Card>
                            <CardHeader className="pb-2">
                                <CardTitle className="text-sm font-medium">En Progreso</CardTitle>
                            </CardHeader>
                            <CardContent>
                                <div className="text-2xl font-bold text-blue-600">{stats.inProgress}</div>
                            </CardContent>
                        </Card>

                        <Card>
                            <CardHeader className="pb-2">
                                <CardTitle className="text-sm font-medium">Puntuación Promedio</CardTitle>
                            </CardHeader>
                            <CardContent>
                                <div className="text-2xl font-bold">{stats.averageScore}%</div>
                            </CardContent>
                        </Card>
                    </div>

                    {/* Filtros */}
                    <Card>
                        <CardContent className="p-4">
                            <div className="flex flex-col sm:flex-row gap-4">
                                <div className="flex-1">
                                    <Input
                                        placeholder="Buscar por estudiante o curso..."
                                        value={searchTerm}
                                        onChange={(e) => setSearchTerm(e.target.value)}
                                        className="w-full"
                                    />
                                </div>

                                <Select value={statusFilter} onValueChange={setStatusFilter}>
                                    <SelectTrigger className="w-full sm:w-40">
                                        <SelectValue placeholder="Todos los estados" />
                                    </SelectTrigger>
                                    <SelectContent>
                                        <SelectItem value="all">Todos los estados</SelectItem>
                                        <SelectItem value="passed">Aprobado</SelectItem>
                                        <SelectItem value="failed">Reprobado</SelectItem>
                                        <SelectItem value="in-progress">En Progreso</SelectItem>
                                    </SelectContent>
                                </Select>

                                <Select value={courseFilter} onValueChange={setCourseFilter}>
                                    <SelectTrigger className="w-full sm:w-48">
                                        <SelectValue placeholder="Todos los cursos" />
                                    </SelectTrigger>
                                    <SelectContent>
                                        <SelectItem value="all">Todos los cursos</SelectItem>
                                        {courses.map((course: any) => (
                                            <SelectItem key={course.id} value={course.id}>
                                                {course.title}
                                            </SelectItem>
                                        ))}
                                    </SelectContent>
                                </Select>

                                <Button variant="outline" className="w-full sm:w-auto">
                                    <Filter className="mr-2" size={16} />
                                    Filtrar
                                </Button>
                            </div>
                        </CardContent>
                    </Card>

                    {/* Tabla de evaluaciones */}
                    <Card>
                        <CardHeader>
                            <CardTitle>Historial de Evaluaciones</CardTitle>
                            <CardDescription>
                                {filteredEvaluations.length} evaluación(es) encontrada(s)
                            </CardDescription>
                        </CardHeader>
                        <CardContent>
                            {isLoading ? (
                                <div className="flex justify-center items-center h-64">
                                    <div className="text-center">
                                        <div className="animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600 mx-auto mb-4"></div>
                                        <p className="text-gray-600">Cargando evaluaciones...</p>
                                    </div>
                                </div>
                            ) : filteredEvaluations.length > 0 ? (
                                <div className="rounded-md border">
                                    <Table>
                                        <TableHeader>
                                            <TableRow>
                                                <TableHead>Estudiante</TableHead>
                                                <TableHead>Curso</TableHead>
                                                <TableHead>Puntuación</TableHead>
                                                <TableHead>Estado</TableHead>
                                                <TableHead>Tiempo</TableHead>
                                                <TableHead>Fecha</TableHead>
                                                <TableHead className="text-right">Acciones</TableHead>
                                            </TableRow>
                                        </TableHeader>
                                        <TableBody>
                                            {filteredEvaluations.map((evaluation) => (
                                                <TableRow key={evaluation.id}>
                                                    <TableCell className="font-medium">{evaluation.userName}</TableCell>
                                                    <TableCell>{evaluation.courseName}</TableCell>
                                                    <TableCell>
                                                        <div className="flex items-center space-x-2">
                                                            <div className="w-16 bg-gray-200 rounded-full h-2">
                                                                <div
                                                                    className="bg-blue-600 h-2 rounded-full"
                                                                    style={{ width: `${evaluation.score}%` }}
                                                                />
                                                            </div>
                                                            <span className="text-sm font-medium">{evaluation.score}%</span>
                                                        </div>
                                                    </TableCell>
                                                    <TableCell>
                                                        <Badge
                                                            variant={getStatusBadgeVariant(evaluation.status)}
                                                            className="flex items-center space-x-1"
                                                        >
                                                            {getStatusIcon(evaluation.status)}
                                                            <span>{getStatusText(evaluation.status)}</span>
                                                        </Badge>
                                                    </TableCell>
                                                    <TableCell>
                                                        {Math.floor(evaluation.timeSpent / 60)}:
                                                        {(evaluation.timeSpent % 60).toString().padStart(2, '0')}
                                                    </TableCell>
                                                    <TableCell>
                                                        {evaluation.completedAt
                                                            ? new Date(evaluation.completedAt).toLocaleDateString('es-ES')
                                                            : 'En progreso'
                                                        }
                                                    </TableCell>
                                                    <TableCell className="text-right">
                                                        <Button variant="ghost" size="sm">
                                                            <Eye className="h-4 w-4" />
                                                        </Button>
                                                        <Button variant="ghost" size="sm">
                                                            <BarChart3 className="h-4 w-4" />
                                                        </Button>
                                                    </TableCell>
                                                </TableRow>
                                            ))}
                                        </TableBody>
                                    </Table>
                                </div>
                            ) : (
                                <div className="text-center py-12">
                                    <BarChart3 className="mx-auto h-12 w-12 text-gray-400 mb-4" />
                                    <h3 className="text-lg font-medium text-gray-900 mb-2">
                                        {searchTerm || statusFilter !== "all" || courseFilter !== "all"
                                            ? "No se encontraron evaluaciones"
                                            : "No hay evaluaciones registradas"
                                        }
                                    </h3>
                                    <p className="text-gray-600">
                                        {searchTerm || statusFilter !== "all" || courseFilter !== "all"
                                            ? "Intenta ajustar los filtros de búsqueda"
                                            : "Las evaluaciones aparecerán aquí una vez completadas"
                                        }
                                    </p>
                                </div>
                            )}
                        </CardContent>
                    </Card>
                </main>
            </div>
        </div>
    );
}

// ===== app\globals.css =====

@tailwind base;
@tailwind components;
@tailwind utilities;

@layer base {
    :root {
        --background: 0 0% 100%;
        --foreground: 222.2 84% 4.9%;
        --card: 0 0% 100%;
        --card-foreground: 222.2 84% 4.9%;
        --popover: 0 0% 100%;
        --popover-foreground: 222.2 84% 4.9%;
        --primary: 221.2 83.2% 53.3%;
        --primary-foreground: 210 40% 98%;
        --secondary: 210 40% 96%;
        --secondary-foreground: 222.2 84% 4.9%;
        --muted: 210 40% 96%;
        --muted-foreground: 215.4 16.3% 46.9%;
        --accent: 210 40% 96%;
        --accent-foreground: 222.2 84% 4.9%;
        --destructive: 0 84.2% 60.2%;
        --destructive-foreground: 210 40% 98%;
        --border: 214.3 31.8% 91.4%;
        --input: 214.3 31.8% 91.4%;
        --ring: 221.2 83.2% 53.3%;
        --radius: 0.5rem;
    }

    .dark {
        --background: 222.2 84% 4.9%;
        --foreground: 210 40% 98%;
        --card: 222.2 84% 4.9%;
        --card-foreground: 210 40% 98%;
        --popover: 222.2 84% 4.9%;
        --popover-foreground: 210 40% 98%;
        --primary: 217.2 91.2% 59.8%;
        --primary-foreground: 222.2 84% 4.9%;
        --secondary: 217.2 32.6% 17.5%;
        --secondary-foreground: 210 40% 98%;
        --muted: 217.2 32.6% 17.5%;
        --muted-foreground: 215 20.2% 65.1%;
        --accent: 217.2 32.6% 17.5%;
        --accent-foreground: 210 40% 98%;
        --destructive: 0 62.8% 30.6%;
        --destructive-foreground: 210 40% 98%;
        --border: 217.2 32.6% 17.5%;
        --input: 217.2 32.6% 17.5%;
        --ring: 224.3 76.3% 94.1%;
    }
}

@layer base {
    * {
        @apply border-border;
    }

    body {
        @apply bg-background text-foreground;
    }
}

/* Estilos personalizados adicionales */
.line-clamp-2 {
    overflow: hidden;
    display: -webkit-box;
    -webkit-box-orient: vertical;
    -webkit-line-clamp: 2;
}

.line-clamp-3 {
    overflow: hidden;
    display: -webkit-box;
    -webkit-box-orient: vertical;
    -webkit-line-clamp: 3;
}

/* Scrollbar personalizado */
::-webkit-scrollbar {
    width: 8px;
}

::-webkit-scrollbar-track {
    background: #f1f1f1;
    border-radius: 4px;
}

::-webkit-scrollbar-thumb {
    background: #c1c1c1;
    border-radius: 4px;
}

::-webkit-scrollbar-thumb:hover {
    background: #a8a8a8;
}

/* Animaciones */
@keyframes fadeIn {
    from {
        opacity: 0;
        transform: translateY(10px);
    }

    to {
        opacity: 1;
        transform: translateY(0);
    }
}

.animate-fadeIn {
    animation: fadeIn 0.3s ease-out;
}

/* Loading spinner */
@keyframes spin {
    from {
        transform: rotate(0deg);
    }

    to {
        transform: rotate(360deg);
    }
}

.animate-spin {
    animation: spin 1s linear infinite;
}

// ===== app\layout.tsx =====

import type { Metadata } from "next";
import Providers from "@/components/Providers";
import "./globals.css";

export const metadata: Metadata = {
    title: "Sistema de Capacitación",
    description: "Plataforma de gestión de cursos y certificaciones",
};

export default function RootLayout({
    children,
}: {
    children: React.ReactNode;
}) {
    return (
        <html lang="es">
            <body>
                <Providers>
                    {children}
                </Providers>
            </body>
        </html>
    );
}

// ===== app\media\page.tsx =====

'use client';

import { useState, useEffect } from 'react';
import { useSafeQuery } from '@/hooks/useSafeQuery';
import { useToast } from '@/hooks/use-toast';
import Sidebar from '@/components/sidebar';
import MediaUpload from '@/components/media-upload';
import MediaViewer from '@/components/media-viewer';
import { Button } from '@/components/ui/button';
import { Input } from '@/components/ui/input';
import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';
import { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';
import { Download, Trash2, Search, Filter, Grid, List } from 'lucide-react';

export default function MediaPage() {
    const [activeTab, setActiveTab] = useState('upload');
    const [searchTerm, setSearchTerm] = useState('');
    const [typeFilter, setTypeFilter] = useState('all');
    const [viewMode, setViewMode] = useState('grid');
    const { toast } = useToast();

    const { data: media, isLoading, refetch } = useSafeQuery({
        queryKey: ['/api/media'],
    });

    const { data: courses } = useSafeQuery({
        queryKey: ['/api/courses'],
    });

    const { data: modules } = useSafeQuery({
        queryKey: ['/api/course-modules'],
    });

    const filteredMedia = media?.filter((item: any) => {
        const matchesSearch =
            item.title.toLowerCase().includes(searchTerm.toLowerCase()) ||
            item.description.toLowerCase().includes(searchTerm.toLowerCase());

        const matchesType = typeFilter === 'all' || item.media_type === typeFilter;

        return matchesSearch && matchesType;
    }) || [];

    const handleDeleteMedia = async (id: string) => {
        if (!confirm('¿Estás seguro de que quieres eliminar este archivo?')) return;

        try {
            const response = await fetch(`/api/media/${id}`, {
                method: 'DELETE',
            });

            if (response.ok) {
                toast({
                    title: "Archivo eliminado",
                    description: "El archivo ha sido eliminado correctamente",
                });
                refetch();
            } else {
                throw new Error('Error al eliminar');
            }
        } catch (error) {
            toast({
                title: "Error",
                description: "No se pudo eliminar el archivo",
                variant: "destructive",
            });
        }
    };

    return (
        <div className="flex h-screen overflow-hidden bg-gray-50">
            <Sidebar />

            <div className="flex-1 flex flex-col overflow-hidden">
                <header className="bg-white shadow-sm border-b border-gray-200 px-6 py-4">
                    <div className="flex items-center justify-between">
                        <div className="flex items-center space-x-3">
                            <div className="w-8 h-8 bg-blue-600 rounded-lg flex items-center justify-center">
                                <Download className="text-white" size={20} />
                            </div>
                            <div>
                                <h2 className="text-2xl font-bold text-gray-900">Biblioteca Multimedia</h2>
                                <p className="text-gray-600">Gestiona imágenes, videos y archivos de la plataforma</p>
                            </div>
                        </div>
                    </div>
                </header>

                <main className="flex-1 overflow-auto p-6">
                    <Tabs value={activeTab} onValueChange={setActiveTab} className="space-y-6">
                        <TabsList>
                            <TabsTrigger value="upload">Subir Archivos</TabsTrigger>
                            <TabsTrigger value="browse">Explorar Biblioteca</TabsTrigger>
                        </TabsList>

                        <TabsContent value="upload">
                            <MediaUpload
                                courses={courses || []}
                                modules={modules || []}
                                onUploadSuccess={refetch}
                            />
                        </TabsContent>

                        <TabsContent value="browse">
                            {/* Filtros y búsqueda */}
                            <Card className="mb-6">
                                <CardContent className="p-4">
                                    <div className="flex flex-col sm:flex-row gap-4">
                                        <div className="flex-1">
                                            <Input
                                                placeholder="Buscar por título o descripción..."
                                                value={searchTerm}
                                                onChange={(e) => setSearchTerm(e.target.value)}
                                                className="w-full"
                                            />
                                        </div>

                                        <Select value={typeFilter} onValueChange={setTypeFilter}>
                                            <SelectTrigger className="w-32">
                                                <SelectValue placeholder="Todos los tipos" />
                                            </SelectTrigger>
                                            <SelectContent>
                                                <SelectItem value="all">Todos los tipos</SelectItem>
                                                <SelectItem value="image">Imágenes</SelectItem>
                                                <SelectItem value="video">Videos</SelectItem>
                                            </SelectContent>
                                        </Select>

                                        <div className="flex space-x-2">
                                            <Button
                                                variant={viewMode === 'grid' ? 'default' : 'outline'}
                                                size="icon"
                                                onClick={() => setViewMode('grid')}
                                            >
                                                <Grid className="h-4 w-4" />
                                            </Button>
                                            <Button
                                                variant={viewMode === 'list' ? 'default' : 'outline'}
                                                size="icon"
                                                onClick={() => setViewMode('list')}
                                            >
                                                <List className="h-4 w-4" />
                                            </Button>
                                        </div>
                                    </div>
                                </CardContent>
                            </Card>

                            {/* Grid de archivos */}
                            {isLoading ? (
                                <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
                                    {[1, 2, 3, 4, 5, 6].map((i) => (
                                        <Card key={i} className="animate-pulse">
                                            <CardContent className="p-4">
                                                <div className="aspect-video bg-gray-200 rounded mb-4"></div>
                                                <div className="h-4 bg-gray-200 rounded mb-2"></div>
                                                <div className="h-3 bg-gray-200 rounded w-2/3"></div>
                                            </CardContent>
                                        </Card>
                                    ))}
                                </div>
                            ) : filteredMedia.length > 0 ? (
                                viewMode === 'grid' ? (
                                    <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
                                        {filteredMedia.map((item: any) => (
                                            <Card key={item.id} className="group relative overflow-hidden">
                                                <MediaViewer media={item} className="aspect-video" />
                                                <CardContent className="p-4">
                                                    <h3 className="font-semibold text-sm mb-1 line-clamp-1">{item.title}</h3>
                                                    <p className="text-xs text-gray-600 mb-3 line-clamp-2">{item.description}</p>
                                                    <div className="flex items-center justify-between">
                                                        <span className="text-xs text-gray-500">
                                                            {item.file_type.split('/')[1]}
                                                        </span>
                                                        <Button
                                                            variant="ghost"
                                                            size="sm"
                                                            onClick={() => handleDeleteMedia(item.id)}
                                                            className="h-8 w-8 p-0"
                                                        >
                                                            <Trash2 className="h-4 w-4" />
                                                        </Button>
                                                    </div>
                                                </CardContent>
                                            </Card>
                                        ))}
                                    </div>
                                ) : (
                                    <div className="space-y-3">
                                        {filteredMedia.map((item: any) => (
                                            <Card key={item.id} className="group">
                                                <div className="flex items-center space-x-4 p-4">
                                                    <div className="flex-shrink-0">
                                                        <MediaViewer media={item} className="w-20 h-20" />
                                                    </div>
                                                    <div className="flex-1 min-w-0">
                                                        <h3 className="font-semibold text-sm mb-1">{item.title}</h3>
                                                        <p className="text-xs text-gray-600 mb-2 line-clamp-2">{item.description}</p>
                                                        <div className="flex items-center space-x-4 text-xs text-gray-500">
                                                            <span>{item.file_type.split('/')[1]}</span>
                                                            <span>{(item.file_size / 1024 / 1024).toFixed(2)} MB</span>
                                                            <span>{new Date(item.created_at).toLocaleDateString()}</span>
                                                        </div>
                                                    </div>
                                                    <Button
                                                        variant="ghost"
                                                        size="sm"
                                                        onClick={() => handleDeleteMedia(item.id)}
                                                        className="h-8 w-8 p-0"
                                                    >
                                                        <Trash2 className="h-4 w-4" />
                                                    </Button>
                                                </div>
                                            </Card>
                                        ))}
                                    </div>
                                )
                            ) : (
                                <div className="text-center py-16">
                                    <Download className="mx-auto h-16 w-16 text-gray-400 mb-4" />
                                    <h3 className="text-lg font-medium text-gray-900 mb-2">
                                        {searchTerm ? "No se encontraron archivos" : "Biblioteca vacía"}
                                    </h3>
                                    <p className="text-gray-600">
                                        {searchTerm
                                            ? "Intenta con otros términos de búsqueda"
                                            : "Sube tu primer archivo para comenzar"
                                        }
                                    </p>
                                </div>
                            )}
                        </TabsContent>
                    </Tabs>
                </main>
            </div>
        </div>
    );
}

// ===== app\not-found\page.tsx =====

'use client';

import { Card, CardContent } from "@/components/ui/card";
import { AlertCircle } from "lucide-react";

export default function NotFound() {
    return (
        <div className="min-h-screen w-full flex items-center justify-center bg-gray-50">
            <Card className="w-full max-w-md mx-4">
                <CardContent className="pt-6">
                    <div className="flex mb-4 gap-2">
                        <AlertCircle className="h-8 w-8 text-red-500" />
                        <h1 className="text-2xl font-bold text-gray-900">404 Página No Encontrada</h1>
                    </div>

                    <p className="mt-4 text-sm text-gray-600">
                        La página que buscas no existe o ha sido movida.
                    </p>
                </CardContent>
            </Card>
        </div>
    );
}

// ===== app\not-found.tsx =====

import NotFound from "@/app/not-found/page";

export default function NotFoundPage() {
    return <NotFound />;
}

// ===== app\page.tsx =====

import Dashboard from "@/components/dashboard";

export default function Home() {
    return <Dashboard />;
}

// ===== app\reports\page.tsx =====

'use client';

import { useSafeQuery } from "@/hooks/useSafeQuery";
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from "@/components/ui/select";
import { Badge } from "@/components/ui/badge";
import {
    BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer,
    PieChart, Pie, Cell, AreaChart, Area, LineChart, Line
} from "recharts";
import {
    Users, BookOpen, Award, TrendingUp, Download, Calendar,
    CheckCircle, Target, BarChart3, PieChart as PieChartIcon,
    LineChart as LineChartIcon
} from "lucide-react";
import { useState } from "react";
import { exportToExcel } from "@/lib/exportUtils";
import { useToast } from "@/hooks/use-toast";
import Sidebar from "@/components/sidebar";

const COLORS = ['#3b82f6', '#10b981', '#f59e0b', '#ef4444', '#8b5cf6', '#06b6d4'];

export default function ReportsPage() {
    const [selectedCourse, setSelectedCourse] = useState<string>("all");
    const [timeRange, setTimeRange] = useState<string>("monthly");
    const { toast } = useToast();

    const { data: stats } = useSafeQuery({
        queryKey: ['/api/dashboard/stats'],
    });

    const { data: courses = [] } = useSafeQuery({
        queryKey: ['/api/courses'],
    });

    // Datos de ejemplo serializables para gráficos
    const courseCompletionData = [
        { course: 'Seguridad Industrial', completed: 45, inProgress: 12, notStarted: 8 },
        { course: 'Primeros Auxilios', completed: 38, inProgress: 15, notStarted: 12 },
        { course: 'Manejo Defensivo', completed: 52, inProgress: 8, notStarted: 5 },
        { course: 'Trabajo en Alturas', completed: 23, inProgress: 18, notStarted: 14 }
    ];

    const monthlyProgressData = [
        { month: 'Ene', usuarios: 15, certificados: 12, evaluaciones: 18 },
        { month: 'Feb', usuarios: 22, certificados: 19, evaluaciones: 25 },
        { month: 'Mar', usuarios: 18, certificados: 15, evaluaciones: 22 },
        { month: 'Abr', usuarios: 25, certificados: 22, evaluaciones: 28 },
        { month: 'May', usuarios: 30, certificados: 28, evaluaciones: 35 },
        { month: 'Jun', usuarios: 28, certificados: 25, evaluaciones: 32 }
    ];

    const userRoleDistribution = [
        { name: 'Estudiantes', value: 82, count: 164 },
        { name: 'Instructores', value: 12, count: 24 },
        { name: 'Administradores', value: 6, count: 12 }
    ];

    const topPerformingCourses = [
        { course: 'Manejo Defensivo', score: 94, completions: 52 },
        { course: 'Seguridad Industrial', score: 89, completions: 45 },
        { course: 'Primeros Auxilios', score: 87, completions: 38 },
        { course: 'Trabajo en Alturas', score: 85, completions: 23 }
    ];

    const exportReport = (reportType: string) => {
        let data: any[] = [];
        let filename = '';

        switch (reportType) {
            case 'completion':
                data = courseCompletionData;
                filename = 'reporte_completacion_cursos';
                break;
            case 'monthly':
                data = monthlyProgressData;
                filename = 'reporte_progreso_mensual';
                break;
            case 'performance':
                data = topPerformingCourses;
                filename = 'reporte_rendimiento_cursos';
                break;
            case 'users':
                data = userRoleDistribution;
                filename = 'reporte_distribucion_usuarios';
                break;
            default:
                return;
        }

        exportToExcel(data, `${filename}_${new Date().toISOString().split('T')[0]}`);
        toast({
            title: "Reporte exportado",
            description: "El reporte ha sido exportado a Excel exitosamente.",
        });
    };

    return (
        <div className="flex h-screen overflow-hidden bg-gray-50">
            <Sidebar />

            <div className="flex-1 flex flex-col overflow-hidden">
                <header className="bg-white shadow-sm border-b border-gray-200 px-6 py-4">
                    <div className="flex items-center justify-between">
                        <div className="flex items-center space-x-3">
                            <BarChart3 className="text-blue-600" size={28} />
                            <div>
                                <h2 className="text-2xl font-bold text-gray-900">Reportes y Analíticas</h2>
                                <p className="text-gray-600">Panel de control con métricas detalladas del desempeño</p>
                            </div>
                        </div>
                        <div className="flex items-center space-x-3">
                            <Select value={timeRange} onValueChange={setTimeRange}>
                                <SelectTrigger className="w-32">
                                    <SelectValue placeholder="Mensual" />
                                </SelectTrigger>
                                <SelectContent>
                                    <SelectItem value="daily">Diario</SelectItem>
                                    <SelectItem value="weekly">Semanal</SelectItem>
                                    <SelectItem value="monthly">Mensual</SelectItem>
                                    <SelectItem value="quarterly">Trimestral</SelectItem>
                                    <SelectItem value="yearly">Anual</SelectItem>
                                </SelectContent>
                            </Select>

                            <Select value={selectedCourse} onValueChange={setSelectedCourse}>
                                <SelectTrigger className="w-48">
                                    <SelectValue placeholder="Todos los cursos" />
                                </SelectTrigger>
                                <SelectContent>
                                    <SelectItem value="all">Todos los cursos</SelectItem>
                                    {courses.map((course: any) => (
                                        <SelectItem key={course.id} value={course.id}>
                                            {course.title}
                                        </SelectItem>
                                    ))}
                                </SelectContent>
                            </Select>
                        </div>
                    </div>
                </header>

                <main className="flex-1 overflow-auto p-6 space-y-6">
                    {/* KPI Cards */}
                    <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6">
                        <Card>
                            <CardHeader className="flex flex-row items-center justify-between space-y-0 pb-2">
                                <CardTitle className="text-sm font-medium">Total Usuarios</CardTitle>
                                <Users className="h-4 w-4 text-muted-foreground" />
                            </CardHeader>
                            <CardContent>
                                <div className="text-2xl font-bold">{(stats as any)?.totalUsers || 0}</div>
                                <p className="text-xs text-muted-foreground">
                                    +12% desde el mes pasado
                                </p>
                            </CardContent>
                        </Card>

                        <Card>
                            <CardHeader className="flex flex-row items-center justify-between space-y-0 pb-2">
                                <CardTitle className="text-sm font-medium">Cursos Completados</CardTitle>
                                <CheckCircle className="h-4 w-4 text-green-600" />
                            </CardHeader>
                            <CardContent>
                                <div className="text-2xl font-bold">{(stats as any)?.completedCourses || 0}</div>
                                <p className="text-xs text-muted-foreground">
                                    +8% desde el mes pasado
                                </p>
                            </CardContent>
                        </Card>

                        <Card>
                            <CardHeader className="flex flex-row items-center justify-between space-y-0 pb-2">
                                <CardTitle className="text-sm font-medium">Certificados Emitidos</CardTitle>
                                <Award className="h-4 w-4 text-yellow-600" />
                            </CardHeader>
                            <CardContent>
                                <div className="text-2xl font-bold">{(stats as any)?.totalCertificates || 0}</div>
                                <p className="text-xs text-muted-foreground">
                                    +15% desde el mes pasado
                                </p>
                            </CardContent>
                        </Card>

                        <Card>
                            <CardHeader className="flex flex-row items-center justify-between space-y-0 pb-2">
                                <CardTitle className="text-sm font-medium">Tasa de Completación</CardTitle>
                                <Target className="h-4 w-4 text-blue-600" />
                            </CardHeader>
                            <CardContent>
                                <div className="text-2xl font-bold">87.5%</div>
                                <p className="text-xs text-muted-foreground">
                                    +2.3% desde el mes pasado
                                </p>
                            </CardContent>
                        </Card>
                    </div>

                    {/* Gráficos principales */}
                    <div className="grid grid-cols-1 lg:grid-cols-2 gap-6">
                        <Card>
                            <CardHeader className="flex flex-row items-center justify-between">
                                <div>
                                    <CardTitle>Progreso por Curso</CardTitle>
                                    <CardDescription>Estado de completación de cada curso</CardDescription>
                                </div>
                                <Button
                                    variant="outline"
                                    size="sm"
                                    onClick={() => exportReport('completion')}
                                >
                                    <Download className="mr-2" size={14} />
                                    Exportar
                                </Button>
                            </CardHeader>
                            <CardContent>
                                <ResponsiveContainer width="100%" height={300}>
                                    <BarChart data={courseCompletionData}>
                                        <CartesianGrid strokeDasharray="3 3" />
                                        <XAxis dataKey="course" />
                                        <YAxis />
                                        <Tooltip />
                                        <Legend />
                                        <Bar dataKey="completed" fill="#10b981" name="Completados" />
                                        <Bar dataKey="inProgress" fill="#f59e0b" name="En Progreso" />
                                        <Bar dataKey="notStarted" fill="#ef4444" name="No Iniciados" />
                                    </BarChart>
                                </ResponsiveContainer>
                            </CardContent>
                        </Card>

                        <Card>
                            <CardHeader className="flex flex-row items-center justify-between">
                                <div>
                                    <CardTitle>Distribución de Usuarios</CardTitle>
                                    <CardDescription>Tipos de usuario en la plataforma</CardDescription>
                                </div>
                                <Button
                                    variant="outline"
                                    size="sm"
                                    onClick={() => exportReport('users')}
                                >
                                    <Download className="mr-2" size={14} />
                                    Exportar
                                </Button>
                            </CardHeader>
                            <CardContent>
                                <ResponsiveContainer width="100%" height={300}>
                                    <PieChart>
                                        <Pie
                                            data={userRoleDistribution}
                                            cx="50%"
                                            cy="50%"
                                            labelLine={false}
                                            label={({ name, value }) => `${name}: ${value}%`}
                                            outerRadius={80}
                                            fill="#8884d8"
                                            dataKey="value"
                                        >
                                            {userRoleDistribution.map((entry, index) => (
                                                <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />
                                            ))}
                                        </Pie>
                                        <Tooltip />
                                    </PieChart>
                                </ResponsiveContainer>
                            </CardContent>
                        </Card>

                        <Card>
                            <CardHeader className="flex flex-row items-center justify-between">
                                <div>
                                    <CardTitle>Tendencia Mensual</CardTitle>
                                    <CardDescription>Progreso de actividades por mes</CardDescription>
                                </div>
                                <Button
                                    variant="outline"
                                    size="sm"
                                    onClick={() => exportReport('monthly')}
                                >
                                    <Download className="mr-2" size={14} />
                                    Exportar
                                </Button>
                            </CardHeader>
                            <CardContent>
                                <ResponsiveContainer width="100%" height={300}>
                                    <AreaChart data={monthlyProgressData}>
                                        <CartesianGrid strokeDasharray="3 3" />
                                        <XAxis dataKey="month" />
                                        <YAxis />
                                        <Tooltip />
                                        <Legend />
                                        <Area type="monotone" dataKey="usuarios" stackId="1" stroke="#3b82f6" fill="#3b82f6" name="Nuevos Usuarios" />
                                        <Area type="monotone" dataKey="certificados" stackId="1" stroke="#10b981" fill="#10b981" name="Certificados" />
                                        <Area type="monotone" dataKey="evaluaciones" stackId="1" stroke="#f59e0b" fill="#f59e0b" name="Evaluaciones" />
                                    </AreaChart>
                                </ResponsiveContainer>
                            </CardContent>
                        </Card>

                        <Card>
                            <CardHeader className="flex flex-row items-center justify-between">
                                <div>
                                    <CardTitle>Cursos con Mejor Rendimiento</CardTitle>
                                    <CardDescription>Ranking por puntuación promedio</CardDescription>
                                </div>
                                <Button
                                    variant="outline"
                                    size="sm"
                                    onClick={() => exportReport('performance')}
                                >
                                    <Download className="mr-2" size={14} />
                                    Exportar
                                </Button>
                            </CardHeader>
                            <CardContent>
                                <div className="space-y-4">
                                    {topPerformingCourses.map((course, index) => (
                                        <div key={course.course} className="flex items-center justify-between p-3 bg-gray-50 rounded-lg">
                                            <div className="flex items-center space-x-3">
                                                <div className="w-8 h-8 bg-blue-600 rounded-full flex items-center justify-center text-white font-bold text-sm">
                                                    {index + 1}
                                                </div>
                                                <div>
                                                    <p className="font-medium">{course.course}</p>
                                                    <p className="text-sm text-gray-600">{course.completions} completados</p>
                                                </div>
                                            </div>
                                            <Badge variant="secondary" className="bg-green-100 text-green-800">
                                                {course.score}% promedio
                                            </Badge>
                                        </div>
                                    ))}
                                </div>
                            </CardContent>
                        </Card>
                    </div>

                    {/* Métricas adicionales */}
                    <Card>
                        <CardHeader>
                            <CardTitle>Resumen Detallado</CardTitle>
                            <CardDescription>Estadísticas detalladas del rendimiento general</CardDescription>
                        </CardHeader>
                        <CardContent>
                            <div className="grid grid-cols-1 md:grid-cols-3 gap-6">
                                <div className="text-center">
                                    <div className="text-3xl font-bold text-green-600">94.2%</div>
                                    <p className="text-sm text-gray-600">Tasa de satisfacción</p>
                                </div>
                                <div className="text-center">
                                    <div className="text-3xl font-bold text-blue-600">2.8 hrs</div>
                                    <p className="text-sm text-gray-600">Tiempo promedio por curso</p>
                                </div>
                                <div className="text-center">
                                    <div className="text-3xl font-bold text-purple-600">89.5%</div>
                                    <p className="text-sm text-gray-600">Tasa de retención</p>
                                </div>
                            </div>
                        </CardContent>
                    </Card>

                    {/* Reportes rápidos */}
                    <Card>
                        <CardHeader>
                            <CardTitle>Generar Reportes</CardTitle>
                            <CardDescription>Exportar datos específicos para análisis</CardDescription>
                        </CardHeader>
                        <CardContent>
                            <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4">
                                <Button variant="outline" className="flex flex-col h-20" onClick={() => exportReport('completion')}>
                                    <BookOpen className="mb-2" size={20} />
                                    <span>Completación Cursos</span>
                                </Button>

                                <Button variant="outline" className="flex flex-col h-20" onClick={() => exportReport('users')}>
                                    <Users className="mb-2" size={20} />
                                    <span>Distribución Usuarios</span>
                                </Button>

                                <Button variant="outline" className="flex flex-col h-20" onClick={() => exportReport('monthly')}>
                                    <TrendingUp className="mb-2" size={20} />
                                    <span>Progreso Mensual</span>
                                </Button>

                                <Button variant="outline" className="flex flex-col h-20" onClick={() => exportReport('performance')}>
                                    <Target className="mb-2" size={20} />
                                    <span>Rendimiento Cursos</span>
                                </Button>
                            </div>
                        </CardContent>
                    </Card>
                </main>
            </div>
        </div>
    );
}

// ===== app\settings\page.tsx =====

'use client';

import { useState } from "react";
import Sidebar from "@/components/sidebar";
import { Button } from "@/components/ui/button";
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card";
import { Input } from "@/components/ui/input";
import { Label } from "@/components/ui/label";
import { Switch } from "@/components/ui/switch";
import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from "@/components/ui/select";
import { Tabs, TabsContent, TabsList, TabsTrigger } from "@/components/ui/tabs";
import { Badge } from "@/components/ui/badge";
import { useToast } from "@/hooks/use-toast";
import {
    Save,
    Download,
    Upload,
    Bell,
    Shield,
    Globe,
    Mail,
    User,
    Lock,
    Palette,
    Database,
    Server,
    CreditCard,
    Users,
    FileText
} from "lucide-react";

export default function SettingsPage() {
    const [activeTab, setActiveTab] = useState("general");
    const { toast } = useToast();

    // Estados para los settings
    const [settings, setSettings] = useState({
        // General
        companyName: "LearningHub Pro",
        timezone: "America/Mexico_City",
        language: "es",
        dateFormat: "DD/MM/YYYY",

        // Notifications
        emailNotifications: true,
        pushNotifications: false,
        courseCompletions: true,
        newUsers: true,
        systemAlerts: true,

        // Security
        twoFactorAuth: false,
        sessionTimeout: 30,
        passwordExpiration: 90,
        loginAttempts: 5,

        // Appearance
        theme: "light",
        sidebarCollapsed: false,
        animations: true,

        // Integration
        apiEnabled: false,
        webhooksEnabled: false,
        analyticsEnabled: true,
    });

    const handleSave = () => {
        toast({
            title: "Configuración guardada",
            description: "Tus cambios se han guardado exitosamente.",
        });
    };

    const handleExportSettings = () => {
        toast({
            title: "Configuración exportada",
            description: "La configuración ha sido exportada exitosamente.",
        });
    };

    const handleImportSettings = () => {
        toast({
            title: "Configuración importada",
            description: "La configuración ha sido importada exitosamente.",
        });
    };

    return (
        <div className="flex h-screen overflow-hidden bg-gray-50">
            <Sidebar />

            <div className="flex-1 flex flex-col overflow-hidden">
                <header className="bg-white shadow-sm border-b border-gray-200 px-6 py-4">
                    <div className="flex items-center justify-between">
                        <div className="flex items-center space-x-3">
                            <SettingsIcon className="text-blue-600" size={28} />
                            <div>
                                <h2 className="text-2xl font-bold text-gray-900">Configuración</h2>
                                <p className="text-gray-600">Personaliza la plataforma a tus necesidades</p>
                            </div>
                        </div>
                        <div className="flex items-center space-x-3">
                            <Button variant="outline" onClick={handleExportSettings}>
                                <Download className="mr-2" size={16} />
                                Exportar
                            </Button>
                            <Button variant="outline" onClick={handleImportSettings}>
                                <Upload className="mr-2" size={16} />
                                Importar
                            </Button>
                            <Button onClick={handleSave} className="bg-blue-600 hover:bg-blue-700">
                                <Save className="mr-2" size={16} />
                                Guardar Cambios
                            </Button>
                        </div>
                    </div>
                </header>

                <main className="flex-1 overflow-auto p-6">
                    <Tabs value={activeTab} onValueChange={setActiveTab} className="space-y-6">
                        <TabsList className="grid grid-cols-2 md:grid-cols-6 lg:grid-cols-7 gap-2">
                            <TabsTrigger value="general" className="flex items-center space-x-2">
                                <SettingsIcon size={16} />
                                <span>General</span>
                            </TabsTrigger>
                            <TabsTrigger value="notifications" className="flex items-center space-x-2">
                                <Bell size={16} />
                                <span>Notificaciones</span>
                            </TabsTrigger>
                            <TabsTrigger value="security" className="flex items-center space-x-2">
                                <Shield size={16} />
                                <span>Seguridad</span>
                            </TabsTrigger>
                            <TabsTrigger value="appearance" className="flex items-center space-x-2">
                                <Palette size={16} />
                                <span>Apariencia</span>
                            </TabsTrigger>
                            <TabsTrigger value="integrations" className="flex items-center space-x-2">
                                <Server size={16} />
                                <span>Integraciones</span>
                            </TabsTrigger>
                            <TabsTrigger value="billing" className="flex items-center space-x-2">
                                <CreditCard size={16} />
                                <span>Facturación</span>
                            </TabsTrigger>
                            <TabsTrigger value="users" className="flex items-center space-x-2">
                                <Users size={16} />
                                <span>Usuarios</span>
                            </TabsTrigger>
                        </TabsList>

                        {/* General Settings */}
                        <TabsContent value="general">
                            <div className="grid grid-cols-1 lg:grid-cols-2 gap-6">
                                <Card>
                                    <CardHeader>
                                        <CardTitle>Información de la Empresa</CardTitle>
                                        <CardDescription>Configura los datos básicos de tu organización</CardDescription>
                                    </CardHeader>
                                    <CardContent className="space-y-4">
                                        <div className="space-y-2">
                                            <Label htmlFor="companyName">Nombre de la Empresa</Label>
                                            <Input
                                                id="companyName"
                                                value={settings.companyName}
                                                onChange={(e) => setSettings({ ...settings, companyName: e.target.value })}
                                            />
                                        </div>

                                        <div className="space-y-2">
                                            <Label htmlFor="timezone">Zona Horaria</Label>
                                            <Select value={settings.timezone} onValueChange={(value) => setSettings({ ...settings, timezone: value })}>
                                                <SelectTrigger>
                                                    <SelectValue placeholder="Seleccionar zona horaria" />
                                                </SelectTrigger>
                                                <SelectContent>
                                                    <SelectItem value="America/Mexico_City">Ciudad de México (UTC-6)</SelectItem>
                                                    <SelectItem value="America/New_York">Nueva York (UTC-5)</SelectItem>
                                                    <SelectItem value="Europe/Madrid">Madrid (UTC+1)</SelectItem>
                                                </SelectContent>
                                            </Select>
                                        </div>

                                        <div className="grid grid-cols-2 gap-4">
                                            <div className="space-y-2">
                                                <Label htmlFor="language">Idioma</Label>
                                                <Select value={settings.language} onValueChange={(value) => setSettings({ ...settings, language: value })}>
                                                    <SelectTrigger>
                                                        <SelectValue placeholder="Seleccionar idioma" />
                                                    </SelectTrigger>
                                                    <SelectContent>
                                                        <SelectItem value="es">Español</SelectItem>
                                                        <SelectItem value="en">English</SelectItem>
                                                        <SelectItem value="pt">Português</SelectItem>
                                                    </SelectContent>
                                                </Select>
                                            </div>

                                            <div className="space-y-2">
                                                <Label htmlFor="dateFormat">Formato de Fecha</Label>
                                                <Select value={settings.dateFormat} onValueChange={(value) => setSettings({ ...settings, dateFormat: value })}>
                                                    <SelectTrigger>
                                                        <SelectValue placeholder="Seleccionar formato" />
                                                    </SelectTrigger>
                                                    <SelectContent>
                                                        <SelectItem value="DD/MM/YYYY">DD/MM/YYYY</SelectItem>
                                                        <SelectItem value="MM/DD/YYYY">MM/DD/YYYY</SelectItem>
                                                        <SelectItem value="YYYY-MM-DD">YYYY-MM-DD</SelectItem>
                                                    </SelectContent>
                                                </Select>
                                            </div>
                                        </div>
                                    </CardContent>
                                </Card>

                                <Card>
                                    <CardHeader>
                                        <CardTitle>Información del Sistema</CardTitle>
                                        <CardDescription>Estado y detalles técnicos de la plataforma</CardDescription>
                                    </CardHeader>
                                    <CardContent className="space-y-4">
                                        <div className="flex justify-between items-center p-3 bg-gray-50 rounded-lg">
                                            <span className="text-sm font-medium">Versión</span>
                                            <Badge variant="outline">v2.1.0</Badge>
                                        </div>

                                        <div className="flex justify-between items-center p-3 bg-gray-50 rounded-lg">
                                            <span className="text-sm font-medium">Última Actualización</span>
                                            <span className="text-sm text-gray-600">2024-01-15</span>
                                        </div>

                                        <div className="flex justify-between items-center p-3 bg-gray-50 rounded-lg">
                                            <span className="text-sm font-medium">Estado</span>
                                            <Badge variant="default" className="bg-green-100 text-green-800">Operativo</Badge>
                                        </div>

                                        <div className="flex justify-between items-center p-3 bg-gray-50 rounded-lg">
                                            <span className="text-sm font-medium">Espacio Utilizado</span>
                                            <span className="text-sm text-gray-600">2.5 GB / 10 GB</span>
                                        </div>

                                        <div className="pt-4">
                                            <Button variant="outline" className="w-full">
                                                <Database className="mr-2" size={16} />
                                                Respaldar Base de Datos
                                            </Button>
                                        </div>
                                    </CardContent>
                                </Card>
                            </div>
                        </TabsContent>

                        {/* Notifications Settings */}
                        <TabsContent value="notifications">
                            <Card>
                                <CardHeader>
                                    <CardTitle>Configuración de Notificaciones</CardTitle>
                                    <CardDescription>Gestiona cómo y cuándo recibir notificaciones</CardDescription>
                                </CardHeader>
                                <CardContent className="space-y-6">
                                    <div className="flex items-center justify-between">
                                        <div className="space-y-0.5">
                                            <Label htmlFor="email-notifications">Notificaciones por Email</Label>
                                            <p className="text-sm text-gray-500">Recibir notificaciones importantes por correo electrónico</p>
                                        </div>
                                        <Switch
                                            id="email-notifications"
                                            checked={settings.emailNotifications}
                                            onCheckedChange={(checked) => setSettings({ ...settings, emailNotifications: checked })}
                                        />
                                    </div>

                                    <div className="flex items-center justify-between">
                                        <div className="space-y-0.5">
                                            <Label htmlFor="push-notifications">Notificaciones Push</Label>
                                            <p className="text-sm text-gray-500">Notificaciones en tiempo real en el navegador</p>
                                        </div>
                                        <Switch
                                            id="push-notifications"
                                            checked={settings.pushNotifications}
                                            onCheckedChange={(checked) => setSettings({ ...settings, pushNotifications: checked })}
                                        />
                                    </div>

                                    <div className="border-t pt-6">
                                        <h3 className="font-medium mb-4">Tipos de Notificaciones</h3>

                                        <div className="space-y-4">
                                            <div className="flex items-center justify-between">
                                                <div className="space-y-0.5">
                                                    <Label htmlFor="course-completions">Completación de Cursos</Label>
                                                    <p className="text-sm text-gray-500">Cuando un usuario complete un curso</p>
                                                </div>
                                                <Switch
                                                    id="course-completions"
                                                    checked={settings.courseCompletions}
                                                    onCheckedChange={(checked) => setSettings({ ...settings, courseCompletions: checked })}
                                                />
                                            </div>

                                            <div className="flex items-center justify-between">
                                                <div className="space-y-0.5">
                                                    <Label htmlFor="new-users">Nuevos Usuarios</Label>
                                                    <p className="text-sm text-gray-500">Cuando se registre un nuevo usuario</p>
                                                </div>
                                                <Switch
                                                    id="new-users"
                                                    checked={settings.newUsers}
                                                    onCheckedChange={(checked) => setSettings({ ...settings, newUsers: checked })}
                                                />
                                            </div>

                                            <div className="flex items-center justify-between">
                                                <div className="space-y-0.5">
                                                    <Label htmlFor="system-alerts">Alertas del Sistema</Label>
                                                    <p className="text-sm text-gray-500">Notificaciones técnicas y de mantenimiento</p>
                                                </div>
                                                <Switch
                                                    id="system-alerts"
                                                    checked={settings.systemAlerts}
                                                    onCheckedChange={(checked) => setSettings({ ...settings, systemAlerts: checked })}
                                                />
                                            </div>
                                        </div>
                                    </div>
                                </CardContent>
                            </Card>
                        </TabsContent>

                        {/* Security Settings */}
                        <TabsContent value="security">
                            <div className="grid grid-cols-1 lg:grid-cols-2 gap-6">
                                <Card>
                                    <CardHeader>
                                        <CardTitle>Autenticación y Acceso</CardTitle>
                                        <CardDescription>Configuración de seguridad para usuarios</CardDescription>
                                    </CardHeader>
                                    <CardContent className="space-y-4">
                                        <div className="flex items-center justify-between">
                                            <div className="space-y-0.5">
                                                <Label htmlFor="two-factor">Autenticación de Dos Factores</Label>
                                                <p className="text-sm text-gray-500">Requerir 2FA para todos los usuarios</p>
                                            </div>
                                            <Switch
                                                id="two-factor"
                                                checked={settings.twoFactorAuth}
                                                onCheckedChange={(checked) => setSettings({ ...settings, twoFactorAuth: checked })}
                                            />
                                        </div>

                                        <div className="space-y-2">
                                            <Label htmlFor="session-timeout">Tiempo de Espera de Sesión (minutos)</Label>
                                            <Input
                                                id="session-timeout"
                                                type="number"
                                                value={settings.sessionTimeout}
                                                onChange={(e) => setSettings({ ...settings, sessionTimeout: Number(e.target.value) })}
                                            />
                                        </div>

                                        <div className="space-y-2">
                                            <Label htmlFor="password-expiration">Expiración de Contraseña (días)</Label>
                                            <Input
                                                id="password-expiration"
                                                type="number"
                                                value={settings.passwordExpiration}
                                                onChange={(e) => setSettings({ ...settings, passwordExpiration: Number(e.target.value) })}
                                            />
                                        </div>

                                        <div className="space-y-2">
                                            <Label htmlFor="login-attempts">Intentos de Login Permitidos</Label>
                                            <Input
                                                id="login-attempts"
                                                type="number"
                                                value={settings.loginAttempts}
                                                onChange={(e) => setSettings({ ...settings, loginAttempts: Number(e.target.value) })}
                                            />
                                        </div>
                                    </CardContent>
                                </Card>

                                <Card>
                                    <CardHeader>
                                        <CardTitle>Políticas de Seguridad</CardTitle>
                                        <CardDescription>Configuración avanzada de seguridad</CardDescription>
                                    </CardHeader>
                                    <CardContent className="space-y-4">
                                        <div className="p-4 bg-blue-50 rounded-lg">
                                            <h4 className="font-medium text-blue-900 mb-2">Recomendaciones de Seguridad</h4>
                                            <ul className="text-sm text-blue-700 space-y-1">
                                                <li>• Use contraseñas complejas con mínimo 12 caracteres</li>
                                                <li>• Active la autenticación de dos factores</li>
                                                <li>• Mantenga el software actualizado</li>
                                                <li>• Realice respaldos regularmente</li>
                                            </ul>
                                        </div>

                                        <div className="space-y-2">
                                            <Label>Registro de Actividad</Label>
                                            <div className="text-sm text-gray-600">
                                                <p>Último acceso: Hoy a las 14:30</p>
                                                <p>Dirección IP: 192.168.1.100</p>
                                                <p>Dispositivo: Chrome en Windows</p>
                                            </div>
                                        </div>

                                        <Button variant="outline" className="w-full">
                                            <FileText className="mr-2" size={16} />
                                            Ver Logs de Seguridad
                                        </Button>
                                    </CardContent>
                                </Card>
                            </div>
                        </TabsContent>

                        {/* Más tabs pueden ser añadidos aquí */}

                    </Tabs>
                </main>
            </div>
        </div>
    );
}

// Componente de ícono para Settings
function SettingsIcon({ size, className }: { size: number; className?: string }) {
    return (
        <svg
            className={className}
            width={size}
            height={size}
            viewBox="0 0 24 24"
            fill="none"
            stroke="currentColor"
            strokeWidth="2"
            strokeLinecap="round"
            strokeLinejoin="round"
        >
            <path d="M12.22 2h-.44a2 2 0 0 0-2 2v.18a2 2 0 0 1-1 1.73l-.43.25a2 2 0 0 1-2 0l-.15-.08a2 2 0 0 0-2.73.73l-.22.38a2 2 0 0 0 .73 2.73l.15.1a2 2 0 0 1 1 1.72v.51a2 2 0 0 1-1 1.74l-.15.09a2 2 0 0 0-.73 2.73l.22.38a2 2 0 0 0 2.73.73l.15-.08a2 2 0 0 1 2 0l.43.25a2 2 0 0 1 1 1.73V20a2 2 0 0 0 2 2h.44a2 2 0 0 0 2-2v-.18a2 2 0 0 1 1-1.73l.43-.25a2 2 0 0 1 2 0l.15.08a2 2 0 0 0 2.73-.73l.22-.39a2 2 0 0 0-.73-2.73l-.15-.08a2 2 0 0 1-1-1.74v-.5a2 2 0 0 1 1-1.74l.15-.09a2 2 0 0 0 .73-2.73l-.22-.38a2 2 0 0 0-2.73-.73l-.15.08a2 2 0 0 1-2 0l-.43-.25a2 2 0 0 1-1-1.73V4a2 2 0 0 0-2-2z" />
            <circle cx="12" cy="12" r="3" />
        </svg>
    );
}

// ===== app\users\page.tsx =====

'use client';

import { useState } from "react";
import { useSafeQuery } from "@/hooks/useSafeQuery";
import { useToast } from "@/hooks/use-toast";
import Sidebar from "@/components/sidebar";
import UserTable from "@/components/user-table";
import { Users as UsersIcon, Plus, Download, Filter, Search } from "lucide-react";
import { Button } from "@/components/ui/button";
import { Input } from "@/components/ui/input";
import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from "@/components/ui/select";
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card";
import { Badge } from "@/components/ui/badge";
import { exportUsersToExcel } from "@/lib/exportUtils";
import { User } from "@/types";

export default function UsersPage() {
    const [searchTerm, setSearchTerm] = useState("");
    const [roleFilter, setRoleFilter] = useState("all");
    const [statusFilter, setStatusFilter] = useState("all");
    const { toast } = useToast();

    const { data: users, isLoading } = useSafeQuery<User[]>({
        queryKey: ['/api/users'],
    });

    const handleExportUsers = () => {
        if (users && users.length > 0) {
            exportUsersToExcel(users);
            toast({
                title: "Exportación exitosa",
                description: "Los datos de usuarios han sido exportados a Excel.",
            });
        } else {
            toast({
                title: "Sin datos",
                description: "No hay usuarios para exportar.",
                variant: "destructive",
            });
        }
    };

    // Estadísticas para el dashboard
    const userStats = {
        total: users?.length || 0,
        students: users?.filter(user => user.role === 'student').length || 0,
        instructors: users?.filter(user => user.role === 'instructor').length || 0,
        admins: users?.filter(user => user.role === 'admin').length || 0,
        active: users?.filter(user => user.status === 'active').length || 0,
        inactive: users?.filter(user => user.status === 'inactive').length || 0,
        suspended: users?.filter(user => user.status === 'suspended').length || 0,
    };

    return (
        <div className="flex h-screen overflow-hidden bg-gray-50">
            <Sidebar />

            <div className="flex-1 flex flex-col overflow-hidden">
                <header className="bg-white shadow-sm border-b border-gray-200 px-6 py-4">
                    <div className="flex items-center justify-between">
                        <div className="flex items-center space-x-3">
                            <UsersIcon className="text-blue-600" size={28} />
                            <div>
                                <h2 className="text-2xl font-bold text-gray-900">Gestión de Usuarios</h2>
                                <p className="text-gray-600">Administra usuarios y sus capacitaciones</p>
                            </div>
                        </div>
                        <div className="flex items-center space-x-3">
                            <Button
                                variant="outline"
                                onClick={handleExportUsers}
                                disabled={!users || users.length === 0}
                            >
                                <Download className="mr-2" size={16} />
                                Exportar
                            </Button>
                            <Button className="bg-blue-600 hover:bg-blue-700">
                                <Plus className="mr-2" size={16} />
                                Agregar Usuario
                            </Button>
                        </div>
                    </div>
                </header>

                <main className="flex-1 overflow-auto p-6 space-y-6">
                    {/* Dashboard de estadísticas */}
                    <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6">
                        <Card>
                            <CardHeader className="pb-2">
                                <CardTitle className="text-sm font-medium">Total Usuarios</CardTitle>
                            </CardHeader>
                            <CardContent>
                                <div className="text-2xl font-bold">{userStats.total}</div>
                                <p className="text-xs text-gray-600 mt-1">Usuarios registrados</p>
                            </CardContent>
                        </Card>

                        <Card>
                            <CardHeader className="pb-2">
                                <CardTitle className="text-sm font-medium">Por Rol</CardTitle>
                            </CardHeader>
                            <CardContent>
                                <div className="space-y-1">
                                    <div className="flex justify-between items-center">
                                        <span className="text-sm">Estudiantes</span>
                                        <Badge variant="outline">{userStats.students}</Badge>
                                    </div>
                                    <div className="flex justify-between items-center">
                                        <span className="text-sm">Instructores</span>
                                        <Badge variant="secondary">{userStats.instructors}</Badge>
                                    </div>
                                    <div className="flex justify-between items-center">
                                        <span className="text-sm">Administradores</span>
                                        <Badge variant="destructive">{userStats.admins}</Badge>
                                    </div>
                                </div>
                            </CardContent>
                        </Card>

                        <Card>
                            <CardHeader className="pb-2">
                                <CardTitle className="text-sm font-medium">Por Estado</CardTitle>
                            </CardHeader>
                            <CardContent>
                                <div className="space-y-1">
                                    <div className="flex justify-between items-center">
                                        <span className="text-sm">Activos</span>
                                        <Badge variant="default">{userStats.active}</Badge>
                                    </div>
                                    <div className="flex justify-between items-center">
                                        <span className="text-sm">Inactivos</span>
                                        <Badge variant="secondary">{userStats.inactive}</Badge>
                                    </div>
                                    <div className="flex justify-between items-center">
                                        <span className="text-sm">Suspendidos</span>
                                        <Badge variant="destructive">{userStats.suspended}</Badge>
                                    </div>
                                </div>
                            </CardContent>
                        </Card>

                        <Card>
                            <CardHeader className="pb-2">
                                <CardTitle className="text-sm font-medium">Actividad Reciente</CardTitle>
                            </CardHeader>
                            <CardContent>
                                <div className="text-2xl font-bold text-green-600">+12%</div>
                                <p className="text-xs text-gray-600 mt-1">Crecimiento mensual</p>
                            </CardContent>
                        </Card>
                    </div>

                    {/* Filtros y búsqueda */}
                    <Card>
                        <CardContent className="p-4">
                            <div className="flex flex-col sm:flex-row gap-4">
                                <div className="flex-1">
                                    <Input
                                        placeholder="Buscar por nombre, email..."
                                        value={searchTerm}
                                        onChange={(e) => setSearchTerm(e.target.value)}
                                        className="w-full"
                                    />
                                </div>

                                <Select value={roleFilter} onValueChange={setRoleFilter}>
                                    <SelectTrigger className="w-full sm:w-40">
                                        <SelectValue placeholder="Todos los roles" />
                                    </SelectTrigger>
                                    <SelectContent>
                                        <SelectItem value="all">Todos los roles</SelectItem>
                                        <SelectItem value="admin">Administrador</SelectItem>
                                        <SelectItem value="instructor">Instructor</SelectItem>
                                        <SelectItem value="student">Estudiante</SelectItem>
                                    </SelectContent>
                                </Select>

                                <Select value={statusFilter} onValueChange={setStatusFilter}>
                                    <SelectTrigger className="w-full sm:w-40">
                                        <SelectValue placeholder="Todos los estados" />
                                    </SelectTrigger>
                                    <SelectContent>
                                        <SelectItem value="all">Todos los estados</SelectItem>
                                        <SelectItem value="active">Activo</SelectItem>
                                        <SelectItem value="inactive">Inactivo</SelectItem>
                                        <SelectItem value="suspended">Suspendido</SelectItem>
                                    </SelectContent>
                                </Select>

                                <Button variant="outline" className="w-full sm:w-auto">
                                    <Filter className="mr-2" size={16} />
                                    Filtrar
                                </Button>
                            </div>
                        </CardContent>
                    </Card>

                    {/* Tabla de usuarios */}
                    <UserTable
                        searchTerm={searchTerm}
                        roleFilter={roleFilter}
                        statusFilter={statusFilter}
                    />
                </main>
            </div>
        </div>
    );
}

// ===== components\certificate-card.tsx =====

'use client';

import { Award, Calendar, Download, Eye, Clock, AlertTriangle, CheckCircle } from 'lucide-react';
import { Button } from '@/components/ui/button';
import { Badge } from '@/components/ui/badge';
import { Card, CardContent } from '@/components/ui/card';

interface CertificateCardProps {
    certificate: {
        id: string;
        course_title: string;
        issued_at: string;
        score: number;
        validity_status: 'valid' | 'expiring_soon' | 'expired';
        days_remaining: number;
        expiration_date: string;
    };
    onView: (id: string) => void;
    onDownload: (id: string) => void;
}

export function CertificateCard({ certificate, onView, onDownload }: CertificateCardProps) {
    const getStatusIcon = () => {
        switch (certificate.validity_status) {
            case 'valid':
                return <CheckCircle className="h-5 w-5 text-green-600" />;
            case 'expiring_soon':
                return <AlertTriangle className="h-5 w-5 text-yellow-600" />;
            case 'expired':
                return <Clock className="h-5 w-5 text-red-600" />;
            default:
                return <Award className="h-5 w-5 text-gray-600" />;
        }
    };

    const getStatusColor = () => {
        switch (certificate.validity_status) {
            case 'valid':
                return 'bg-green-100 text-green-800';
            case 'expiring_soon':
                return 'bg-yellow-100 text-yellow-800';
            case 'expired':
                return 'bg-red-100 text-red-800';
            default:
                return 'bg-gray-100 text-gray-800';
        }
    };

    const getStatusText = () => {
        switch (certificate.validity_status) {
            case 'valid':
                return `Válido por ${certificate.days_remaining} días más`;
            case 'expiring_soon':
                return `Expira en ${certificate.days_remaining} días`;
            case 'expired':
                return 'Expirado';
            default:
                return 'Desconocido';
        }
    };

    return (
        <Card className="hover:shadow-lg transition-shadow">
            <CardContent className="p-6">
                <div className="flex items-start justify-between mb-4">
                    <div className="flex items-center space-x-3">
                        <div className="p-2 bg-blue-100 rounded-lg">
                            <Award className="h-6 w-6 text-blue-600" />
                        </div>
                        <div>
                            <h3 className="font-semibold text-lg">{certificate.course_title}</h3>
                            <p className="text-sm text-gray-600">Score: {certificate.score}%</p>
                        </div>
                    </div>
                    <Badge className={getStatusColor()}>
                        {getStatusIcon()}
                        <span className="ml-1">{getStatusText()}</span>
                    </Badge>
                </div>

                <div className="flex items-center justify-between text-sm text-gray-600 mb-4">
                    <div className="flex items-center">
                        <Calendar className="h-4 w-4 mr-1" />
                        <span>Emitido: {new Date(certificate.issued_at).toLocaleDateString()}</span>
                    </div>
                    <div className="flex items-center">
                        <Clock className="h-4 w-4 mr-1" />
                        <span>Expira: {new Date(certificate.expiration_date).toLocaleDateString()}</span>
                    </div>
                </div>

                <div className="flex space-x-2">
                    <Button
                        variant="outline"
                        className="flex-1"
                        onClick={() => onView(certificate.id)}
                    >
                        <Eye className="h-4 w-4 mr-2" />
                        Ver Detalles
                    </Button>
                    <Button
                        className="flex-1"
                        onClick={() => onDownload(certificate.id)}
                        disabled={certificate.validity_status === 'expired'}
                    >
                        <Download className="h-4 w-4 mr-2" />
                        Descargar PDF
                    </Button>
                </div>
            </CardContent>
        </Card>
    );
}

// ===== components\certificate-generator.tsx =====

'use client';

import { useState, useEffect } from "react";
import { useSafeQuery } from "@/hooks/useSafeQuery";
import { useForm } from "react-hook-form";
import { zodResolver } from "@hookform/resolvers/zod";
import { z } from "zod";
import { useToast } from "@/hooks/use-toast";
import { Button } from "@/components/ui/button";
import { Input } from "@/components/ui/input";
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card";
import {
    Select,
    SelectContent,
    SelectItem,
    SelectTrigger,
    SelectValue,
} from "@/components/ui/select";
import {
    Form,
    FormControl,
    FormField,
    FormItem,
    FormLabel,
    FormMessage,
} from "@/components/ui/form";
import { Award, Download, Eye, Mail, QrCode, GraduationCap, Send, User, BookOpen } from "lucide-react";
import { User as UserType, Course } from "@/types";
import { AlertDialog, AlertDialogAction, AlertDialogCancel, AlertDialogContent, AlertDialogDescription, AlertDialogFooter, AlertDialogHeader, AlertDialogTitle, AlertDialogTrigger } from "@/components/ui/alert-dialog";

const certificateSchema = z.object({
    userId: z.string().min(1, "Selecciona un estudiante"),
    courseId: z.string().min(1, "Selecciona un curso"),
    score: z.number().min(0).max(100),
    issuedBy: z.string().min(1, "El nombre del instructor es requerido"),
    expirationDays: z.number().min(30).max(365).default(365),
});

type CertificateForm = z.infer<typeof certificateSchema>;

export default function CertificateGenerator() {
    const [previewData, setPreviewData] = useState<any>(null);
    const [isGenerating, setIsGenerating] = useState(false);
    const { toast } = useToast();

    const form = useForm<CertificateForm>({
        resolver: zodResolver(certificateSchema),
        defaultValues: {
            userId: "",
            courseId: "",
            score: 85,
            issuedBy: "Instructor Principal",
            expirationDays: 365,
        },
    });

    const { data: users, isLoading: usersLoading } = useSafeQuery<UserType[]>({
        queryKey: ['/api/users'],
    });

    const { data: courses, isLoading: coursesLoading } = useSafeQuery<Course[]>({
        queryKey: ['/api/courses'],
    });

    // Filtrar solo estudiantes
    const students = users?.filter(user => user.role === 'student') || [];

    const selectedUserId = form.watch("userId");
    const selectedCourseId = form.watch("courseId");

    const selectedStudent = students.find(student => student.id === selectedUserId);
    const selectedCourse = courses?.find(course => course.id === selectedCourseId);

    useEffect(() => {
        if (selectedStudent && selectedCourse) {
            setPreviewData({
                studentName: `${selectedStudent.first_name} ${selectedStudent.last_name}`,
                studentEmail: selectedStudent.email,
                courseName: selectedCourse.title,
                score: form.getValues("score"),
                issuedBy: form.getValues("issuedBy"),
            });
        } else {
            setPreviewData(null);
        }
    }, [selectedUserId, selectedCourseId, form.watch("score"), form.watch("issuedBy")]);

    const onSubmit = async (data: CertificateForm) => {
        setIsGenerating(true);
        try {
            const response = await fetch('/api/certificates', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({
                    user_id: data.userId,
                    course_id: data.courseId,
                    score: data.score,
                    issued_by: data.issuedBy,
                    expiration_days: data.expirationDays,
                }),
            });

            if (response.ok) {
                const certificate = await response.json();

                toast({
                    title: "✅ Certificado generado",
                    description: `Certificado ${certificate.certificate_number} creado exitosamente.`,
                });

                // Actualizar vista previa con datos reales
                setPreviewData({
                    ...previewData,
                    certificateNumber: certificate.certificate_number,
                    issuedAt: certificate.issued_at,
                    expirationDate: certificate.expiration_date,
                });

            } else {
                const errorData = await response.json();
                throw new Error(errorData.error || 'Error al generar certificado');
            }
        } catch (error: any) {
            toast({
                title: "❌ Error",
                description: error.message || "No se pudo generar el certificado",
                variant: "destructive",
            });
        } finally {
            setIsGenerating(false);
        }
    };

    const handleDownloadPDF = () => {
        if (!previewData) return;

        toast({
            title: "📥 Descarga iniciada",
            description: "El certificado se está descargando en formato PDF.",
        });

        // Simular descarga (en producción, generar PDF real)
        const link = document.createElement('a');
        link.href = '/api/certificates/template'; // Endpoint para generar PDF
        link.download = `certificado-${previewData.certificateNumber || 'template'}.pdf`;
        document.body.appendChild(link);
        link.click();
        document.body.removeChild(link);
    };

    const handleSendEmail = async () => {
        if (!previewData || !selectedUserId) return;

        try {
            const response = await fetch('/api/certificates/send-email', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({
                    userId: selectedUserId,
                    certificateNumber: previewData.certificateNumber,
                }),
            });

            if (response.ok) {
                toast({
                    title: "📧 Email enviado",
                    description: "El certificado ha sido enviado por correo electrónico.",
                });
            } else {
                throw new Error('Error al enviar email');
            }
        } catch (error) {
            toast({
                title: "❌ Error",
                description: "No se pudo enviar el email",
                variant: "destructive",
            });
        }
    };

    return (
        <div className="grid grid-cols-1 lg:grid-cols-2 gap-6">
            <Card>
                <CardHeader>
                    <CardTitle className="flex items-center space-x-2">
                        <Award className="text-blue-600" size={20} />
                        <span>Generar Certificado</span>
                    </CardTitle>
                    <CardDescription>
                        Crear certificado con QR único para verificación
                    </CardDescription>
                </CardHeader>
                <CardContent>
                    <Form {...form}>
                        <form onSubmit={form.handleSubmit(onSubmit)} className="space-y-4">
                            {/* Selección de Estudiante */}
                            <FormField
                                control={form.control}
                                name="userId"
                                render={({ field }) => (
                                    <FormItem>
                                        <FormLabel className="flex items-center">
                                            <User className="mr-2 h-4 w-4" />
                                            Estudiante
                                        </FormLabel>
                                        <Select onValueChange={field.onChange} value={field.value}>
                                            <FormControl>
                                                <SelectTrigger>
                                                    <SelectValue placeholder="Seleccionar estudiante..." />
                                                </SelectTrigger>
                                            </FormControl>
                                            <SelectContent>
                                                {usersLoading ? (
                                                    <SelectItem value="loading" disabled>
                                                        Cargando estudiantes...
                                                    </SelectItem>
                                                ) : students.length === 0 ? (
                                                    <SelectItem value="no-students" disabled>
                                                        No hay estudiantes registrados
                                                    </SelectItem>
                                                ) : (
                                                    students.map((user) => (
                                                        <SelectItem key={user.id} value={user.id}>
                                                            {user.first_name} {user.last_name} - {user.email}
                                                        </SelectItem>
                                                    ))
                                                )}
                                            </SelectContent>
                                        </Select>
                                        <FormMessage />
                                    </FormItem>
                                )}
                            />

                            {/* Selección de Curso */}
                            <FormField
                                control={form.control}
                                name="courseId"
                                render={({ field }) => (
                                    <FormItem>
                                        <FormLabel className="flex items-center">
                                            <BookOpen className="mr-2 h-4 w-4" />
                                            Curso Completado
                                        </FormLabel>
                                        <Select onValueChange={field.onChange} value={field.value}>
                                            <FormControl>
                                                <SelectTrigger>
                                                    <SelectValue placeholder="Seleccionar curso..." />
                                                </SelectTrigger>
                                            </FormControl>
                                            <SelectContent>
                                                {coursesLoading ? (
                                                    <SelectItem value="loading" disabled>
                                                        Cargando cursos...
                                                    </SelectItem>
                                                ) : courses?.length === 0 ? (
                                                    <SelectItem value="no-courses" disabled>
                                                        No hay cursos disponibles
                                                    </SelectItem>
                                                ) : (
                                                    courses?.map((course) => (
                                                        <SelectItem key={course.id} value={course.id}>
                                                            {course.title}
                                                        </SelectItem>
                                                    ))
                                                )}
                                            </SelectContent>
                                        </Select>
                                        <FormMessage />
                                    </FormItem>
                                )}
                            />

                            <div className="grid grid-cols-2 gap-4">
                                {/* Calificación */}
                                <FormField
                                    control={form.control}
                                    name="score"
                                    render={({ field }) => (
                                        <FormItem>
                                            <FormLabel>Calificación (%)</FormLabel>
                                            <FormControl>
                                                <Input
                                                    type="number"
                                                    min="0"
                                                    max="100"
                                                    {...field}
                                                    onChange={(e) => field.onChange(Number(e.target.value))}
                                                />
                                            </FormControl>
                                            <FormMessage />
                                        </FormItem>
                                    )}
                                />

                                {/* Días de expiración */}
                                <FormField
                                    control={form.control}
                                    name="expirationDays"
                                    render={({ field }) => (
                                        <FormItem>
                                            <FormLabel>Válido por (días)</FormLabel>
                                            <FormControl>
                                                <Input
                                                    type="number"
                                                    min="30"
                                                    max="365"
                                                    {...field}
                                                    onChange={(e) => field.onChange(Number(e.target.value))}
                                                />
                                            </FormControl>
                                            <FormMessage />
                                        </FormItem>
                                    )}
                                />
                            </div>

                            {/* Instructor */}
                            <FormField
                                control={form.control}
                                name="issuedBy"
                                render={({ field }) => (
                                    <FormItem>
                                        <FormLabel>Instructor</FormLabel>
                                        <FormControl>
                                            <Input placeholder="Nombre del instructor" {...field} />
                                        </FormControl>
                                        <FormMessage />
                                    </FormItem>
                                )}
                            />

                            <div className="flex space-x-3 pt-4">
                                <Button
                                    type="submit"
                                    className="flex-1 bg-blue-600 hover:bg-blue-700"
                                    disabled={isGenerating || !selectedUserId || !selectedCourseId}
                                >
                                    {isGenerating ? (
                                        <>Generando...</>
                                    ) : (
                                        <>
                                            <Award className="mr-2" size={16} />
                                            Generar Certificado
                                        </>
                                    )}
                                </Button>
                            </div>
                        </form>
                    </Form>
                </CardContent>
            </Card>

            <Card>
                <CardHeader>
                    <CardTitle>Vista Previa del Certificado</CardTitle>
                    <CardDescription>
                        Certificado generado con código QR único
                    </CardDescription>
                </CardHeader>
                <CardContent>
                    {previewData ? (
                        <>
                            <div className="bg-gradient-to-br from-blue-50 to-indigo-100 border-2 border-blue-200 rounded-lg p-6 text-center mb-4">
                                <div className="mb-4">
                                    <div className="w-16 h-16 bg-blue-600 rounded-full flex items-center justify-center mx-auto mb-3">
                                        <GraduationCap className="text-white" size={32} />
                                    </div>
                                    <h2 className="text-xl font-bold text-gray-900 mb-1">
                                        CERTIFICADO DE COMPLETACIÓN
                                    </h2>
                                    <div className="w-24 h-1 bg-blue-600 mx-auto rounded"></div>
                                </div>

                                <div className="space-y-3 text-gray-700">
                                    <p className="text-sm">Se certifica que</p>
                                    <p className="text-xl font-bold text-blue-600">
                                        {previewData.studentName}
                                    </p>
                                    <p className="text-sm">ha completado satisfactoriamente el curso de</p>
                                    <p className="text-lg font-semibold text-gray-900">
                                        {previewData.courseName}
                                    </p>
                                    <p className="text-xs">
                                        con una calificación de{" "}
                                        <span className="font-semibold text-green-600">{previewData.score}%</span>
                                    </p>
                                </div>

                                <div className="flex justify-between items-end mt-6">
                                    <div className="text-left">
                                        <div className="border-b border-gray-400 pb-1 mb-1 w-28">
                                            <p className="text-xs text-gray-600">Fecha</p>
                                            <p className="text-sm font-medium">
                                                {new Date().toLocaleDateString()}
                                            </p>
                                        </div>
                                    </div>

                                    <div className="text-center">
                                        <div className="w-16 h-16 bg-white border border-gray-300 rounded flex items-center justify-center mb-1">
                                            <QrCode className="text-gray-400" size={24} />
                                        </div>
                                        <p className="text-[10px] text-gray-500">Verificar autenticidad</p>
                                    </div>

                                    <div className="text-right">
                                        <div className="border-b border-gray-400 pb-1 mb-1 w-28">
                                            <p className="text-xs text-gray-600">Instructor</p>
                                            <p className="text-sm font-medium">{previewData.issuedBy}</p>
                                        </div>
                                    </div>
                                </div>

                                {previewData.certificateNumber && (
                                    <div className="mt-4 pt-4 border-t border-gray-200">
                                        <p className="text-xs text-gray-500">
                                            Nº de certificado: {previewData.certificateNumber}
                                        </p>
                                        <p className="text-xs text-gray-500">
                                            Válido hasta: {new Date(previewData.expirationDate).toLocaleDateString()}
                                        </p>
                                    </div>
                                )}
                            </div>

                            <div className="flex space-x-3">
                                <Button
                                    className="flex-1 bg-green-600 hover:bg-green-700"
                                    onClick={handleDownloadPDF}
                                    disabled={!previewData.certificateNumber}
                                >
                                    <Download className="mr-2" size={16} />
                                    Descargar PDF
                                </Button>

                                <AlertDialog>
                                    <AlertDialogTrigger asChild>
                                        <Button
                                            variant="outline"
                                            disabled={!previewData.certificateNumber || !previewData.studentEmail}
                                        >
                                            <Mail className="mr-2" size={16} />
                                            Enviar por Email
                                        </Button>
                                    </AlertDialogTrigger>
                                    <AlertDialogContent>
                                        <AlertDialogHeader>
                                            <AlertDialogTitle>Enviar Certificado por Email</AlertDialogTitle>
                                            <AlertDialogDescription>
                                                ¿Estás seguro de que deseas enviar el certificado a {previewData.studentEmail}?
                                            </AlertDialogDescription>
                                        </AlertDialogHeader>
                                        <AlertDialogFooter>
                                            <AlertDialogCancel>Cancelar</AlertDialogCancel>
                                            <AlertDialogAction
                                                onClick={handleSendEmail}
                                            >
                                                <Send className="mr-2" size={16} />
                                                Enviar Email
                                            </AlertDialogAction>
                                        </AlertDialogFooter>
                                    </AlertDialogContent>
                                </AlertDialog>
                            </div>
                        </>
                    ) : (
                        <div className="text-center py-12">
                            <Award className="mx-auto h-16 w-16 text-gray-400 mb-4" />
                            <h3 className="text-lg font-medium text-gray-900 mb-2">
                                Vista previa del certificado
                            </h3>
                            <p className="text-gray-600">
                                Completa el formulario para ver una vista previa del certificado
                            </p>
                        </div>
                    )}
                </CardContent>
            </Card>
        </div>
    );
}

// ===== components\course-content-viewer.tsx =====

// components/course-content-viewer.tsx
'use client';

import { useSafeQuery } from "@/hooks/useSafeQuery";
import { Button } from "@/components/ui/button";
import { Progress } from "@/components/ui/progress";
import { Play, Lock, CheckCircle } from "lucide-react";

interface CourseContentViewerProps {
    courseId: string;
    moduleId?: string;
}

export default function CourseContentViewer({ courseId, moduleId }: CourseContentViewerProps) {
    const { data: modules, isLoading } = useSafeQuery({
        queryKey: ['/api/courses', courseId, 'modules'],
    });

    const { data: userProgress } = useSafeQuery({
        queryKey: ['/api/user-progress', courseId],
    });

    if (isLoading) {
        return <div>Cargando contenido...</div>;
    }

    return (
        <div className="space-y-4">
            <div className="bg-white rounded-lg shadow p-6">
                <h2 className="text-2xl font-bold mb-4">Contenido del Curso</h2>

                <div className="space-y-3">
                    {modules?.map((module: any, index: number) => {
                        const progress = userProgress?.modules?.find((m: any) => m.moduleId === module.id);
                        const isCompleted = progress?.status === 'completed';
                        const isCurrent = module.id === moduleId;

                        return (
                            <div
                                key={module.id}
                                className={`flex items-center justify-between p-4 rounded-lg border-2 ${isCurrent
                                        ? 'border-blue-500 bg-blue-50'
                                        : isCompleted
                                            ? 'border-green-500 bg-green-50'
                                            : 'border-gray-200 hover:border-gray-300'
                                    }`}
                            >
                                <div className="flex items-center space-x-4">
                                    <div className={`w-8 h-8 rounded-full flex items-center justify-center ${isCompleted ? 'bg-green-100 text-green-600' : 'bg-gray-100 text-gray-600'
                                        }`}>
                                        {isCompleted ? (
                                            <CheckCircle size={16} />
                                        ) : (
                                            <span className="text-sm font-medium">{index + 1}</span>
                                        )}
                                    </div>

                                    <div>
                                        <h3 className="font-medium">{module.title}</h3>
                                        <p className="text-sm text-gray-600">
                                            {module.content_type === 'video' ? 'Video' : 'Contenido'} •
                                            {module.duration ? ` ${Math.ceil(module.duration / 60)}min` : ' Duración variable'}
                                        </p>
                                    </div>
                                </div>

                                <div className="flex items-center space-x-2">
                                    {progress && (
                                        <Progress value={progress.percentage} className="w-20" />
                                    )}

                                    <Button
                                        variant={isCurrent ? "default" : "outline"}
                                        size="sm"
                                        href={`/courses/${courseId}/module/${module.id}`}
                                    >
                                        {isCurrent ? 'Continuar' : 'Comenzar'}
                                    </Button>
                                </div>
                            </div>
                        );
                    })}
                </div>
            </div>
        </div>
    );
}

// ===== components\course-player.tsx =====

// components/course-player.tsx
'use client';

import { useState } from "react";
import { useSafeQuery } from "@/hooks/useSafeQuery";
import { Button } from "@/components/ui/button";
import { Progress } from "@/components/ui/progress";
import { Play, Pause, Volume2, VolumeX, Maximize, Settings, ChevronLeft, ChevronRight, CheckCircle, Lock, Clock } from "lucide-react";

interface CoursePlayerProps {
    courseId: string;
    initialModuleId?: string;
}

export default function CoursePlayer({ courseId, initialModuleId }: CoursePlayerProps) {
    const [currentModuleIndex, setCurrentModuleIndex] = useState(0);
    const [isPlaying, setIsPlaying] = useState(false);
    const [currentTime, setCurrentTime] = useState(0);
    const [duration, setDuration] = useState(0);

    const { data: course } = useSafeQuery({
        queryKey: ['/api/courses', courseId],
    });

    const { data: modules, isLoading } = useSafeQuery({
        queryKey: ['/api/courses', courseId, 'modules'],
    });

    const { data: userProgress } = useSafeQuery({
        queryKey: ['/api/user-progress', courseId],
    });

    const currentModule = modules?.[currentModuleIndex];

    const handleModuleComplete = async () => {
        try {
            await fetch('/api/user-progress', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({
                    moduleId: currentModule?.id,
                    courseId,
                    status: 'completed',
                    timeSpent: Math.floor((Date.now() - startTime) / 1000),
                }),
            });
        } catch (error) {
            console.error('Error marking module as complete:', error);
        }
    };

    const navigateToModule = (index: number) => {
        if (index >= 0 && index < (modules?.length || 0)) {
            setCurrentModuleIndex(index);
            setIsPlaying(false);
            setCurrentTime(0);
        }
    };

    const renderMediaPlayer = () => {
        if (!currentModule?.media) {
            return (
                <div className="flex items-center justify-center h-64 bg-gray-100 rounded-lg">
                    <div className="text-center">
                        <p className="text-gray-600">Contenido no disponible</p>
                        <p className="text-sm text-gray-500">Este módulo no tiene contenido multimedia</p>
                    </div>
                </div>
            );
        }

        switch (currentModule.media.file_type.split('/')[0]) {
            case 'video':
                return (
                    <div className="relative bg-black rounded-lg overflow-hidden">
                        <video
                            className="w-full h-auto"
                            controls
                            onPlay={() => setIsPlaying(true)}
                            onPause={() => setIsPlaying(false)}
                            onTimeUpdate={(e) => setCurrentTime(e.currentTarget.currentTime)}
                            onLoadedMetadata={(e) => setDuration(e.currentTarget.duration)}
                        >
                            <source src={`/uploads/${currentModule.media.filename}`} type={currentModule.media.file_type} />
                            Tu navegador no soporta el elemento de video.
                        </video>

                        <div className="absolute bottom-0 left-0 right-0 bg-gradient-to-t from-black/80 to-transparent p-4">
                            <div className="flex items-center space-x-4">
                                <Button
                                    variant="ghost"
                                    size="icon"
                                    onClick={() => setIsPlaying(!isPlaying)}
                                    className="text-white hover:bg-white/20"
                                >
                                    {isPlaying ? <Pause size={20} /> : <Play size={20} />}
                                </Button>

                                <div className="flex-1">
                                    <Progress
                                        value={(currentTime / duration) * 100}
                                        className="h-2"
                                    />
                                </div>

                                <span className="text-white text-sm">
                                    {formatTime(currentTime)} / {formatTime(duration)}
                                </span>
                            </div>
                        </div>
                    </div>
                );

            case 'image':
                return (
                    <div className="flex justify-center">
                        <img
                            src={`/uploads/${currentModule.media.filename}`}
                            alt={currentModule.title}
                            className="max-w-full h-auto rounded-lg shadow-lg"
                        />
                    </div>
                );

            default:
                return (
                    <div className="flex items-center justify-center h-64 bg-gray-100 rounded-lg">
                        <div className="text-center">
                            <p className="text-gray-600">Tipo de contenido no compatible</p>
                            <Button variant="outline" className="mt-2">
                                <Download className="mr-2" size={16} />
                                Descargar Archivo
                            </Button>
                        </div>
                    </div>
                );
        }
    };

    const formatTime = (seconds: number) => {
        const mins = Math.floor(seconds / 60);
        const secs = Math.floor(seconds % 60);
        return `${mins}:${secs.toString().padStart(2, '0')}`;
    };

    if (isLoading) {
        return (
            <div className="flex items-center justify-center h-64">
                <div className="text-center">
                    <div className="animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600 mx-auto mb-4"></div>
                    <p className="text-gray-600">Cargando contenido del curso...</p>
                </div>
            </div>
        );
    }

    return (
        <div className="grid grid-cols-1 lg:grid-cols-4 gap-6">
            {/* Panel de contenido principal */}
            <div className="lg:col-span-3 space-y-6">
                {/* Media Player */}
                <div className="bg-white rounded-lg shadow-lg p-6">
                    <h1 className="text-2xl font-bold text-gray-900 mb-4">{currentModule?.title}</h1>
                    {renderMediaPlayer()}
                </div>

                {/* Descripción y contenido */}
                <div className="bg-white rounded-lg shadow p-6">
                    <h2 className="text-lg font-semibold mb-4">Acerca de este módulo</h2>
                    <p className="text-gray-700 mb-4">{currentModule?.content_text}</p>

                    {currentModule?.duration && (
                        <div className="flex items-center text-sm text-gray-600">
                            <Clock className="mr-2" size={16} />
                            <span>Duración aproximada: {Math.ceil(currentModule.duration / 60)} minutos</span>
                        </div>
                    )}
                </div>

                {/* Navegación */}
                <div className="flex justify-between">
                    <Button
                        variant="outline"
                        onClick={() => navigateToModule(currentModuleIndex - 1)}
                        disabled={currentModuleIndex === 0}
                    >
                        <ChevronLeft className="mr-2" size={16} />
                        Módulo Anterior
                    </Button>

                    <Button
                        className="bg-green-600 hover:bg-green-700"
                        onClick={handleModuleComplete}
                    >
                        <CheckCircle className="mr-2" size={16} />
                        Marcar como Completado
                    </Button>

                    <Button
                        variant="outline"
                        onClick={() => navigateToModule(currentModuleIndex + 1)}
                        disabled={currentModuleIndex === (modules?.length || 0) - 1}
                    >
                        Siguiente Módulo
                        <ChevronRight className="ml-2" size={16} />
                    </Button>
                </div>
            </div>

            {/* Sidebar - Lista de módulos */}
            <div className="lg:col-span-1">
                <div className="bg-white rounded-lg shadow p-6">
                    <h3 className="font-semibold mb-4">Módulos del Curso</h3>

                    <div className="space-y-2">
                        {modules?.map((module: any, index: number) => {
                            const isCurrent = index === currentModuleIndex;
                            const progress = userProgress?.modules?.find((m: any) => m.moduleId === module.id);
                            const isCompleted = progress?.status === 'completed';

                            return (
                                <button
                                    key={module.id}
                                    onClick={() => navigateToModule(index)}
                                    className={`w-full text-left p-3 rounded-lg transition-colors ${isCurrent
                                            ? 'bg-blue-100 border-2 border-blue-500'
                                            : isCompleted
                                                ? 'bg-green-50 border border-green-200'
                                                : 'bg-gray-50 hover:bg-gray-100 border border-gray-200'
                                        }`}
                                >
                                    <div className="flex items-center justify-between">
                                        <div className="flex items-center space-x-3">
                                            <div className={`w-6 h-6 rounded-full flex items-center justify-center text-xs ${isCompleted
                                                    ? 'bg-green-500 text-white'
                                                    : isCurrent
                                                        ? 'bg-blue-500 text-white'
                                                        : 'bg-gray-300 text-gray-600'
                                                }`}>
                                                {isCompleted ? '✓' : index + 1}
                                            </div>
                                            <span className="text-sm font-medium">{module.title}</span>
                                        </div>

                                        {module.duration && (
                                            <span className="text-xs text-gray-500">
                                                {Math.ceil(module.duration / 60)}min
                                            </span>
                                        )}
                                    </div>

                                    {progress && (
                                        <Progress
                                            value={progress.percentage || 0}
                                            className="h-1 mt-2"
                                        />
                                    )}
                                </button>
                            );
                        })}
                    </div>
                </div>

                {/* Progress Overview */}
                <div className="bg-white rounded-lg shadow p-6 mt-4">
                    <h3 className="font-semibold mb-4">Progreso del Curso</h3>

                    <div className="space-y-3">
                        <div className="flex justify-between text-sm">
                            <span>Módulos completados</span>
                            <span className="font-medium">
                                {userProgress?.completedModules || 0} / {modules?.length || 0}
                            </span>
                        </div>

                        <Progress
                            value={((userProgress?.completedModules || 0) / (modules?.length || 1)) * 100}
                            className="h-2"
                        />

                        <div className="flex justify-between text-sm">
                            <span>Tiempo total</span>
                            <span className="font-medium">
                                {Math.floor((userProgress?.totalTimeSpent || 0) / 60)} minutos
                            </span>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    );
}

// ===== components\dashboard.tsx =====

'use client';

import { useSafeQuery } from "@/hooks/useSafeQuery";
import Sidebar from "@/components/sidebar";
import StatsCards from "@/components/stats-cards";
import MultimediaViewer from "@/components/multimedia-viewer";
import UserTable from "@/components/user-table";
import CertificateGenerator from "@/components/certificate-generator";
import { Bell, Search } from "lucide-react";
import { Input } from "@/components/ui/input";
import { Button } from "@/components/ui/button";
import { DashboardStats } from "@/types";

export default function Dashboard() {
    // Usa useSafeQuery para asegurar la serialización
    const { data: stats, isLoading: statsLoading } = useSafeQuery<DashboardStats>({
        queryKey: ['/api/dashboard/stats'],
    });

    return (
        <div className="flex h-screen overflow-hidden bg-gray-50">
            <Sidebar />

            <div className="flex-1 flex flex-col overflow-hidden">
                <header className="bg-white shadow-sm border-b border-gray-200 px-6 py-4">
                    <div className="flex items-center justify-between">
                        <div>
                            <h2 className="text-2xl font-bold text-gray-900">Dashboard de Capacitación</h2>
                            <p className="text-gray-600">Gestiona cursos, evaluaciones y certificados</p>
                        </div>
                        <div className="flex items-center space-x-4">
                            <div className="relative">
                                <Input
                                    type="text"
                                    placeholder="Buscar..."
                                    className="w-64 pl-10 py-2"
                                />
                                <Search className="absolute left-3 top-3 text-gray-400" size={16} />
                            </div>
                            <Button variant="ghost" size="icon" className="relative">
                                <Bell size={20} />
                                <span className="absolute -top-1 -right-1 bg-red-500 text-white text-xs rounded-full w-5 h-5 flex items-center justify-center">
                                    3
                                </span>
                            </Button>
                        </div>
                    </div>
                </header>

                <main className="flex-1 overflow-auto p-6 space-y-6">
                    <StatsCards stats={stats} loading={statsLoading} />
                    {/* ... resto del contenido ... */}
                </main>
            </div>
        </div>
    );
}

// ===== components\ErrorBoundary.tsx =====

'use client';

import { Component, ReactNode } from 'react';
import { AlertCircle, RefreshCw, Home } from 'lucide-react';
import { Button } from '@/components/ui/button';
import { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle } from '@/components/ui/card';
import { Alert, AlertDescription, AlertTitle } from '@/components/ui/alert';

interface Props {
    children: ReactNode;
    fallback?: ReactNode;
}

interface State {
    hasError: boolean;
    error?: Error;
    errorInfo?: React.ErrorInfo;
}

class ErrorBoundary extends Component<Props, State> {
    public state: State = {
        hasError: false
    };

    public static getDerivedStateFromError(error: Error): State {
        return { hasError: true, error };
    }

    public componentDidCatch(error: Error, errorInfo: React.ErrorInfo) {
        this.setState({ error, errorInfo });
        console.error('Error Boundary caught:', error, errorInfo);

        // Puedes enviar el error a un servicio de monitoreo aquí
        // logErrorToService(error, errorInfo);
    }

    private handleReset = () => {
        this.setState({ hasError: false, error: undefined, errorInfo: undefined });
    };

    private handleReload = () => {
        window.location.reload();
    };

    private handleGoHome = () => {
        window.location.href = '/';
    };

    public render() {
        if (this.state.hasError) {
            // Si se proporciona un fallback personalizado, usarlo
            if (this.props.fallback) {
                return this.props.fallback;
            }

            return (
                <div className="min-h-screen flex items-center justify-center bg-gray-50 p-4">
                    <Card className="w-full max-w-md">
                        <CardHeader className="text-center">
                            <div className="flex justify-center mb-4">
                                <AlertCircle className="h-12 w-12 text-red-500" />
                            </div>
                            <CardTitle className="text-2xl font-bold text-red-600">
                                Error Inesperado
                            </CardTitle>
                            <CardDescription>
                                Ocurrió un problema inesperado en la aplicación
                            </CardDescription>
                        </CardHeader>

                        <CardContent className="space-y-4">
                            <Alert variant="destructive">
                                <AlertTitle>Error</AlertTitle>
                                <AlertDescription className="break-words">
                                    {this.state.error?.message || 'Error desconocido'}
                                </AlertDescription>
                            </Alert>

                            {this.state.errorInfo && (
                                <div className="text-sm text-gray-600">
                                    <p className="font-medium">Detalles técnicos:</p>
                                    <pre className="mt-2 p-3 bg-gray-100 rounded-md text-xs overflow-auto max-h-32">
                                        {this.state.errorInfo.componentStack}
                                    </pre>
                                </div>
                            )}
                        </CardContent>

                        <CardFooter className="flex flex-col space-y-3">
                            <div className="flex space-x-3 w-full">
                                <Button
                                    onClick={this.handleReset}
                                    variant="outline"
                                    className="flex-1"
                                    disabled={!this.state.error}
                                >
                                    <RefreshCw className="mr-2 h-4 w-4" />
                                    Reintentar
                                </Button>

                                <Button
                                    onClick={this.handleReload}
                                    className="flex-1 bg-blue-600 hover:bg-blue-700"
                                >
                                    <RefreshCw className="mr-2 h-4 w-4" />
                                    Recargar Página
                                </Button>
                            </div>

                            <Button
                                onClick={this.handleGoHome}
                                variant="ghost"
                                className="w-full"
                            >
                                <Home className="mr-2 h-4 w-4" />
                                Volver al Inicio
                            </Button>
                        </CardFooter>
                    </Card>
                </div>
            );
        }

        return this.props.children;
    }
}

export default ErrorBoundary;

// ===== components\evaluation-player.tsx =====

'use client';

import { useState, useEffect, useCallback } from 'react';
import { useSafeQuery } from '@/hooks/useSafeQuery';
import { Button } from '@/components/ui/button';
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';
import { RadioGroup, RadioGroupItem } from '@/components/ui/radio-group';
import { Label } from '@/components/ui/label';
import { Checkbox } from '@/components/ui/checkbox';
import { Progress } from '@/components/ui/progress';
import { useToast } from '@/hooks/use-toast';
import {
    Clock,
    AlertTriangle,
    CheckCircle,
    XCircle,
    Play,
    Shield
} from 'lucide-react';

interface EvaluationPlayerProps {
    evaluationId: string;
    userId: string;
}

export default function EvaluationPlayer({ evaluationId, userId }: EvaluationPlayerProps) {
    const [currentAttempt, setCurrentAttempt] = useState<any>(null);
    const [questions, setQuestions] = useState<any[]>([]);
    const [userAnswers, setUserAnswers] = useState<Record<string, string[]>>({});
    const [timeLeft, setTimeLeft] = useState<number>(0);
    const [isSubmitting, setIsSubmitting] = useState(false);
    const [startTime, setStartTime] = useState<number>(0);
    const [protectionActive, setProtectionActive] = useState(false);
    const { toast } = useToast();

    const { data: evaluation } = useSafeQuery({
        queryKey: ['/api/evaluations', evaluationId],
    });

    // Iniciar evaluación
    const startEvaluation = async () => {
        try {
            const response = await fetch(`/api/evaluations/${evaluationId}/start`, {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ userId }),
            });

            if (!response.ok) throw new Error('Failed to start evaluation');

            const attempt = await response.json();
            setCurrentAttempt(attempt);
            setStartTime(Date.now());

            // Cargar preguntas
            const questionsResponse = await fetch(
                `/api/evaluations/${evaluationId}/questions?userId=${userId}&attemptId=${attempt.id}`
            );
            const questionsData = await questionsResponse.json();
            setQuestions(questionsData);

            // Iniciar temporizador si hay tiempo límite
            if (evaluation?.time_limit) {
                setTimeLeft(evaluation.time_limit * 60);
            }

            // Activar protección anti-copia
            setProtectionActive(true);
        } catch (error) {
            toast({
                title: "Error",
                description: "No se pudo iniciar la evaluación",
                variant: "destructive",
            });
        }
    };

    // Protección anti-copia
    useEffect(() => {
        if (!protectionActive) return;

        const handleCopy = (e: ClipboardEvent) => {
            e.preventDefault();
            toast({
                title: "Protección activada",
                description: "No se permite copiar contenido durante la evaluación",
                variant: "destructive",
            });
        };

        const handleContextMenu = (e: MouseEvent) => {
            e.preventDefault();
        };

        const handleKeyDown = (e: KeyboardEvent) => {
            if (e.ctrlKey && (e.key === 'c' || e.key === 'C')) {
                e.preventDefault();
                toast({
                    title: "Protección activada",
                    description: "No se permite copiar durante la evaluación",
                    variant: "destructive",
                });
            }
        };

        document.addEventListener('copy', handleCopy);
        document.addEventListener('contextmenu', handleContextMenu);
        document.addEventListener('keydown', handleKeyDown);

        return () => {
            document.removeEventListener('copy', handleCopy);
            document.removeEventListener('contextmenu', handleContextMenu);
            document.removeEventListener('keydown', handleKeyDown);
        };
    }, [protectionActive, toast]);

    // Temporizador
    useEffect(() => {
        if (timeLeft <= 0 || !protectionActive) return;

        const timer = setInterval(() => {
            setTimeLeft(prev => {
                if (prev <= 1) {
                    handleAutoSubmit();
                    return 0;
                }
                return prev - 1;
            });
        }, 1000);

        return () => clearInterval(timer);
    }, [timeLeft, protectionActive]);

    const handleAnswerChange = (questionId: string, optionId: string, isMultiple: boolean) => {
        setUserAnswers(prev => {
            const currentAnswers = prev[questionId] || [];

            if (isMultiple) {
                return {
                    ...prev,
                    [questionId]: currentAnswers.includes(optionId)
                        ? currentAnswers.filter(id => id !== optionId)
                        : [...currentAnswers, optionId]
                };
            } else {
                return {
                    ...prev,
                    [questionId]: [optionId]
                };
            }
        });
    };

    const handleAutoSubmit = async () => {
        if (isSubmitting) return;
        setIsSubmitting(true);

        const timeSpent = Math.floor((Date.now() - startTime) / 1000);
        await submitEvaluation(timeSpent);
    };

    const submitEvaluation = async (timeSpent: number) => {
        try {
            const answers = Object.entries(userAnswers).map(([questionId, selectedOptions]) => ({
                questionId,
                selectedOptions
            }));

            const response = await fetch(`/api/evaluations/${evaluationId}/submit`, {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({
                    userId,
                    attemptId: currentAttempt.id,
                    answers,
                    timeSpent
                }),
            });

            const result = await response.json();

            toast({
                title: result.passed ? "¡Aprobado!" : "Reprobado",
                description: `Puntuación: ${result.score}% (${result.correctAnswers}/${result.totalQuestions} correctas)`,
                variant: result.passed ? "default" : "destructive",
            });

            setProtectionActive(false);
        } catch (error) {
            toast({
                title: "Error",
                description: "Error al enviar la evaluación",
                variant: "destructive",
            });
        } finally {
            setIsSubmitting(false);
        }
    };

    const formatTime = (seconds: number) => {
        const mins = Math.floor(seconds / 60);
        const secs = seconds % 60;
        return `${mins}:${secs.toString().padStart(2, '0')}`;
    };

    if (!currentAttempt) {
        return (
            <div className="text-center py-12">
                <Shield className="mx-auto h-16 w-16 text-blue-600 mb-4" />
                <h2 className="text-2xl font-bold mb-4">Evaluación: {evaluation?.title}</h2>
                <p className="text-gray-600 mb-6">{evaluation?.description}</p>

                <div className="grid grid-cols-1 md:grid-cols-3 gap-4 mb-6">
                    <Card>
                        <CardContent className="p-4">
                            <Clock className="h-8 w-8 text-blue-600 mb-2" />
                            <p className="font-semibold">Tiempo límite</p>
                            <p>{evaluation?.time_limit || 'Sin límite'} minutos</p>
                        </CardContent>
                    </Card>

                    <Card>
                        <CardContent className="p-4">
                            <CheckCircle className="h-8 w-8 text-green-600 mb-2" />
                            <p className="font-semibold">Puntuación mínima</p>
                            <p>{evaluation?.passing_score}%</p>
                        </CardContent>
                    </Card>

                    <Card>
                        <CardContent className="p-4">
                            <AlertTriangle className="h-8 w-8 text-yellow-600 mb-2" />
                            <p className="font-semibold">Intentos</p>
                            <p>{currentAttempt?.attempt_number || 1} de {evaluation?.max_attempts}</p>
                        </CardContent>
                    </Card>
                </div>

                <Button onClick={startEvaluation} size="lg">
                    <Play className="mr-2" size={20} />
                    Iniciar Evaluación
                </Button>
            </div>
        );
    }

    return (
        <div className="space-y-6">
            {/* Header con temporizador */}
            <Card className="bg-blue-50 border-blue-200">
                <CardContent className="p-4">
                    <div className="flex items-center justify-between">
                        <div>
                            <h2 className="text-xl font-bold">{evaluation?.title}</h2>
                            <p className="text-blue-700">En progreso - Protección anti-copia activada</p>
                        </div>

                        {timeLeft > 0 && (
                            <div className="text-center">
                                <div className="text-2xl font-bold text-red-600">
                                    {formatTime(timeLeft)}
                                </div>
                                <p className="text-sm text-red-600">Tiempo restante</p>
                            </div>
                        )}
                    </div>
                </CardContent>
            </Card>

            {/* Barra de progreso */}
            <div className="flex items-center space-x-4">
                <Progress
                    value={(Object.keys(userAnswers).length / questions.length) * 100}
                    className="flex-1"
                />
                <span className="text-sm text-gray-600">
                    {Object.keys(userAnswers).length} / {questions.length}
                </span>
            </div>

            {/* Preguntas */}
            <div className="space-y-6">
                {questions.map((question, index) => (
                    <Card key={question.id} className="relative">
                        <div className="absolute top-4 right-4 bg-blue-100 text-blue-800 px-2 py-1 rounded text-sm">
                            Pregunta {index + 1} - {question.points} punto(s)
                        </div>

                        <CardHeader>
                            <CardTitle className="text-lg">{question.question_text}</CardTitle>
                        </CardHeader>

                        <CardContent>
                            {question.question_type === 'multiple-choice' ? (
                                <RadioGroup
                                    value={userAnswers[question.id]?.[0] || ''}
                                    onValueChange={(value) => handleAnswerChange(question.id, value, false)}
                                >
                                    {question.options.map((option: any) => (
                                        <div key={option.id} className="flex items-center space-x-2 p-3 border rounded-lg hover:bg-gray-50">
                                            <RadioGroupItem value={option.id} id={option.id} />
                                            <Label htmlFor={option.id} className="flex-1 cursor-pointer">
                                                {option.option_text}
                                            </Label>
                                        </div>
                                    ))}
                                </RadioGroup>
                            ) : (
                                <div className="space-y-2">
                                    {question.options.map((option: any) => (
                                        <div key={option.id} className="flex items-center space-x-2 p-3 border rounded-lg hover:bg-gray-50">
                                            <Checkbox
                                                checked={userAnswers[question.id]?.includes(option.id) || false}
                                                onCheckedChange={(checked) =>
                                                    handleAnswerChange(question.id, option.id, true)
                                                }
                                            />
                                            <Label className="flex-1 cursor-pointer">
                                                {option.option_text}
                                            </Label>
                                        </div>
                                    ))}
                                </div>
                            )}
                        </CardContent>
                    </Card>
                ))}
            </div>

            {/* Botón de enviar */}
            <div className="fixed bottom-6 right-6">
                <Button
                    onClick={() => submitEvaluation(Math.floor((Date.now() - startTime) / 1000))}
                    disabled={isSubmitting || Object.keys(userAnswers).length !== questions.length}
                    size="lg"
                >
                    {isSubmitting ? "Enviando..." : "Finalizar Evaluación"}
                </Button>
            </div>
        </div>
    );
}

// ===== components\media-thumbnail.tsx =====

// components/media-thumbnail.tsx
'use client';

import { Play, Image, File, Video } from "lucide-react";

interface MediaThumbnailProps {
    media: any;
    onClick?: () => void;
    className?: string;
}

export function MediaThumbnail({ media, onClick, className = '' }: MediaThumbnailProps) {
    const getIcon = () => {
        if (media.file_type.startsWith('video')) return <Video className="h-8 w-8" />;
        if (media.file_type.startsWith('image')) return <Image className="h-8 w-8" />;
        return <File className="h-8 w-8" />;
    };

    return (
        <div
            className={`relative group cursor-pointer overflow-hidden rounded-lg bg-gray-100 ${className}`}
            onClick={onClick}
        >
            {media.file_type.startsWith('image') ? (
                <img
                    src={`/uploads/${media.filename}`}
                    alt={media.title}
                    className="w-full h-full object-cover group-hover:scale-105 transition-transform"
                />
            ) : (
                <div className="w-full h-full flex items-center justify-center bg-gray-200">
                    {getIcon()}
                </div>
            )}

            {media.file_type.startsWith('video') && (
                <div className="absolute inset-0 flex items-center justify-center">
                    <div className="bg-black bg-opacity-50 rounded-full p-2">
                        <Play className="h-6 w-6 text-white" />
                    </div>
                </div>
            )}

            <div className="absolute bottom-0 left-0 right-0 bg-gradient-to-t from-black/80 to-transparent p-3 opacity-0 group-hover:opacity-100 transition-opacity">
                <p className="text-white text-sm font-medium truncate">{media.title}</p>
                <p className="text-white text-xs opacity-75">{media.file_type.split('/')[1]}</p>
            </div>
        </div>
    );
}

// ===== components\media-upload.tsx =====

'use client';

import { useState, useRef } from 'react';
import { useForm } from 'react-hook-form';
import { zodResolver } from '@hookform/resolvers/zod';
import { z } from 'zod';
import { useToast } from '@/hooks/use-toast';
import { Button } from '@/components/ui/button';
import { Input } from '@/components/ui/input';
import { Label } from '@/components/ui/label';
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';
import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';
import { Progress } from '@/components/ui/progress';
import { Upload, File, Image, Video, X, CheckCircle } from 'lucide-react';

const uploadSchema = z.object({
    title: z.string().min(1, 'El título es requerido'),
    description: z.string().optional(),
    courseId: z.string().optional(),
    moduleId: z.string().optional(),
});

type UploadForm = z.infer<typeof uploadSchema>;

interface MediaUploadProps {
    courses: any[];
    modules: any[];
    onUploadSuccess?: () => void;
}

export default function MediaUpload({ courses, modules, onUploadSuccess }: MediaUploadProps) {
    const [selectedFile, setSelectedFile] = useState<File | null>(null);
    const [isUploading, setIsUploading] = useState(false);
    const [uploadProgress, setUploadProgress] = useState(0);
    const fileInputRef = useRef<HTMLInputElement>(null);
    const { toast } = useToast();

    const { register, handleSubmit, formState: { errors }, watch, setValue } = useForm<UploadForm>({
        resolver: zodResolver(uploadSchema),
        defaultValues: {
            title: '',
            description: '',
            courseId: '',
            moduleId: '',
        }
    });

    const selectedCourseId = watch('courseId');

    const handleFileSelect = (event: React.ChangeEvent<HTMLInputElement>) => {
        const file = event.target.files?.[0];
        if (file) {
            setSelectedFile(file);
            setValue('title', file.name);
        }
    };

    const onSubmit = async (data: UploadForm) => {
        if (!selectedFile) {
            toast({
                title: "Error",
                description: "Por favor selecciona un archivo",
                variant: "destructive",
            });
            return;
        }

        setIsUploading(true);
        setUploadProgress(0);

        const formData = new FormData();
        formData.append('file', selectedFile);
        formData.append('title', data.title);
        formData.append('description', data.description || '');
        if (data.courseId) formData.append('courseId', data.courseId);
        if (data.moduleId) formData.append('moduleId', data.moduleId);

        try {
            const response = await fetch('/api/media/upload', {
                method: 'POST',
                body: formData,
            });

            if (response.ok) {
                const result = await response.json();
                toast({
                    title: "¡Éxito!",
                    description: "Archivo subido correctamente",
                });

                setSelectedFile(null);
                setUploadProgress(0);
                if (fileInputRef.current) fileInputRef.current.value = '';

                if (onUploadSuccess) onUploadSuccess();
            } else {
                throw new Error('Error en la subida');
            }
        } catch (error) {
            toast({
                title: "Error",
                description: "No se pudo subir el archivo",
                variant: "destructive",
            });
        } finally {
            setIsUploading(false);
        }
    };

    const getFileIcon = () => {
        if (!selectedFile) return <Upload className="h-12 w-12" />;

        if (selectedFile.type.startsWith('image')) return <Image className="h-12 w-12 text-blue-500" />;
        if (selectedFile.type.startsWith('video')) return <Video className="h-12 w-12 text-red-500" />;

        return <File className="h-12 w-12 text-gray-500" />;
    };

    const getFileTypeText = () => {
        if (!selectedFile) return 'Selecciona un archivo';

        if (selectedFile.type.startsWith('image')) return 'Imagen';
        if (selectedFile.type.startsWith('video')) return 'Video';

        return 'Documento';
    };

    return (
        <Card>
            <CardHeader>
                <CardTitle>Subir Archivo Multimedia</CardTitle>
                <CardDescription>
                    Sube imágenes y videos para tus cursos
                </CardDescription>
            </CardHeader>
            <CardContent>
                <form onSubmit={handleSubmit(onSubmit)} className="space-y-4">
                    {/* Selector de archivo */}
                    <div className="space-y-2">
                        <Label htmlFor="file">Archivo</Label>
                        <div className="border-2 border-dashed border-gray-300 rounded-lg p-6 text-center">
                            <div className="flex flex-col items-center justify-center space-y-3">
                                {getFileIcon()}
                                <div>
                                    <p className="font-medium">{getFileTypeText()}</p>
                                    {selectedFile && (
                                        <p className="text-sm text-gray-500">
                                            {selectedFile.name} • {(selectedFile.size / 1024 / 1024).toFixed(2)} MB
                                        </p>
                                    )}
                                </div>
                                <Input
                                    id="file"
                                    type="file"
                                    ref={fileInputRef}
                                    onChange={handleFileSelect}
                                    accept="image/*,video/*"
                                    className="hidden"
                                />
                                <Label htmlFor="file">
                                    <Button variant="outline" asChild>
                                        <span>
                                            <Upload className="mr-2 h-4 w-4" />
                                            Seleccionar archivo
                                        </span>
                                    </Button>
                                </Label>
                            </div>
                        </div>
                    </div>

                    {/* Información del archivo */}
                    {selectedFile && (
                        <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                            <div className="space-y-2">
                                <Label htmlFor="title">Título</Label>
                                <Input
                                    id="title"
                                    {...register('title')}
                                    placeholder="Título del archivo"
                                />
                                {errors.title && (
                                    <p className="text-sm text-red-500">{errors.title.message}</p>
                                )}
                            </div>

                            <div className="space-y-2">
                                <Label htmlFor="description">Descripción (opcional)</Label>
                                <Input
                                    id="description"
                                    {...register('description')}
                                    placeholder="Descripción del archivo"
                                />
                            </div>

                            <div className="space-y-2">
                                <Label htmlFor="courseId">Curso (opcional)</Label>
                                <Select onValueChange={(value) => setValue('courseId', value)}>
                                    <SelectTrigger>
                                        <SelectValue placeholder="Seleccionar curso" />
                                    </SelectTrigger>
                                    <SelectContent>
                                        {courses.map((course) => (
                                            <SelectItem key={course.id} value={course.id}>
                                                {course.title}
                                            </SelectItem>
                                        ))}
                                    </SelectContent>
                                </Select>
                            </div>

                            <div className="space-y-2">
                                <Label htmlFor="moduleId">Módulo (opcional)</Label>
                                <Select
                                    onValueChange={(value) => setValue('moduleId', value)}
                                    disabled={!selectedCourseId}
                                >
                                    <SelectTrigger>
                                        <SelectValue placeholder="Seleccionar módulo" />
                                    </SelectTrigger>
                                    <SelectContent>
                                        {modules
                                            .filter((module) => module.course_id === selectedCourseId)
                                            .map((module) => (
                                                <SelectItem key={module.id} value={module.id}>
                                                    {module.title}
                                                </SelectItem>
                                            ))}
                                    </SelectContent>
                                </Select>
                            </div>
                        </div>
                    )}

                    {/* Progress bar */}
                    {isUploading && (
                        <div className="space-y-2">
                            <Progress value={uploadProgress} />
                            <p className="text-sm text-gray-500">Subiendo archivo... {uploadProgress}%</p>
                        </div>
                    )}

                    {/* Botones de acción */}
                    {selectedFile && (
                        <div className="flex space-x-3">
                            <Button
                                type="submit"
                                disabled={isUploading}
                                className="flex-1"
                            >
                                {isUploading ? (
                                    <>Subiendo...</>
                                ) : (
                                    <>
                                        <Upload className="mr-2 h-4 w-4" />
                                        Subir Archivo
                                    </>
                                )}
                            </Button>

                            <Button
                                type="button"
                                variant="outline"
                                onClick={() => {
                                    setSelectedFile(null);
                                    if (fileInputRef.current) fileInputRef.current.value = '';
                                }}
                                disabled={isUploading}
                            >
                                <X className="mr-2 h-4 w-4" />
                                Cancelar
                            </Button>
                        </div>
                    )}
                </form>
            </CardContent>
        </Card>
    );
}

// ===== components\media-uploader.tsx =====

'use client';

import { useCallback, useState } from 'react';
import { useDropzone } from 'react-dropzone';
import { Upload, X, CheckCircle, File, Image, Video } from 'lucide-react';
import { Button } from '@/components/ui/button';
import { Progress } from '@/components/ui/progress';

interface UploadedFile {
    id: string;
    file: File;
    progress: number;
    status: 'uploading' | 'completed' | 'error';
    error?: string;
}

export function MediaUploader() {
    const [uploadedFiles, setUploadedFiles] = useState<UploadedFile[]>([]);
    const [isUploading, setIsUploading] = useState(false);

    const onDrop = useCallback((acceptedFiles: File[]) => {
        const newFiles = acceptedFiles.map(file => ({
            id: Math.random().toString(36).substr(2, 9),
            file,
            progress: 0,
            status: 'uploading' as const,
        }));

        setUploadedFiles(prev => [...prev, ...newFiles]);
        simulateUpload(newFiles.map(f => f.id));
    }, []);

    const simulateUpload = (fileIds: string[]) => {
        setIsUploading(true);

        fileIds.forEach((fileId, index) => {
            const interval = setInterval(() => {
                setUploadedFiles(prev => prev.map(file => {
                    if (file.id === fileId) {
                        const newProgress = file.progress + 10;
                        if (newProgress >= 100) {
                            clearInterval(interval);
                            return { ...file, progress: 100, status: 'completed' };
                        }
                        return { ...file, progress: newProgress };
                    }
                    return file;
                }));
            }, 200 + (index * 100));
        });

        setTimeout(() => setIsUploading(false), 5000);
    };

    const removeFile = (fileId: string) => {
        setUploadedFiles(prev => prev.filter(file => file.id !== fileId));
    };

    const { getRootProps, getInputProps, isDragActive } = useDropzone({
        onDrop,
        accept: {
            'image/*': ['.jpeg', '.jpg', '.png', '.gif', '.webp'],
            'video/*': ['.mp4', '.webm', '.mov', '.avi'],
            'audio/*': ['.mp3', '.wav', '.ogg'],
            'application/pdf': ['.pdf'],
        },
        multiple: true,
    });

    const getFileIcon = (fileType: string) => {
        if (fileType.startsWith('image')) return <Image className="h-5 w-5" />;
        if (fileType.startsWith('video')) return <Video className="h-5 w-5" />;
        return <File className="h-5 w-5" />;
    };

    return (
        <div className="space-y-4">
            <div
                {...getRootProps()}
                className={`border-2 border-dashed rounded-lg p-8 text-center cursor-pointer transition-colors ${isDragActive ? 'border-blue-400 bg-blue-50' : 'border-gray-300 hover:border-gray-400'
                    }`}
            >
                <input {...getInputProps()} />
                <Upload className="mx-auto h-12 w-12 text-gray-400 mb-4" />
                <p className="text-lg font-medium text-gray-900 mb-2">
                    {isDragActive ? 'Suelta los archivos aquí' : 'Arrastra archivos o haz clic para seleccionar'}
                </p>
                <p className="text-sm text-gray-600">
                    PNG, JPG, GIF, MP4, PDF hasta 100MB
                </p>
            </div>

            {uploadedFiles.length > 0 && (
                <div className="space-y-3">
                    <h4 className="font-medium">Archivos a subir</h4>
                    {uploadedFiles.map((file) => (
                        <div key={file.id} className="flex items-center justify-between p-3 border rounded-lg">
                            <div className="flex items-center space-x-3 flex-1">
                                {getFileIcon(file.file.type)}
                                <div className="flex-1 min-w-0">
                                    <p className="text-sm font-medium truncate">{file.file.name}</p>
                                    <p className="text-xs text-gray-600">
                                        {(file.file.size / 1024 / 1024).toFixed(2)} MB
                                    </p>
                                </div>
                            </div>

                            <div className="flex items-center space-x-3">
                                {file.status === 'uploading' && (
                                    <Progress value={file.progress} className="w-20" />
                                )}

                                {file.status === 'completed' && (
                                    <CheckCircle className="h-5 w-5 text-green-500" />
                                )}

                                <Button
                                    variant="ghost"
                                    size="sm"
                                    onClick={() => removeFile(file.id)}
                                    disabled={isUploading}
                                >
                                    <X className="h-4 w-4" />
                                </Button>
                            </div>
                        </div>
                    ))}
                </div>
            )}
        </div>
    );
}

// ===== components\media-viewer.tsx =====

'use client';

import { useState } from 'react';
import { Play, Pause, Volume2, VolumeX, Maximize, Download } from 'lucide-react';
import { Button } from '@/components/ui/button';
import { Card, CardContent } from '@/components/ui/card';

interface MediaViewerProps {
    media: any;
    autoPlay?: boolean;
    controls?: boolean;
    className?: string;
}

export default function MediaViewer({ media, autoPlay = false, controls = true, className = '' }: MediaViewerProps) {
    const [isPlaying, setIsPlaying] = useState(autoPlay);
    const [isMuted, setIsMuted] = useState(false);
    const [currentTime, setCurrentTime] = useState(0);
    const [duration, setDuration] = useState(0);

    if (!media) {
        return (
            <div className={`flex items-center justify-center bg-gray-100 rounded-lg ${className}`}>
                <p className="text-gray-500">No hay contenido multimedia</p>
            </div>
        );
    }

    const isVideo = media.file_type?.startsWith('video');
    const isImage = media.file_type?.startsWith('image');

    const handlePlayPause = () => {
        setIsPlaying(!isPlaying);
    };

    const handleDownload = () => {
        const link = document.createElement('a');
        link.href = media.file_path;
        link.download = media.original_filename || media.filename;
        document.body.appendChild(link);
        link.click();
        document.body.removeChild(link);
    };

    if (isImage) {
        return (
            <Card className={className}>
                <CardContent className="p-0">
                    <div className="relative">
                        <img
                            src={media.file_path}
                            alt={media.title}
                            className="w-full h-auto rounded-lg"
                            onError={(e) => {
                                (e.target as HTMLImageElement).src = '/placeholder-image.jpg';
                            }}
                        />
                        <div className="absolute bottom-0 left-0 right-0 bg-gradient-to-t from-black/80 to-transparent p-4 text-white">
                            <h3 className="font-semibold">{media.title}</h3>
                            {media.description && (
                                <p className="text-sm opacity-90">{media.description}</p>
                            )}
                        </div>
                    </div>
                </CardContent>
            </Card>
        );
    }

    if (isVideo) {
        return (
            <Card className={className}>
                <CardContent className="p-0">
                    <div className="relative group">
                        <video
                            src={media.file_path}
                            className="w-full h-auto rounded-lg"
                            controls={controls}
                            autoPlay={autoPlay}
                            onPlay={() => setIsPlaying(true)}
                            onPause={() => setIsPlaying(false)}
                            onTimeUpdate={(e) => setCurrentTime(e.currentTarget.currentTime)}
                            onLoadedMetadata={(e) => setDuration(e.currentTarget.duration)}
                        />

                        {!controls && (
                            <div className="absolute inset-0 bg-black bg-opacity-0 group-hover:bg-opacity-30 transition-all duration-300 flex items-center justify-center">
                                <Button
                                    variant="ghost"
                                    size="icon"
                                    className="bg-white bg-opacity-20 hover:bg-opacity-30 text-white"
                                    onClick={handlePlayPause}
                                >
                                    {isPlaying ? (
                                        <Pause className="h-8 w-8" />
                                    ) : (
                                        <Play className="h-8 w-8" />
                                    )}
                                </Button>
                            </div>
                        )}

                        <div className="absolute bottom-0 left-0 right-0 bg-gradient-to-t from-black/80 to-transparent p-4 text-white opacity-0 group-hover:opacity-100 transition-opacity">
                            <h3 className="font-semibold">{media.title}</h3>
                            {media.description && (
                                <p className="text-sm opacity-90">{media.description}</p>
                            )}
                        </div>
                    </div>
                </CardContent>
            </Card>
        );
    }

    return (
        <Card className={className}>
            <CardContent className="p-6">
                <div className="text-center">
                    <p className="text-gray-500">Tipo de archivo no compatible para vista previa</p>
                    <Button onClick={handleDownload} className="mt-3">
                        <Download className="mr-2 h-4 w-4" />
                        Descargar Archivo
                    </Button>
                </div>
            </CardContent>
        </Card>
    );
}

// ===== components\multimedia-viewer.tsx =====

'use client';

import { useState, useEffect, useRef } from "react";
import { Button } from "@/components/ui/button";
import { Progress } from "@/components/ui/progress";
import { Card, CardContent } from "@/components/ui/card";
import { Badge } from "@/components/ui/badge";
import {
    Play,
    Pause,
    SkipBack,
    SkipForward,
    Maximize,
    Volume2,
    VolumeX,
    ChevronLeft,
    ChevronRight,
    ExternalLink,
    FileText,
    CheckCircle2
} from "lucide-react";
import { cn } from "@/lib/utils";
import { CourseModule } from "@/types";

interface MultimediaViewerProps {
    modules: CourseModule[];
    currentModuleIndex: number;
    onModuleChange: (index: number) => void;
    courseId: string;
}

export default function MultimediaViewer({
    modules,
    currentModuleIndex,
    onModuleChange,
    courseId
}: MultimediaViewerProps) {
    const [isPlaying, setIsPlaying] = useState(false);
    const [currentTime, setCurrentTime] = useState(0);
    const [duration, setDuration] = useState(0);
    const [isMuted, setIsMuted] = useState(false);
    const [isFullscreen, setIsFullscreen] = useState(false);
    const videoRef = useRef<HTMLVideoElement>(null);
    const containerRef = useRef<HTMLDivElement>(null);

    const currentModule = modules[currentModuleIndex];
    const isImage = currentModule?.contentType === 'image';
    const isVideo = currentModule?.contentType === 'video' || currentModule?.contentType === 'mp4';
    const hasExternalQuiz = currentModule?.externalQuizUrl && currentModule?.quizTitle;

    const togglePlayPause = () => {
        if (videoRef.current) {
            if (isPlaying) {
                videoRef.current.pause();
            } else {
                videoRef.current.play();
            }
            setIsPlaying(!isPlaying);
        }
    };

    const handleTimeUpdate = () => {
        if (videoRef.current) {
            setCurrentTime(videoRef.current.currentTime);
        }
    };

    const handleLoadedMetadata = () => {
        if (videoRef.current) {
            setDuration(videoRef.current.duration);
        }
    };

    const seek = (time: number) => {
        if (videoRef.current) {
            videoRef.current.currentTime = time;
            setCurrentTime(time);
        }
    };

    const toggleMute = () => {
        if (videoRef.current) {
            videoRef.current.muted = !isMuted;
            setIsMuted(!isMuted);
        }
    };

    const toggleFullscreen = () => {
        if (!document.fullscreenElement && containerRef.current) {
            containerRef.current.requestFullscreen();
            setIsFullscreen(true);
        } else if (document.exitFullscreen) {
            document.exitFullscreen();
            setIsFullscreen(false);
        }
    };

    const formatTime = (seconds: number) => {
        const mins = Math.floor(seconds / 60);
        const secs = Math.floor(seconds % 60);
        return `${mins}:${secs.toString().padStart(2, '0')}`;
    };

    const nextModule = () => {
        if (currentModuleIndex < modules.length - 1) {
            onModuleChange(currentModuleIndex + 1);
        }
    };

    const prevModule = () => {
        if (currentModuleIndex > 0) {
            onModuleChange(currentModuleIndex - 1);
        }
    };

    useEffect(() => {
        const handleKeyPress = (e: KeyboardEvent) => {
            switch (e.key) {
                case 'ArrowLeft':
                    prevModule();
                    break;
                case 'ArrowRight':
                    nextModule();
                    break;
                case ' ':
                    e.preventDefault();
                    if (isVideo) togglePlayPause();
                    break;
                case 'Escape':
                    if (isFullscreen) toggleFullscreen();
                    break;
            }
        };

        window.addEventListener('keydown', handleKeyPress);
        return () => window.removeEventListener('keydown', handleKeyPress);
    }, [currentModuleIndex, modules.length, isVideo, isPlaying, isFullscreen]);

    if (!currentModule) {
        return (
            <div className="flex items-center justify-center h-96 bg-gray-100 rounded-lg">
                <p className="text-gray-500">No hay módulos disponibles</p>
            </div>
        );
    }

    return (
        <div className="space-y-4">
            <Card>
                <CardContent className="p-6">
                    <div className="flex items-center justify-between mb-4">
                        <Button
                            variant="outline"
                            onClick={prevModule}
                            disabled={currentModuleIndex === 0}
                            className="flex items-center space-x-2"
                        >
                            <ChevronLeft size={16} />
                            <span>Anterior</span>
                        </Button>

                        <div className="text-center">
                            <h2 className="text-lg font-semibold">{currentModule.title}</h2>
                            <p className="text-sm text-gray-600">
                                {currentModuleIndex + 1} de {modules.length} módulos
                            </p>
                        </div>

                        <Button
                            variant="outline"
                            onClick={nextModule}
                            disabled={currentModuleIndex === modules.length - 1}
                            className="flex items-center space-x-2"
                        >
                            <span>Siguiente</span>
                            <ChevronRight size={16} />
                        </Button>
                    </div>

                    <div ref={containerRef} className="relative bg-black rounded-lg overflow-hidden mb-4 aspect-video">
                        {isImage ? (
                            <img
                                src={currentModule.contentUrl || "/placeholder-image.jpg"}
                                alt={currentModule.title}
                                className="w-full h-full object-contain"
                                onError={(e) => {
                                    (e.target as HTMLImageElement).src = "/placeholder-image.jpg";
                                }}
                            />
                        ) : isVideo ? (
                            <video
                                ref={videoRef}
                                src={currentModule.contentUrl}
                                className="w-full h-full object-contain"
                                onTimeUpdate={handleTimeUpdate}
                                onLoadedMetadata={handleLoadedMetadata}
                                onEnded={() => setIsPlaying(false)}
                                onClick={togglePlayPause}
                                controls={currentModule.contentType === 'mp4'}
                            />
                        ) : (
                            <div className="flex items-center justify-center h-full text-white">
                                <p className="text-lg">Tipo de contenido no soportado</p>
                            </div>
                        )}
                    </div>

                    {isVideo && currentModule.contentType !== 'mp4' && (
                        <div className="bg-gray-900 text-white p-3 rounded-lg mb-4">
                            <div className="flex items-center justify-between mb-3">
                                <div className="flex items-center space-x-2">
                                    <Button
                                        variant="ghost"
                                        size="icon"
                                        onClick={() => seek(Math.max(0, currentTime - 10))}
                                        className="text-white hover:bg-gray-800 h-8 w-8"
                                    >
                                        <SkipBack size={16} />
                                    </Button>

                                    <Button
                                        variant="ghost"
                                        size="icon"
                                        onClick={togglePlayPause}
                                        className="text-white hover:bg-gray-800 h-10 w-10"
                                    >
                                        {isPlaying ? <Pause size={20} /> : <Play size={20} />}
                                    </Button>

                                    <Button
                                        variant="ghost"
                                        size="icon"
                                        onClick={() => seek(Math.min(duration, currentTime + 10))}
                                        className="text-white hover:bg-gray-800 h-8 w-8"
                                    >
                                        <SkipForward size={16} />
                                    </Button>
                                </div>

                                <div className="flex items-center space-x-2">
                                    <Button
                                        variant="ghost"
                                        size="icon"
                                        onClick={toggleMute}
                                        className="text-white hover:bg-gray-800 h-8 w-8"
                                    >
                                        {isMuted ? <VolumeX size={16} /> : <Volume2 size={16} />}
                                    </Button>

                                    <Button
                                        variant="ghost"
                                        size="icon"
                                        onClick={toggleFullscreen}
                                        className="text-white hover:bg-gray-800 h-8 w-8"
                                    >
                                        <Maximize size={16} />
                                    </Button>
                                </div>
                            </div>

                            <div className="flex items-center space-x-2">
                                <span className="text-xs font-mono">{formatTime(currentTime)}</span>
                                <Progress
                                    value={(currentTime / duration) * 100}
                                    className="flex-1 h-2"
                                />
                                <span className="text-xs font-mono">{formatTime(duration)}</span>
                            </div>
                        </div>
                    )}

                    {hasExternalQuiz && (
                        <Card className="border-blue-200 bg-blue-50 mb-4">
                            <CardContent className="p-4">
                                <div className="flex items-start justify-between">
                                    <div className="flex items-start space-x-3">
                                        <FileText className="text-blue-600 mt-0.5" size={18} />
                                        <div>
                                            <h4 className="font-medium text-blue-900">{currentModule.quizTitle}</h4>
                                            <p className="text-sm text-blue-700 mt-1">
                                                Complete este cuestionario externo para continuar con el curso.
                                            </p>
                                        </div>
                                    </div>
                                    <Badge variant="secondary" className="bg-blue-100 text-blue-800">
                                        <FileText className="mr-1" size={12} />
                                        Cuestionario
                                    </Badge>
                                </div>

                                <div className="flex items-center space-x-2 mt-3">
                                    <Button
                                        onClick={() => window.open(currentModule.externalQuizUrl, '_blank')}
                                        className="bg-blue-600 hover:bg-blue-700 text-xs h-8"
                                    >
                                        <ExternalLink className="mr-1" size={14} />
                                        Abrir Cuestionario
                                    </Button>

                                    <Button
                                        variant="outline"
                                        className="text-xs h-8"
                                    >
                                        <CheckCircle2 className="mr-1" size={14} />
                                        Marcar como Completado
                                    </Button>
                                </div>
                            </CardContent>
                        </Card>
                    )}

                    <div className="bg-white p-4 rounded-lg border border-gray-200">
                        <div className="flex items-start justify-between">
                            <div>
                                <h3 className="text-lg font-semibold mb-2">{currentModule.title}</h3>
                                <p className="text-sm text-gray-600">
                                    Módulo {currentModuleIndex + 1} de {modules.length}
                                </p>
                                {currentModule.duration && (
                                    <p className="text-sm text-gray-500 mt-1">
                                        Duración: {Math.ceil(currentModule.duration / 60)} minutos
                                    </p>
                                )}
                            </div>
                            <Badge variant="outline" className="capitalize">
                                {currentModule.contentType}
                            </Badge>
                        </div>
                    </div>

                    <div className="mt-4">
                        <div className="flex justify-between text-sm text-gray-600 mb-2">
                            <span>Progreso del curso</span>
                            <span>{Math.round(((currentModuleIndex + 1) / modules.length) * 100)}%</span>
                        </div>
                        <Progress value={((currentModuleIndex + 1) / modules.length) * 100} />
                    </div>
                </CardContent>
            </Card>
        </div>
    );
}

// ===== components\Providers.tsx =====

'use client';

import { QueryClientProvider } from "@tanstack/react-query";
import { TooltipProvider } from "@/components/ui/tooltip";
import { Toaster } from "@/components/ui/toaster";
import { queryClient } from "@/lib/queryClient";
import ErrorBoundary from "@/components/ErrorBoundary";

export default function Providers({ children }: { children: React.ReactNode }) {
    return (
        <ErrorBoundary>
            <QueryClientProvider client={queryClient}>
                <TooltipProvider>
                    {children}
                    <Toaster />
                </TooltipProvider>
            </QueryClientProvider>
        </ErrorBoundary>
    );
}

// ===== components\sidebar.tsx =====

'use client';

import { useState } from "react";
import { usePathname } from "next/navigation";
import { Button } from "@/components/ui/button";
import { cn } from "@/lib/utils";
import {
    GraduationCap,
    Home,
    BookOpen,
    ClipboardCheck,
    Award,
    Users,
    BarChart3,
    Settings,
    Menu,
    ChevronDown,
    User,
    FolderOpen,
    FileText,
    Download
} from "lucide-react";
import Link from "next/link";

// Definir los items del menú sin duplicados
const menuItems = [
    { icon: Home, label: "Dashboard", href: "/" },
    { icon: BookOpen, label: "Capacitaciones", href: "/courses" },
    { icon: ClipboardCheck, label: "Evaluaciones", href: "/evaluations" },
    { icon: Award, label: "Certificados", href: "/certificates" },
    { icon: Users, label: "Usuarios", href: "/users" },
    { icon: BarChart3, label: "Reportes", href: "/reports" },
    { icon: FolderOpen, label: "Biblioteca", href: "/media" },
    { icon: Settings, label: "Configuración", href: "/settings" },
];

// Cursos de ejemplo para el submenú
const exampleCourses = [
    { title: "Seguridad Industrial", href: "/courses/seguridad-industrial" },
    { title: "Primeros Auxilios", href: "/courses/primeros-auxilios" },
    { title: "Manejo Defensivo", href: "/courses/manejo-defensivo" },
];

export default function Sidebar() {
    const [isExpanded, setIsExpanded] = useState(true);
    const [isCoursesExpanded, setIsCoursesExpanded] = useState(false);
    const pathname = usePathname();

    const toggleSidebar = () => {
        setIsExpanded(!isExpanded);
        if (!isExpanded) {
            setIsCoursesExpanded(false);
        }
    };

    return (
        <div className={cn(
            "bg-white shadow-lg transition-all duration-300 ease-in-out flex flex-col h-full",
            isExpanded ? "w-64" : "w-16"
        )}>
            <div className="flex items-center justify-between p-4 border-b border-gray-200">
                <div className="flex items-center space-x-2">
                    <div className="w-8 h-8 bg-blue-600 rounded-lg flex items-center justify-center">
                        <GraduationCap className="text-white" size={20} />
                    </div>
                    {isExpanded && (
                        <div>
                            <h1 className="text-lg font-bold text-gray-900">LearningHub</h1>
                            <p className="text-xs text-gray-500">Pro Platform</p>
                        </div>
                    )}
                </div>
                <Button
                    variant="ghost"
                    size="icon"
                    onClick={toggleSidebar}
                    className="h-8 w-8"
                >
                    <Menu className="h-4 w-4" />
                </Button>
            </div>

            <nav className="flex-1 p-2 space-y-1 overflow-y-auto">
                {menuItems.map((item) => {
                    const isActive = pathname === item.href;
                    const Icon = item.icon;

                    // Manejar el caso especial de "Capacitaciones" con submenú
                    if (item.label === "Capacitaciones") {
                        return (
                            <div key={item.href} className="space-y-1">
                                <Button
                                    variant="ghost"
                                    className={cn(
                                        "w-full justify-start h-10",
                                        isActive && "bg-blue-100 text-blue-700"
                                    )}
                                    onClick={() => isExpanded && setIsCoursesExpanded(!isCoursesExpanded)}
                                >
                                    <Icon className="h-4 w-4" />
                                    {isExpanded && (
                                        <>
                                            <span className="ml-2 text-sm">{item.label}</span>
                                            <ChevronDown
                                                className={cn(
                                                    "ml-auto transition-transform",
                                                    isCoursesExpanded && "rotate-180"
                                                )}
                                                size={14}
                                            />
                                        </>
                                    )}
                                </Button>
                                {isExpanded && isCoursesExpanded && (
                                    <div className="ml-6 space-y-1">
                                        {exampleCourses.map((course) => (
                                            <Link key={course.href} href={course.href}>
                                                <Button
                                                    variant="ghost"
                                                    className="w-full justify-start h-8 text-xs"
                                                >
                                                    <BookOpen className="h-3 w-3 mr-1" />
                                                    {course.title}
                                                </Button>
                                            </Link>
                                        ))}
                                    </div>
                                )}
                            </div>
                        );
                    }

                    // Items normales del menú
                    return (
                        <Link key={item.href} href={item.href}>
                            <Button
                                variant="ghost"
                                className={cn(
                                    "w-full justify-start h-10",
                                    isActive && "bg-blue-100 text-blue-700"
                                )}
                            >
                                <Icon className="h-4 w-4" />
                                {isExpanded && <span className="ml-2 text-sm">{item.label}</span>}
                            </Button>
                        </Link>
                    );
                })}
            </nav>

            <div className="p-3 border-t border-gray-200">
                <div className="flex items-center space-x-2">
                    <div className="w-8 h-8 bg-gray-300 rounded-full flex items-center justify-center">
                        <User className="text-gray-600 h-4 w-4" />
                    </div>
                    {isExpanded && (
                        <div className="flex-1 min-w-0">
                            <p className="text-sm font-medium text-gray-900 truncate">Usuario Demo</p>
                            <p className="text-xs text-gray-500 truncate">Administrador</p>
                        </div>
                    )}
                </div>
            </div>
        </div>
    );
}

// ===== components\stats-cards.tsx =====

'use client';

import { Card, CardContent } from "@/components/ui/card";
import { Users, CheckCircle, Award, TrendingUp } from "lucide-react";
import { DashboardStats } from "@/types";

interface StatsCardsProps {
    stats?: DashboardStats;
    loading?: boolean;
}

export default function StatsCards({ stats, loading }: StatsCardsProps) {
    const statsData = [
        {
            title: "Total Usuarios",
            value: stats?.totalUsers || 0,
            change: "+5.2% vs mes anterior",
            icon: Users,
            iconBg: "bg-blue-100",
            iconColor: "text-blue-600",
        },
        {
            title: "Cursos Completados",
            value: stats?.completedCourses || 0,
            change: "+12.3% vs mes anterior",
            icon: CheckCircle,
            iconBg: "bg-green-100",
            iconColor: "text-green-600",
        },
        {
            title: "Certificados Emitidos",
            value: stats?.certificatesIssued || 0,
            change: "+8.7% vs mes anterior",
            icon: Award,
            iconBg: "bg-yellow-100",
            iconColor: "text-yellow-600",
        },
        {
            title: "Tasa de Aprobación",
            value: `${stats?.passRate || 0}%`,
            change: "+2.1% vs mes anterior",
            icon: TrendingUp,
            iconBg: "bg-purple-100",
            iconColor: "text-purple-600",
        },
    ];

    if (loading) {
        return (
            <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6">
                {[1, 2, 3, 4].map((i) => (
                    <Card key={i} className="border border-gray-200">
                        <CardContent className="p-6">
                            <div className="animate-pulse">
                                <div className="flex items-center justify-between mb-4">
                                    <div className="h-4 bg-gray-200 rounded w-20"></div>
                                    <div className="w-10 h-10 bg-gray-200 rounded-full"></div>
                                </div>
                                <div className="h-8 bg-gray-200 rounded w-16 mb-2"></div>
                                <div className="h-4 bg-gray-200 rounded w-24"></div>
                            </div>
                        </CardContent>
                    </Card>
                ))}
            </div>
        );
    }

    return (
        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6">
            {statsData.map((stat, index) => {
                const Icon = stat.icon;
                return (
                    <Card key={index} className="bg-white shadow border border-gray-200">
                        <CardContent className="p-6">
                            <div className="flex items-center justify-between">
                                <div>
                                    <p className="text-sm font-medium text-gray-600">{stat.title}</p>
                                    <p className="text-2xl font-bold text-gray-900">{stat.value}</p>
                                </div>
                                <div className={`p-3 ${stat.iconBg} rounded-full`}>
                                    <Icon className={`${stat.iconColor}`} size={24} />
                                </div>
                            </div>
                            <p className={`text-sm mt-2 text-green-600`}>
                                ↗ {stat.change}
                            </p>
                        </CardContent>
                    </Card>
                );
            })}
        </div>
    );
}

// ===== components\ui\alert-dialog.tsx =====

'use client';

import * as React from "react"
import * as AlertDialogPrimitive from "@radix-ui/react-alert-dialog"

import { cn } from "@/lib/utils"
import { buttonVariants } from "@/components/ui/button"

const AlertDialog = AlertDialogPrimitive.Root

const AlertDialogTrigger = AlertDialogPrimitive.Trigger

const AlertDialogPortal = AlertDialogPrimitive.Portal

const AlertDialogOverlay = React.forwardRef<
    React.ElementRef<typeof AlertDialogPrimitive.Overlay>,
    React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Overlay>
>(({ className, ...props }, ref) => (
    <AlertDialogPrimitive.Overlay
        className={cn(
            "fixed inset-0 z-50 bg-background/80 backdrop-blur-sm data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0",
            className
        )}
        {...props}
        ref={ref}
    />
))
AlertDialogOverlay.displayName = AlertDialogPrimitive.Overlay.displayName

const AlertDialogContent = React.forwardRef<
    React.ElementRef<typeof AlertDialogPrimitive.Content>,
    React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Content>
>(({ className, ...props }, ref) => (
    <AlertDialogPortal>
        <AlertDialogOverlay />
        <AlertDialogPrimitive.Content
            ref={ref}
            className={cn(
                "fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg",
                className
            )}
            {...props}
        />
    </AlertDialogPortal>
))
AlertDialogContent.displayName = AlertDialogPrimitive.Content.displayName

const AlertDialogHeader = ({
    className,
    ...props
}: React.HTMLAttributes<HTMLDivElement>) => (
    <div
        className={cn(
            "flex flex-col space-y-2 text-center sm:text-left",
            className
        )}
        {...props}
    />
)
AlertDialogHeader.displayName = "AlertDialogHeader"

const AlertDialogFooter = ({
    className,
    ...props
}: React.HTMLAttributes<HTMLDivElement>) => (
    <div
        className={cn(
            "flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2",
            className
        )}
        {...props}
    />
)
AlertDialogFooter.displayName = "AlertDialogFooter"

const AlertDialogTitle = React.forwardRef<
    React.ElementRef<typeof AlertDialogPrimitive.Title>,
    React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Title>
>(({ className, ...props }, ref) => (
    <AlertDialogPrimitive.Title
        ref={ref}
        className={cn("text-lg font-semibold", className)}
        {...props}
    />
))
AlertDialogTitle.displayName = AlertDialogPrimitive.Title.displayName

const AlertDialogDescription = React.forwardRef<
    React.ElementRef<typeof AlertDialogPrimitive.Description>,
    React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Description>
>(({ className, ...props }, ref) => (
    <AlertDialogPrimitive.Description
        ref={ref}
        className={cn("text-sm text-muted-foreground", className)}
        {...props}
    />
))
AlertDialogDescription.displayName =
    AlertDialogPrimitive.Description.displayName

const AlertDialogAction = React.forwardRef<
    React.ElementRef<typeof AlertDialogPrimitive.Action>,
    React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Action>
>(({ className, ...props }, ref) => (
    <AlertDialogPrimitive.Action
        ref={ref}
        className={cn(buttonVariants(), className)}
        {...props}
    />
))
AlertDialogAction.displayName = AlertDialogPrimitive.Action.displayName

const AlertDialogCancel = React.forwardRef<
    React.ElementRef<typeof AlertDialogPrimitive.Cancel>,
    React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Cancel>
>(({ className, ...props }, ref) => (
    <AlertDialogPrimitive.Cancel
        ref={ref}
        className={cn(
            buttonVariants({ variant: "outline" }),
            "mt-2 sm:mt-0",
            className
        )}
        {...props}
    />
))
AlertDialogCancel.displayName = AlertDialogPrimitive.Cancel.displayName

export {
    AlertDialog,
    AlertDialogPortal,
    AlertDialogOverlay,
    AlertDialogTrigger,
    AlertDialogContent,
    AlertDialogHeader,
    AlertDialogFooter,
    AlertDialogTitle,
    AlertDialogDescription,
    AlertDialogAction,
    AlertDialogCancel,
}

// ===== components\ui\alert.tsx =====

'use client';

import * as React from "react"
import { cva, type VariantProps } from "class-variance-authority"
import { cn } from "@/lib/utils"

const alertVariants = cva(
    "relative w-full rounded-lg border p-4 [&>svg~*]:pl-7 [&>svg+div]:translate-y-[-3px] [&>svg]:absolute [&>svg]:left-4 [&>svg]:top-4 [&>svg]:text-foreground",
    {
        variants: {
            variant: {
                default: "bg-background text-foreground",
                destructive:
                    "border-destructive/50 text-destructive dark:border-destructive [&>svg]:text-destructive",
            },
        },
        defaultVariants: {
            variant: "default",
        },
    }
)

const Alert = React.forwardRef<
    HTMLDivElement,
    React.HTMLAttributes<HTMLDivElement> & VariantProps<typeof alertVariants>
>(({ className, variant, ...props }, ref) => (
    <div
        ref={ref}
        role="alert"
        className={cn(alertVariants({ variant }), className)}
        {...props}
    />
))
Alert.displayName = "Alert"

const AlertTitle = React.forwardRef<
    HTMLParagraphElement,
    React.HTMLAttributes<HTMLHeadingElement>
>(({ className, ...props }, ref) => (
    <h5
        ref={ref}
        className={cn("mb-1 font-medium leading-none tracking-tight", className)}
        {...props}
    />
))
AlertTitle.displayName = "AlertTitle"

const AlertDescription = React.forwardRef<
    HTMLParagraphElement,
    React.HTMLAttributes<HTMLParagraphElement>
>(({ className, ...props }, ref) => (
    <div
        ref={ref}
        className={cn("text-sm [&_p]:leading-relaxed", className)}
        {...props}
    />
))
AlertDescription.displayName = "AlertDescription"

export { Alert, AlertTitle, AlertDescription }

// ===== components\ui\badge.tsx =====

'use client';

import * as React from "react"
import { cva, type VariantProps } from "class-variance-authority"
import { cn } from "@/lib/utils"

const badgeVariants = cva(
    "inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2",
    {
        variants: {
            variant: {
                default:
                    "border-transparent bg-primary text-primary-foreground hover:bg-primary/80",
                secondary:
                    "border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80",
                destructive:
                    "border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80",
                outline: "text-foreground",
            },
        },
        defaultVariants: {
            variant: "default",
        },
    }
)

export interface BadgeProps
    extends React.HTMLAttributes<HTMLDivElement>,
    VariantProps<typeof badgeVariants> { }

function Badge({ className, variant, ...props }: BadgeProps) {
    return (
        <div className={cn(badgeVariants({ variant }), className)} {...props} />
    )
}

export { Badge, badgeVariants }

// ===== components\ui\button.tsx =====

'use client';

import * as React from "react"
import { Slot } from "@radix-ui/react-slot"
import { cva, type VariantProps } from "class-variance-authority"
import { cn } from "@/lib/utils"

const buttonVariants = cva(
    "inline-flex items-center justify-center whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50",
    {
        variants: {
            variant: {
                default: "bg-primary text-primary-foreground hover:bg-primary/90",
                destructive:
                    "bg-destructive text-destructive-foreground hover:bg-destructive/90",
                outline:
                    "border border-input bg-background hover:bg-accent hover:text-accent-foreground",
                secondary:
                    "bg-secondary text-secondary-foreground hover:bg-secondary/80",
                ghost: "hover:bg-accent hover:text-accent-foreground",
                link: "text-primary underline-offset-4 hover:underline",
            },
            size: {
                default: "h-10 px-4 py-2",
                sm: "h-9 rounded-md px-3",
                lg: "h-11 rounded-md px-8",
                icon: "h-10 w-10",
            },
        },
        defaultVariants: {
            variant: "default",
            size: "default",
        },
    }
)

export interface ButtonProps
    extends React.ButtonHTMLAttributes<HTMLButtonElement>,
    VariantProps<typeof buttonVariants> {
    asChild?: boolean
}

const Button = React.forwardRef<HTMLButtonElement, ButtonProps>(
    ({ className, variant, size, asChild = false, ...props }, ref) => {
        const Comp = asChild ? Slot : "button"
        return (
            <Comp
                className={cn(buttonVariants({ variant, size, className }))}
                ref={ref}
                {...props}
            />
        )
    }
)
Button.displayName = "Button"

export { Button, buttonVariants }

// ===== components\ui\card.tsx =====

'use client';

import * as React from "react"
import { cn } from "@/lib/utils"

const Card = React.forwardRef<
    HTMLDivElement,
    React.HTMLAttributes<HTMLDivElement>
>(({ className, ...props }, ref) => (
    <div
        ref={ref}
        className={cn(
            "rounded-lg border bg-card text-card-foreground shadow-sm",
            className
        )}
        {...props}
    />
))
Card.displayName = "Card"

const CardHeader = React.forwardRef<
    HTMLDivElement,
    React.HTMLAttributes<HTMLDivElement>
>(({ className, ...props }, ref) => (
    <div
        ref={ref}
        className={cn("flex flex-col space-y-1.5 p-6", className)}
        {...props}
    />
))
CardHeader.displayName = "CardHeader"

const CardTitle = React.forwardRef<
    HTMLParagraphElement,
    React.HTMLAttributes<HTMLHeadingElement>
>(({ className, ...props }, ref) => (
    <h3
        ref={ref}
        className={cn(
            "text-2xl font-semibold leading-none tracking-tight",
            className
        )}
        {...props}
    />
))
CardTitle.displayName = "CardTitle"

const CardDescription = React.forwardRef<
    HTMLParagraphElement,
    React.HTMLAttributes<HTMLParagraphElement>
>(({ className, ...props }, ref) => (
    <p
        ref={ref}
        className={cn("text-sm text-muted-foreground", className)}
        {...props}
    />
))
CardDescription.displayName = "CardDescription"

const CardContent = React.forwardRef<
    HTMLDivElement,
    React.HTMLAttributes<HTMLDivElement>
>(({ className, ...props }, ref) => (
    <div ref={ref} className={cn("p-6 pt-0", className)} {...props} />
))
CardContent.displayName = "CardContent"

const CardFooter = React.forwardRef<
    HTMLDivElement,
    React.HTMLAttributes<HTMLDivElement>
>(({ className, ...props }, ref) => (
    <div
        ref={ref}
        className={cn("flex items-center p-6 pt-0", className)}
        {...props}
    />
))
CardFooter.displayName = "CardFooter"

export { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }

// ===== components\ui\checkbox.tsx =====

'use client';

import * as React from "react"
import * as CheckboxPrimitive from "@radix-ui/react-checkbox"
import { Check } from "lucide-react"
import { cn } from "@/lib/utils"

const Checkbox = React.forwardRef<
    React.ElementRef<typeof CheckboxPrimitive.Root>,
    React.ComponentPropsWithoutRef<typeof CheckboxPrimitive.Root>
>(({ className, ...props }, ref) => (
    <CheckboxPrimitive.Root
        ref={ref}
        className={cn(
            "peer h-4 w-4 shrink-0 rounded-sm border border-primary ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=checked]:text-primary-foreground",
            className
        )}
        {...props}
    >
        <CheckboxPrimitive.Indicator
            className={cn("flex items-center justify-center text-current")}
        >
            <Check className="h-4 w-4" />
        </CheckboxPrimitive.Indicator>
    </CheckboxPrimitive.Root>
))
Checkbox.displayName = CheckboxPrimitive.Root.displayName

export { Checkbox }

// ===== components\ui\dropdown-menu.tsx =====

'use client';

import * as React from "react"
import * as DropdownMenuPrimitive from "@radix-ui/react-dropdown-menu"
import { Check, ChevronRight, Circle } from "lucide-react"
import { cn } from "@/lib/utils"

const DropdownMenu = DropdownMenuPrimitive.Root

const DropdownMenuTrigger = DropdownMenuPrimitive.Trigger

const DropdownMenuGroup = DropdownMenuPrimitive.Group

const DropdownMenuPortal = DropdownMenuPrimitive.Portal

const DropdownMenuSub = DropdownMenuPrimitive.Sub

const DropdownMenuRadioGroup = DropdownMenuPrimitive.RadioGroup

const DropdownMenuSubTrigger = React.forwardRef<
    React.ElementRef<typeof DropdownMenuPrimitive.SubTrigger>,
    React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubTrigger> & {
        inset?: boolean
    }
>(({ className, inset, children, ...props }, ref) => (
    <DropdownMenuPrimitive.SubTrigger
        ref={ref}
        className={cn(
            "flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent data-[state=open]:bg-accent",
            inset && "pl-8",
            className
        )}
        {...props}
    >
        {children}
        <ChevronRight className="ml-auto h-4 w-4" />
    </DropdownMenuPrimitive.SubTrigger>
))
DropdownMenuSubTrigger.displayName =
    DropdownMenuPrimitive.SubTrigger.displayName

const DropdownMenuSubContent = React.forwardRef<
    React.ElementRef<typeof DropdownMenuPrimitive.SubContent>,
    React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubContent>
>(({ className, ...props }, ref) => (
    <DropdownMenuPrimitive.SubContent
        ref={ref}
        className={cn(
            "z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2",
            className
        )}
        {...props}
    />
))
DropdownMenuSubContent.displayName =
    DropdownMenuPrimitive.SubContent.displayName

const DropdownMenuContent = React.forwardRef<
    React.ElementRef<typeof DropdownMenuPrimitive.Content>,
    React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Content>
>(({ className, sideOffset = 4, ...props }, ref) => (
    <DropdownMenuPrimitive.Portal>
        <DropdownMenuPrimitive.Content
            ref={ref}
            sideOffset={sideOffset}
            className={cn(
                "z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2",
                className
            )}
            {...props}
        />
    </DropdownMenuPrimitive.Portal>
))
DropdownMenuContent.displayName = DropdownMenuPrimitive.Content.displayName

const DropdownMenuItem = React.forwardRef<
    React.ElementRef<typeof DropdownMenuPrimitive.Item>,
    React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Item> & {
        inset?: boolean
    }
>(({ className, inset, ...props }, ref) => (
    <DropdownMenuPrimitive.Item
        ref={ref}
        className={cn(
            "relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50",
            inset && "pl-8",
            className
        )}
        {...props}
    />
))
DropdownMenuItem.displayName = DropdownMenuPrimitive.Item.displayName

const DropdownMenuCheckboxItem = React.forwardRef<
    React.ElementRef<typeof DropdownMenuPrimitive.CheckboxItem>,
    React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.CheckboxItem>
>(({ className, children, checked, ...props }, ref) => (
    <DropdownMenuPrimitive.CheckboxItem
        ref={ref}
        className={cn(
            "relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50",
            className
        )}
        checked={checked}
        {...props}
    >
        <span className="absolute left-2 flex h-3.5 w-3.5 items-center justify-center">
            <DropdownMenuPrimitive.ItemIndicator>
                <Check className="h-4 w-4" />
            </DropdownMenuPrimitive.ItemIndicator>
        </span>
        {children}
    </DropdownMenuPrimitive.CheckboxItem>
))
DropdownMenuCheckboxItem.displayName =
    DropdownMenuPrimitive.CheckboxItem.displayName

const DropdownMenuRadioItem = React.forwardRef<
    React.ElementRef<typeof DropdownMenuPrimitive.RadioItem>,
    React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.RadioItem>
>(({ className, children, ...props }, ref) => (
    <DropdownMenuPrimitive.RadioItem
        ref={ref}
        className={cn(
            "relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50",
            className
        )}
        {...props}
    >
        <span className="absolute left-2 flex h-3.5 w-3.5 items-center justify-center">
            <DropdownMenuPrimitive.ItemIndicator>
                <Circle className="h-2 w-2 fill-current" />
            </DropdownMenuPrimitive.ItemIndicator>
        </span>
        {children}
    </DropdownMenuPrimitive.RadioItem>
))
DropdownMenuRadioItem.displayName = DropdownMenuPrimitive.RadioItem.displayName

const DropdownMenuLabel = React.forwardRef<
    React.ElementRef<typeof DropdownMenuPrimitive.Label>,
    React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Label> & {
        inset?: boolean
    }
>(({ className, inset, ...props }, ref) => (
    <DropdownMenuPrimitive.Label
        ref={ref}
        className={cn(
            "px-2 py-1.5 text-sm font-semibold",
            inset && "pl-8",
            className
        )}
        {...props}
    />
))
DropdownMenuLabel.displayName = DropdownMenuPrimitive.Label.displayName

const DropdownMenuSeparator = React.forwardRef<
    React.ElementRef<typeof DropdownMenuPrimitive.Separator>,
    React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Separator>
>(({ className, ...props }, ref) => (
    <DropdownMenuPrimitive.Separator
        ref={ref}
        className={cn("-mx-1 my-1 h-px bg-muted", className)}
        {...props}
    />
))
DropdownMenuSeparator.displayName = DropdownMenuPrimitive.Separator.displayName

const DropdownMenuShortcut = ({
    className,
    ...props
}: React.HTMLAttributes<HTMLSpanElement>) => {
    return (
        <span
            className={cn("ml-auto text-xs tracking-widest opacity-60", className)}
            {...props}
        />
    )
}
DropdownMenuShortcut.displayName = "DropdownMenuShortcut"

export {
    DropdownMenu,
    DropdownMenuTrigger,
    DropdownMenuContent,
    DropdownMenuItem,
    DropdownMenuCheckboxItem,
    DropdownMenuRadioItem,
    DropdownMenuLabel,
    DropdownMenuSeparator,
    DropdownMenuShortcut,
    DropdownMenuGroup,
    DropdownMenuPortal,
    DropdownMenuSub,
    DropdownMenuSubContent,
    DropdownMenuSubTrigger,
    DropdownMenuRadioGroup,
}

// ===== components\ui\form.tsx =====

'use client';

import * as React from "react"
import * as LabelPrimitive from "@radix-ui/react-label"
import { Slot } from "@radix-ui/react-slot"
import {
    Controller,
    ControllerProps,
    FieldPath,
    FieldValues,
    FormProvider,
    useFormContext,
} from "react-hook-form"

import { cn } from "@/lib/utils"
import { Label } from "@/components/ui/label"

const Form = FormProvider

type FormFieldContextValue<
    TFieldValues extends FieldValues = FieldValues,
    TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>
> = {
    name: TName
}

const FormFieldContext = React.createContext<FormFieldContextValue>(
    {} as FormFieldContextValue
)

const FormField = <
    TFieldValues extends FieldValues = FieldValues,
    TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>
>({
    ...props
}: ControllerProps<TFieldValues, TName>) => {
    return (
        <FormFieldContext.Provider value={{ name: props.name }}>
            <Controller {...props} />
        </FormFieldContext.Provider>
    )
}

const useFormField = () => {
    const fieldContext = React.useContext(FormFieldContext)
    const itemContext = React.useContext(FormItemContext)
    const { getFieldState, formState } = useFormContext()

    const fieldState = getFieldState(fieldContext.name, formState)

    if (!fieldContext) {
        throw new Error("useFormField should be used within <FormField>")
    }

    const { id } = itemContext

    return {
        id,
        name: fieldContext.name,
        formItemId: `${id}-form-item`,
        formDescriptionId: `${id}-form-description`,
        formMessageId: `${id}-form-message`,
        ...fieldState,
    }
}

type FormItemContextValue = {
    id: string
}

const FormItemContext = React.createContext<FormItemContextValue>(
    {} as FormItemContextValue
)

const FormItem = React.forwardRef<
    HTMLDivElement,
    React.HTMLAttributes<HTMLDivElement>
>(({ className, ...props }, ref) => {
    const id = React.useId()

    return (
        <FormItemContext.Provider value={{ id }}>
            <div ref={ref} className={cn("space-y-2", className)} {...props} />
        </FormItemContext.Provider>
    )
})
FormItem.displayName = "FormItem"

const FormLabel = React.forwardRef<
    React.ElementRef<typeof LabelPrimitive.Root>,
    React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root>
>(({ className, ...props }, ref) => {
    const { error, formItemId } = useFormField()

    return (
        <Label
            ref={ref}
            className={cn(error && "text-destructive", className)}
            htmlFor={formItemId}
            {...props}
        />
    )
})
FormLabel.displayName = "FormLabel"

const FormControl = React.forwardRef<
    React.ElementRef<typeof Slot>,
    React.ComponentPropsWithoutRef<typeof Slot>
>(({ ...props }, ref) => {
    const { error, formItemId, formDescriptionId, formMessageId } = useFormField()

    return (
        <Slot
            ref={ref}
            id={formItemId}
            aria-describedby={
                !error
                    ? `${formDescriptionId}`
                    : `${formDescriptionId} ${formMessageId}`
            }
            aria-invalid={!!error}
            {...props}
        />
    )
})
FormControl.displayName = "FormControl"

const FormDescription = React.forwardRef<
    HTMLParagraphElement,
    React.HTMLAttributes<HTMLParagraphElement>
>(({ className, ...props }, ref) => {
    const { formDescriptionId } = useFormField()

    return (
        <p
            ref={ref}
            id={formDescriptionId}
            className={cn("text-sm text-muted-foreground", className)}
            {...props}
        />
    )
})
FormDescription.displayName = "FormDescription"

const FormMessage = React.forwardRef<
    HTMLParagraphElement,
    React.HTMLAttributes<HTMLParagraphElement>
>(({ className, children, ...props }, ref) => {
    const { error, formMessageId } = useFormField()
    const body = error ? String(error?.message) : children

    if (!body) {
        return null
    }

    return (
        <p
            ref={ref}
            id={formMessageId}
            className={cn("text-sm font-medium text-destructive", className)}
            {...props}
        >
            {body}
        </p>
    )
})
FormMessage.displayName = "FormMessage"

export {
    useFormField,
    Form,
    FormItem,
    FormLabel,
    FormControl,
    FormDescription,
    FormMessage,
    FormField,
}

// ===== components\ui\input.tsx =====

'use client';

import * as React from "react"
import { cn } from "@/lib/utils"

export interface InputProps
    extends React.InputHTMLAttributes<HTMLInputElement> { }

const Input = React.forwardRef<HTMLInputElement, InputProps>(
    ({ className, type, ...props }, ref) => {
        return (
            <input
                type={type}
                className={cn(
                    "flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50",
                    className
                )}
                ref={ref}
                {...props}
            />
        )
    }
)
Input.displayName = "Input"

export { Input }

// ===== components\ui\label.tsx =====

'use client';

import * as React from "react"
import * as LabelPrimitive from "@radix-ui/react-label"
import { cva, type VariantProps } from "class-variance-authority"

import { cn } from "@/lib/utils"

const labelVariants = cva(
    "text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70"
)

const Label = React.forwardRef<
    React.ElementRef<typeof LabelPrimitive.Root>,
    React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &
    VariantProps<typeof labelVariants>
>(({ className, ...props }, ref) => (
    <LabelPrimitive.Root
        ref={ref}
        className={cn(labelVariants(), className)}
        {...props}
    />
))
Label.displayName = LabelPrimitive.Root.displayName

export { Label }

// ===== components\ui\progress.tsx =====

'use client';

import * as React from "react"
import * as ProgressPrimitive from "@radix-ui/react-progress"
import { cn } from "@/lib/utils"

const Progress = React.forwardRef<
    React.ElementRef<typeof ProgressPrimitive.Root>,
    React.ComponentPropsWithoutRef<typeof ProgressPrimitive.Root>
>(({ className, value, ...props }, ref) => (
    <ProgressPrimitive.Root
        ref={ref}
        className={cn(
            "relative h-4 w-full overflow-hidden rounded-full bg-secondary",
            className
        )}
        {...props}
    >
        <ProgressPrimitive.Indicator
            className="h-full w-full flex-1 bg-primary transition-all"
            style={{ transform: `translateX(-${100 - (value || 0)}%)` }}
        />
    </ProgressPrimitive.Root>
))
Progress.displayName = ProgressPrimitive.Root.displayName

export { Progress }

// ===== components\ui\select.tsx =====

'use client';

import * as React from "react"
import * as SelectPrimitive from "@radix-ui/react-select"
import { Check, ChevronDown, ChevronUp } from "lucide-react"
import { cn } from "@/lib/utils"

const Select = SelectPrimitive.Root

const SelectGroup = SelectPrimitive.Group

const SelectValue = SelectPrimitive.Value

const SelectTrigger = React.forwardRef<
    React.ElementRef<typeof SelectPrimitive.Trigger>,
    React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>
>(({ className, children, ...props }, ref) => (
    <SelectPrimitive.Trigger
        ref={ref}
        className={cn(
            "flex h-10 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1",
            className
        )}
        {...props}
    >
        {children}
        <SelectPrimitive.Icon asChild>
            <ChevronDown className="h-4 w-4 opacity-50" />
        </SelectPrimitive.Icon>
    </SelectPrimitive.Trigger>
))
SelectTrigger.displayName = SelectPrimitive.Trigger.displayName

const SelectScrollUpButton = React.forwardRef<
    React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,
    React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>
>(({ className, ...props }, ref) => (
    <SelectPrimitive.ScrollUpButton
        ref={ref}
        className={cn(
            "flex cursor-default items-center justify-center py-1",
            className
        )}
        {...props}
    >
        <ChevronUp className="h-4 w-4" />
    </SelectPrimitive.ScrollUpButton>
))
SelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName

const SelectScrollDownButton = React.forwardRef<
    React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,
    React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>
>(({ className, ...props }, ref) => (
    <SelectPrimitive.ScrollDownButton
        ref={ref}
        className={cn(
            "flex cursor-default items-center justify-center py-1",
            className
        )}
        {...props}
    >
        <ChevronDown className="h-4 w-4" />
    </SelectPrimitive.ScrollDownButton>
))
SelectScrollDownButton.displayName =
    SelectPrimitive.ScrollDownButton.displayName

const SelectContent = React.forwardRef<
    React.ElementRef<typeof SelectPrimitive.Content>,
    React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>
>(({ className, children, position = "popper", ...props }, ref) => (
    <SelectPrimitive.Portal>
        <SelectPrimitive.Content
            ref={ref}
            className={cn(
                "relative z-50 max-h-96 min-w-[8rem] overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2",
                position === "popper" &&
                "data-[side=bottom]:translate-y-1 data-[side=left]:translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:translate-y-1",
                className
            )
            }
            position={position}
            {...props}
        >
            <SelectScrollUpButton />
            <SelectPrimitive.Viewport
                className={cn(
                    "p-1",
                    position === "popper" &&
                    "h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]"
                )}
            >
                {children}
            </SelectPrimitive.Viewport>
            <SelectScrollDownButton />
        </SelectPrimitive.Content>
    </SelectPrimitive.Portal>
))
SelectContent.displayName = SelectPrimitive.Content.displayName

const SelectLabel = React.forwardRef<
    React.ElementRef<typeof SelectPrimitive.Label>,
    React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>
>(({ className, ...props }, ref) => (
    <SelectPrimitive.Label
        ref={ref}
        className={cn("py-1.5 pl-8 pr-2 text-sm font-semibold", className)}
        {...props}
    />
))
SelectLabel.displayName = SelectPrimitive.Label.displayName

const SelectItem = React.forwardRef<
    React.ElementRef<typeof SelectPrimitive.Item>,
    React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>
>(({ className, children, ...props }, ref) => (
    <SelectPrimitive.Item
        ref={ref}
        className={cn(
            "relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50",
            className
        )}
        {...props}
    >
        <span className="absolute left-2 flex h-3.5 w-3.5 items-center justify-center">
            <SelectPrimitive.ItemIndicator>
                <Check className="h-4 w-4" />
            </SelectPrimitive.ItemIndicator>
        </span>

        <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>
    </SelectPrimitive.Item>
))
SelectItem.displayName = SelectPrimitive.Item.displayName

const SelectSeparator = React.forwardRef<
    React.ElementRef<typeof SelectPrimitive.Separator>,
    React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>
>(({ className, ...props }, ref) => (
    <SelectPrimitive.Separator
        ref={ref}
        className={cn("-mx-1 my-1 h-px bg-muted", className)}
        {...props}
    />
))
SelectSeparator.displayName = SelectPrimitive.Separator.displayName

export {
    Select,
    SelectGroup,
    SelectValue,
    SelectTrigger,
    SelectContent,
    SelectLabel,
    SelectItem,
    SelectSeparator,
    SelectScrollUpButton,
    SelectScrollDownButton,
}

// ===== components\ui\switch.tsx =====

'use client';

import * as React from "react"
import * as SwitchPrimitives from "@radix-ui/react-switch"
import { cn } from "@/lib/utils"

const Switch = React.forwardRef<
    React.ElementRef<typeof SwitchPrimitives.Root>,
    React.ComponentPropsWithoutRef<typeof SwitchPrimitives.Root>
>(({ className, ...props }, ref) => (
    <SwitchPrimitives.Root
        className={cn(
            "peer inline-flex h-6 w-11 shrink-0 cursor-pointer items-center rounded-full border-2 border-transparent transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 focus-visible:ring-offset-background disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=unchecked]:bg-input",
            className
        )}
        {...props}
        ref={ref}
    >
        <SwitchPrimitives.Thumb
            className={cn(
                "pointer-events-none block h-5 w-5 rounded-full bg-background shadow-lg ring-0 transition-transform data-[state=checked]:translate-x-5 data-[state=unchecked]:translate-x-0"
            )}
        />
    </SwitchPrimitives.Root>
))
Switch.displayName = SwitchPrimitives.Root.displayName

export { Switch }

// ===== components\ui\table.tsx =====

'use client';

import * as React from "react"
import { cn } from "@/lib/utils"

const Table = React.forwardRef<
    HTMLTableElement,
    React.HTMLAttributes<HTMLTableElement>
>(({ className, ...props }, ref) => (
    <div className="relative w-full overflow-auto">
        <table
            ref={ref}
            className={cn("w-full caption-bottom text-sm", className)}
            {...props}
        />
    </div>
))
Table.displayName = "Table"

const TableHeader = React.forwardRef<
    HTMLTableSectionElement,
    React.HTMLAttributes<HTMLTableSectionElement>
>(({ className, ...props }, ref) => (
    <thead ref={ref} className={cn("[&_tr]:border-b", className)} {...props} />
))
TableHeader.displayName = "TableHeader"

const TableBody = React.forwardRef<
    HTMLTableSectionElement,
    React.HTMLAttributes<HTMLTableSectionElement>
>(({ className, ...props }, ref) => (
    <tbody
        ref={ref}
        className={cn("[&_tr:last-child]:border-0", className)}
        {...props}
    />
))
TableBody.displayName = "TableBody"

const TableFooter = React.forwardRef<
    HTMLTableSectionElement,
    React.HTMLAttributes<HTMLTableSectionElement>
>(({ className, ...props }, ref) => (
    <tfoot
        ref={ref}
        className={cn("bg-primary font-medium text-primary-foreground", className)}
        {...props}
    />
))
TableFooter.displayName = "TableFooter"

const TableRow = React.forwardRef<
    HTMLTableRowElement,
    React.HTMLAttributes<HTMLTableRowElement>
>(({ className, ...props }, ref) => (
    <tr
        ref={ref}
        className={cn(
            "border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted",
            className
        )}
        {...props}
    />
))
TableRow.displayName = "TableRow"

const TableHead = React.forwardRef<
    HTMLTableCellElement,
    React.ThHTMLAttributes<HTMLTableCellElement>
>(({ className, ...props }, ref) => (
    <th
        ref={ref}
        className={cn(
            "h-12 px-4 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0",
            className
        )}
        {...props}
    />
))
TableHead.displayName = "TableHead"

const TableCell = React.forwardRef<
    HTMLTableCellElement,
    React.TdHTMLAttributes<HTMLTableCellElement>
>(({ className, ...props }, ref) => (
    <td
        ref={ref}
        className={cn("p-4 align-middle [&:has([role=checkbox])]:pr-0", className)}
        {...props}
    />
))
TableCell.displayName = "TableCell"

const TableCaption = React.forwardRef<
    HTMLTableCaptionElement,
    React.HTMLAttributes<HTMLTableCaptionElement>
>(({ className, ...props }, ref) => (
    <caption
        ref={ref}
        className={cn("mt-4 text-sm text-muted-foreground", className)}
        {...props}
    />
))
TableCaption.displayName = "TableCaption"

export {
    Table,
    TableHeader,
    TableBody,
    TableFooter,
    TableHead,
    TableRow,
    TableCell,
    TableCaption,
}

// ===== components\ui\tabs.tsx =====

'use client';

import * as React from "react"
import * as TabsPrimitive from "@radix-ui/react-tabs"
import { cn } from "@/lib/utils"

const Tabs = TabsPrimitive.Root

const TabsList = React.forwardRef<
    React.ElementRef<typeof TabsPrimitive.List>,
    React.ComponentPropsWithoutRef<typeof TabsPrimitive.List>
>(({ className, ...props }, ref) => (
    <TabsPrimitive.List
        ref={ref}
        className={cn(
            "inline-flex h-10 items-center justify-center rounded-md bg-muted p-1 text-muted-foreground",
            className
        )}
        {...props}
    />
))
TabsList.displayName = TabsPrimitive.List.displayName

const TabsTrigger = React.forwardRef<
    React.ElementRef<typeof TabsPrimitive.Trigger>,
    React.ComponentPropsWithoutRef<typeof TabsPrimitive.Trigger>
>(({ className, ...props }, ref) => (
    <TabsPrimitive.Trigger
        ref={ref}
        className={cn(
            "inline-flex items-center justify-center whitespace-nowrap rounded-sm px-3 py-1.5 text-sm font-medium ring-offset-background transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:bg-background data-[state=active]:text-foreground data-[state=active]:shadow-sm",
            className
        )}
        {...props}
    />
))
TabsTrigger.displayName = TabsPrimitive.Trigger.displayName

const TabsContent = React.forwardRef<
    React.ElementRef<typeof TabsPrimitive.Content>,
    React.ComponentPropsWithoutRef<typeof TabsPrimitive.Content>
>(({ className, ...props }, ref) => (
    <TabsPrimitive.Content
        ref={ref}
        className={cn(
            "mt-2 ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2",
            className
        )}
        {...props}
    />
))
TabsContent.displayName = TabsPrimitive.Content.displayName

export { Tabs, TabsList, TabsTrigger, TabsContent }

// ===== components\ui\toast.tsx =====

'use client';

import * as React from "react"
import * as ToastPrimitives from "@radix-ui/react-toast"
import { cva, type VariantProps } from "class-variance-authority"
import { X } from "lucide-react"

import { cn } from "@/lib/utils"

const ToastProvider = ToastPrimitives.Provider

const ToastViewport = React.forwardRef<
    React.ElementRef<typeof ToastPrimitives.Viewport>,
    React.ComponentPropsWithoutRef<typeof ToastPrimitives.Viewport>
>(({ className, ...props }, ref) => (
    <ToastPrimitives.Viewport
        ref={ref}
        className={cn(
            "fixed top-0 z-[100] flex max-h-screen w-full flex-col-reverse p-4 sm:bottom-0 sm:right-0 sm:top-auto sm:flex-col md:max-w-[420px]",
            className
        )}
        {...props}
    />
))
ToastViewport.displayName = ToastPrimitives.Viewport.displayName

const toastVariants = cva(
    "group pointer-events-auto relative flex w-full items-center justify-between space-x-4 overflow-hidden rounded-md border p-6 pr-8 shadow-lg transition-all data-[swipe=cancel]:translate-x-0 data-[swipe=end]:translate-x-[var(--radix-toast-swipe-end-x)] data-[swipe=move]:translate-x-[var(--radix-toast-swipe-move-x)] data-[swipe=move]:transition-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[swipe=end]:animate-out data-[state=closed]:fade-out-80 data-[state=closed]:slide-out-to-right-full data-[state=open]:slide-in-from-top-full data-[state=open]:sm:slide-in-from-bottom-full",
    {
        variants: {
            variant: {
                default: "border bg-background text-foreground",
                destructive:
                    "destructive group border-destructive bg-destructive text-destructive-foreground",
            },
        },
        defaultVariants: {
            variant: "default",
        },
    }
)

const Toast = React.forwardRef<
    React.ElementRef<typeof ToastPrimitives.Root>,
    React.ComponentPropsWithoutRef<typeof ToastPrimitives.Root> &
    VariantProps<typeof toastVariants>
>(({ className, variant, ...props }, ref) => {
    return (
        <ToastPrimitives.Root
            ref={ref}
            className={cn(toastVariants({ variant }), className)}
            {...props}
        />
    )
})
Toast.displayName = ToastPrimitives.Root.displayName

const ToastAction = React.forwardRef<
    React.ElementRef<typeof ToastPrimitives.Action>,
    React.ComponentPropsWithoutRef<typeof ToastPrimitives.Action>
>(({ className, ...props }, ref) => (
    <ToastPrimitives.Action
        ref={ref}
        className={cn(
            "inline-flex h-8 shrink-0 items-center justify-center rounded-md border bg-transparent px-3 text-sm font-medium ring-offset-background transition-colors hover:bg-secondary focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 group-[.destructive]:border-muted/40 group-[.destructive]:hover:border-destructive/30 group-[.destructive]:hover:bg-destructive group-[.destructive]:hover:text-destructive-foreground group-[.destructive]:focus:ring-destructive",
            className
        )}
        {...props}
    />
))
ToastAction.displayName = ToastPrimitives.Action.displayName

const ToastClose = React.forwardRef<
    React.ElementRef<typeof ToastPrimitives.Close>,
    React.ComponentPropsWithoutRef<typeof ToastPrimitives.Close>
>(({ className, ...props }, ref) => (
    <ToastPrimitives.Close
        ref={ref}
        className={cn(
            "absolute right-2 top-2 rounded-md p-1 text-foreground/50 opacity-0 transition-opacity hover:text-foreground focus:opacity-100 focus:outline-none focus:ring-2 group-hover:opacity-100 group-[.destructive]:text-red-300 group-[.destructive]:hover:text-red-50 group-[.destructive]:focus:ring-red-400 group-[.destructive]:focus:ring-offset-red-600",
            className
        )}
        toast-close=""
        {...props}
    >
        <X className="h-4 w-4" />
    </ToastPrimitives.Close>
))
ToastClose.displayName = ToastPrimitives.Close.displayName

const ToastTitle = React.forwardRef<
    React.ElementRef<typeof ToastPrimitives.Title>,
    React.ComponentPropsWithoutRef<typeof ToastPrimitives.Title>
>(({ className, ...props }, ref) => (
    <ToastPrimitives.Title
        ref={ref}
        className={cn("text-sm font-semibold", className)}
        {...props}
    />
))
ToastTitle.displayName = ToastPrimitives.Title.displayName

const ToastDescription = React.forwardRef<
    React.ElementRef<typeof ToastPrimitives.Description>,
    React.ComponentPropsWithoutRef<typeof ToastPrimitives.Description>
>(({ className, ...props }, ref) => (
    <ToastPrimitives.Description
        ref={ref}
        className={cn("text-sm opacity-90", className)}
        {...props}
    />
))
ToastDescription.displayName = ToastPrimitives.Description.displayName

type ToastProps = React.ComponentPropsWithoutRef<typeof Toast>
type ToastActionElement = React.ReactElement<typeof ToastAction>

export {
    type ToastProps,
    type ToastActionElement,
    ToastProvider,
    ToastViewport,
    Toast,
    ToastTitle,
    ToastDescription,
    ToastAction,
    ToastClose,
}

// ===== components\ui\toaster.tsx =====

'use client';

import { useToast } from "@/hooks/use-toast"
import {
    Toast,
    ToastClose,
    ToastDescription,
    ToastProvider,
    ToastTitle,
    ToastViewport,
} from "@/components/ui/toast"

export function Toaster() {
    const { toasts } = useToast()

    return (
        <ToastProvider>
            {toasts.map(function ({ id, title, description, action, ...props }) {
                return (
                    <Toast key={id} {...props}>
                        <div className="grid gap-1">
                            {title && <ToastTitle>{title}</ToastTitle>}
                            {description && (
                                <ToastDescription>{description}</ToastDescription>
                            )}
                        </div>
                        {action}
                        <ToastClose />
                    </Toast>
                )
            })}
            <ToastViewport />
        </ToastProvider>
    )
}

// ===== components\ui\tooltip.tsx =====

'use client';

import * as React from "react"
import * as TooltipPrimitive from "@radix-ui/react-tooltip"

import { cn } from "@/lib/utils"

const TooltipProvider = TooltipPrimitive.Provider

const Tooltip = TooltipPrimitive.Root

const TooltipTrigger = TooltipPrimitive.Trigger

const TooltipContent = React.forwardRef<
    React.ElementRef<typeof TooltipPrimitive.Content>,
    React.ComponentPropsWithoutRef<typeof TooltipPrimitive.Content>
>(({ className, sideOffset = 4, ...props }, ref) => (
    <TooltipPrimitive.Content
        ref={ref}
        sideOffset={sideOffset}
        className={cn(
            "z-50 overflow-hidden rounded-md border bg-popover px-3 py-1.5 text-sm text-popover-foreground shadow-md animate-in fade-in-0 zoom-in-95 data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=closed]:zoom-out-95 data-[state=open]:animate-in data-[state=open]:fade-in-0 data-[state=open]:zoom-in-95",
            className
        )}
        {...props}
    />
))
TooltipContent.displayName = TooltipPrimitive.Content.displayName

export { Tooltip, TooltipTrigger, TooltipContent, TooltipProvider }

// ===== components\user-table.tsx =====

'use client';

import { useState } from "react";
import { useSafeQuery } from "@/hooks/useSafeQuery";
import { useToast } from "@/hooks/use-toast";
import { Button } from "@/components/ui/button";
import { Input } from "@/components/ui/input";
import { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from "@/components/ui/table";
import { Badge } from "@/components/ui/badge";
import { Edit, Trash2, Plus, Search, Loader2 } from "lucide-react";
import {
    Select,
    SelectContent,
    SelectItem,
    SelectTrigger,
    SelectValue,
} from "@/components/ui/select";

interface UserTableProps {
    searchTerm: string;
    roleFilter: string;
    statusFilter: string;
}

export default function UserTable({ searchTerm, roleFilter, statusFilter }: UserTableProps) {
    const [isCreating, setIsCreating] = useState(false);
    const [isSubmitting, setIsSubmitting] = useState(false);
    const [newUser, setNewUser] = useState({
        email: '',
        first_name: '',
        last_name: '',
        password: '',
        role: 'student',
        phone_number: '',
        department: '',
        position: ''
    });
    const { toast } = useToast();

    const { data: users, isLoading, refetch } = useSafeQuery({
        queryKey: ['/api/users'],
    });

    const filteredUsers = users?.filter((user: any) => {
        const matchesSearch =
            user.email.toLowerCase().includes(searchTerm.toLowerCase()) ||
            user.first_name.toLowerCase().includes(searchTerm.toLowerCase()) ||
            user.last_name.toLowerCase().includes(searchTerm.toLowerCase());

        const matchesRole = roleFilter === "all" || user.role === roleFilter;
        const matchesStatus = statusFilter === "all" || user.status === statusFilter;

        return matchesSearch && matchesRole && matchesStatus;
    }) || [];

    const handleCreateUser = async () => {
        // Validaciones frontend
        if (!newUser.email || !newUser.first_name || !newUser.last_name || !newUser.password) {
            toast({
                title: "Error",
                description: "Todos los campos obligatorios deben ser llenados",
                variant: "destructive",
            });
            return;
        }

        if (newUser.password.length < 6) {
            toast({
                title: "Error",
                description: "La contraseña debe tener al menos 6 caracteres",
                variant: "destructive",
            });
            return;
        }

        setIsSubmitting(true);

        try {
            const response = await fetch('/api/users', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify(newUser),
            });

            const data = await response.json();

            if (response.ok) {
                toast({
                    title: "¡Éxito!",
                    description: "Usuario creado correctamente",
                });

                // Resetear formulario
                setNewUser({
                    email: '',
                    first_name: '',
                    last_name: '',
                    password: '',
                    role: 'student',
                    phone_number: '',
                    department: '',
                    position: ''
                });
                setIsCreating(false);
                refetch(); // Recargar la lista de usuarios
            } else {
                throw new Error(data.error || 'Error al crear usuario');
            }
        } catch (error: any) {
            toast({
                title: "Error",
                description: error.message || "No se pudo crear el usuario",
                variant: "destructive",
            });
        } finally {
            setIsSubmitting(false);
        }
    };

    const handleDeleteUser = async (userId: string) => {
        if (!confirm('¿Estás seguro de que quieres eliminar este usuario?')) return;

        try {
            const response = await fetch(`/api/users?id=${userId}`, {
                method: 'DELETE',
            });

            if (response.ok) {
                toast({
                    title: "Usuario eliminado",
                    description: "El usuario ha sido eliminado correctamente",
                });
                refetch();
            } else {
                throw new Error('Error al eliminar usuario');
            }
        } catch (error) {
            toast({
                title: "Error",
                description: "No se pudo eliminar el usuario",
                variant: "destructive",
            });
        }
    };

    if (isLoading) {
        return (
            <div className="flex justify-center items-center h-64">
                <Loader2 className="h-8 w-8 animate-spin text-blue-600" />
                <span className="ml-2">Cargando usuarios...</span>
            </div>
        );
    }

    return (
        <div className="rounded-md border">
            <div className="p-4 bg-gray-50 border-b flex justify-between items-center">
                <h3 className="font-semibold">Gestión de Usuarios</h3>
                <Button
                    onClick={() => setIsCreating(!isCreating)}
                    disabled={isCreating}
                >
                    <Plus className="mr-2" size={16} />
                    Agregar Usuario
                </Button>
            </div>

            {isCreating && (
                <div className="p-4 bg-blue-50 border-b">
                    <h4 className="font-medium mb-3 text-blue-800">Nuevo Usuario</h4>
                    <div className="grid grid-cols-1 md:grid-cols-2 gap-3 mb-3">
                        <div>
                            <label className="text-sm font-medium mb-1 block">Email *</label>
                            <Input
                                type="email"
                                placeholder="ejemplo@correo.com"
                                value={newUser.email}
                                onChange={(e) => setNewUser({ ...newUser, email: e.target.value })}
                                disabled={isSubmitting}
                            />
                        </div>
                        <div>
                            <label className="text-sm font-medium mb-1 block">Contraseña *</label>
                            <Input
                                type="password"
                                placeholder="Mínimo 6 caracteres"
                                value={newUser.password}
                                onChange={(e) => setNewUser({ ...newUser, password: e.target.value })}
                                disabled={isSubmitting}
                            />
                        </div>
                        <div>
                            <label className="text-sm font-medium mb-1 block">Nombre *</label>
                            <Input
                                placeholder="Nombre"
                                value={newUser.first_name}
                                onChange={(e) => setNewUser({ ...newUser, first_name: e.target.value })}
                                disabled={isSubmitting}
                            />
                        </div>
                        <div>
                            <label className="text-sm font-medium mb-1 block">Apellido *</label>
                            <Input
                                placeholder="Apellido"
                                value={newUser.last_name}
                                onChange={(e) => setNewUser({ ...newUser, last_name: e.target.value })}
                                disabled={isSubmitting}
                            />
                        </div>
                        <div>
                            <label className="text-sm font-medium mb-1 block">Rol</label>
                            <Select
                                value={newUser.role}
                                onValueChange={(value) => setNewUser({ ...newUser, role: value })}
                                disabled={isSubmitting}
                            >
                                <SelectTrigger>
                                    <SelectValue placeholder="Seleccionar rol" />
                                </SelectTrigger>
                                <SelectContent>
                                    <SelectItem value="student">Estudiante</SelectItem>
                                    <SelectItem value="instructor">Instructor</SelectItem>
                                    <SelectItem value="admin">Administrador</SelectItem>
                                </SelectContent>
                            </Select>
                        </div>
                        <div>
                            <label className="text-sm font-medium mb-1 block">Teléfono</label>
                            <Input
                                placeholder="Teléfono"
                                value={newUser.phone_number}
                                onChange={(e) => setNewUser({ ...newUser, phone_number: e.target.value })}
                                disabled={isSubmitting}
                            />
                        </div>
                        <div>
                            <label className="text-sm font-medium mb-1 block">Departamento</label>
                            <Input
                                placeholder="Departamento"
                                value={newUser.department}
                                onChange={(e) => setNewUser({ ...newUser, department: e.target.value })}
                                disabled={isSubmitting}
                            />
                        </div>
                        <div>
                            <label className="text-sm font-medium mb-1 block">Cargo</label>
                            <Input
                                placeholder="Cargo"
                                value={newUser.position}
                                onChange={(e) => setNewUser({ ...newUser, position: e.target.value })}
                                disabled={isSubmitting}
                            />
                        </div>
                    </div>
                    <div className="flex space-x-3">
                        <Button
                            onClick={handleCreateUser}
                            disabled={isSubmitting}
                            className="flex-1"
                        >
                            {isSubmitting ? (
                                <>
                                    <Loader2 className="mr-2 h-4 w-4 animate-spin" />
                                    Creando...
                                </>
                            ) : (
                                <>
                                    <Plus className="mr-2" size={16} />
                                    Crear Usuario
                                </>
                            )}
                        </Button>
                        <Button
                            variant="outline"
                            onClick={() => setIsCreating(false)}
                            disabled={isSubmitting}
                        >
                            Cancelar
                        </Button>
                    </div>
                </div>
            )}

            <Table>
                <TableHeader>
                    <TableRow>
                        <TableHead>Usuario</TableHead>
                        <TableHead>Rol</TableHead>
                        <TableHead>Estado</TableHead>
                        <TableHead>Departamento</TableHead>
                        <TableHead>Último acceso</TableHead>
                        <TableHead className="text-right">Acciones</TableHead>
                    </TableRow>
                </TableHeader>
                <TableBody>
                    {filteredUsers.length === 0 ? (
                        <TableRow>
                            <TableCell colSpan={6} className="text-center py-8 text-gray-500">
                                {users?.length === 0 ? 'No hay usuarios registrados' : 'No se encontraron resultados'}
                            </TableCell>
                        </TableRow>
                    ) : (
                        filteredUsers.map((user: any) => (
                            <TableRow key={user.id}>
                                <TableCell>
                                    <div>
                                        <div className="font-medium">{user.first_name} {user.last_name}</div>
                                        <div className="text-sm text-gray-600">{user.email}</div>
                                    </div>
                                </TableCell>
                                <TableCell>
                                    <Badge variant={
                                        user.role === 'admin' ? 'destructive' :
                                            user.role === 'instructor' ? 'secondary' : 'default'
                                    }>
                                        {user.role === 'admin' ? 'Administrador' :
                                            user.role === 'instructor' ? 'Instructor' : 'Estudiante'}
                                    </Badge>
                                </TableCell>
                                <TableCell>
                                    <Badge variant={
                                        user.status === 'active' ? 'default' :
                                            user.status === 'inactive' ? 'secondary' : 'destructive'
                                    }>
                                        {user.status === 'active' ? 'Activo' :
                                            user.status === 'inactive' ? 'Inactivo' : 'Suspendido'}
                                    </Badge>
                                </TableCell>
                                <TableCell>{user.department || '-'}</TableCell>
                                <TableCell>
                                    {user.last_login ? new Date(user.last_login).toLocaleDateString() : 'Nunca'}
                                </TableCell>
                                <TableCell className="text-right">
                                    <Button variant="ghost" size="sm">
                                        <Edit className="h-4 w-4" />
                                    </Button>
                                    <Button
                                        variant="ghost"
                                        size="sm"
                                        onClick={() => handleDeleteUser(user.id)}
                                    >
                                        <Trash2 className="h-4 w-4" />
                                    </Button>
                                </TableCell>
                            </TableRow>
                        ))
                    )}
                </TableBody>
            </Table>
        </div>
    );
}

// ===== hooks\use-toast.ts =====

'use client';

import * as React from "react"

import type {
    ToastActionElement,
    ToastProps,
} from "@/components/ui/toast"

const TOAST_LIMIT = 5
const TOAST_REMOVE_DELAY = 1000000

type ToasterToast = ToastProps & {
    id: string
    title?: React.ReactNode
    description?: React.ReactNode
    action?: ToastActionElement
}

const actionTypes = {
    ADD_TOAST: "ADD_TOAST",
    UPDATE_TOAST: "UPDATE_TOAST",
    DISMISS_TOAST: "DISMISS_TOAST",
    REMOVE_TOAST: "REMOVE_TOAST",
} as const

let count = 0

function genId() {
    count = (count + 1) % Number.MAX_SAFE_INTEGER
    return count.toString()
}

type ActionType = typeof actionTypes

type Action =
    | {
        type: ActionType["ADD_TOAST"]
        toast: ToasterToast
    }
    | {
        type: ActionType["UPDATE_TOAST"]
        toast: Partial<ToasterToast>
    }
    | {
        type: ActionType["DISMISS_TOAST"]
        toastId?: ToasterToast["id"]
    }
    | {
        type: ActionType["REMOVE_TOAST"]
        toastId?: ToasterToast["id"]
    }

interface State {
    toasts: ToasterToast[]
}

const toastTimeouts = new Map<string, ReturnType<typeof setTimeout>>()

const addToRemoveQueue = (toastId: string) => {
    if (toastTimeouts.has(toastId)) {
        return
    }

    const timeout = setTimeout(() => {
        toastTimeouts.delete(toastId)
        dispatch({
            type: "REMOVE_TOAST",
            toastId: toastId,
        })
    }, TOAST_REMOVE_DELAY)

    toastTimeouts.set(toastId, timeout)
}

export const reducer = (state: State, action: Action): State => {
    switch (action.type) {
        case "ADD_TOAST":
            return {
                ...state,
                toasts: [action.toast, ...state.toasts].slice(0, TOAST_LIMIT),
            }

        case "UPDATE_TOAST":
            return {
                ...state,
                toasts: state.toasts.map((t) =>
                    t.id === action.toast.id ? { ...t, ...action.toast } : t
                ),
            }

        case "DISMISS_TOAST":
            const { toastId } = action

            if (toastId) {
                addToRemoveQueue(toastId)
            } else {
                state.toasts.forEach((toast) => {
                    addToRemoveQueue(toast.id)
                })
            }

            return {
                ...state,
                toasts: state.toasts.map((t) =>
                    t.id === toastId || toastId === undefined
                        ? {
                            ...t,
                            open: false,
                        }
                        : t
                ),
            }

        case "REMOVE_TOAST":
            if (action.toastId === undefined) {
                return {
                    ...state,
                    toasts: [],
                }
            }
            return {
                ...state,
                toasts: state.toasts.filter((t) => t.id !== action.toastId),
            }
    }
}

const listeners: Array<(state: State) => void> = []

let memoryState: State = { toasts: [] }

function dispatch(action: Action) {
    memoryState = reducer(memoryState, action)
    listeners.forEach((listener) => {
        listener(memoryState)
    })
}

type Toast = Omit<ToasterToast, "id">

function toast({ ...props }: Toast) {
    const id = genId()

    const update = (props: ToasterToast) =>
        dispatch({
            type: "UPDATE_TOAST",
            toast: { ...props, id },
        })
    const dismiss = () => dispatch({ type: "DISMISS_TOAST", toastId: id })

    dispatch({
        type: "ADD_TOAST",
        toast: {
            ...props,
            id,
            open: true,
            onOpenChange: (open) => {
                if (!open) dismiss()
            },
        },
    })

    return {
        id: id,
        dismiss,
        update,
    }
}

function useToast() {
    const [state, setState] = React.useState<State>(memoryState)

    React.useEffect(() => {
        listeners.push(setState)
        return () => {
            const index = listeners.indexOf(setState)
            if (index > -1) {
                listeners.splice(index, 1)
            }
        }
    }, [state])

    return {
        ...state,
        toast,
        dismiss: (toastId?: string) => dispatch({ type: "DISMISS_TOAST", toastId }),
    }
}

export { useToast, toast }

// ===== hooks\useSafeQuery.ts =====

'use client';

import { useQuery, UseQueryOptions } from '@tanstack/react-query';
import { safeSerialize } from '@/lib/serializer';
import { mockCourses, mockModules } from '@/lib/mockData';

// Función para simular delay de API
const simulateApiDelay = (ms: number = 800) =>
    new Promise(resolve => setTimeout(resolve, ms));

// Mock API functions
const mockApi = {
    getCourses: async () => {
        await simulateApiDelay(1000);
        return mockCourses;
    },
    getCourse: async (courseId: string) => {
        await simulateApiDelay(800);
        return mockCourses.find(course => course.id === courseId) || null;
    },
    getCourseModules: async (courseId: string) => {
        await simulateApiDelay(600);
        return mockModules[courseId] || [];
    }
};

export function useSafeQuery<TData = any, TError = any>(
    options: UseQueryOptions<TData, TError> & {
        queryKey: any[]
    }
) {
    // Siempre usar mock data por ahora
    const queryFn = async () => {
        const [path, id, subpath] = options.queryKey;

        if (path === '/api/courses') {
            if (id && subpath === 'modules') {
                return mockApi.getCourseModules(id) as TData;
            } else if (id) {
                return mockApi.getCourse(id) as TData;
            } else {
                return mockApi.getCourses() as TData;
            }
        }

        // Para otras rutas, devolver datos vacíos
        await simulateApiDelay(500);
        return [] as TData;
    };

    return useQuery({
        ...options,
        queryFn,
        select: (data: TData) => {
            const selectedData = options.select ? options.select(data) : data;
            return safeSerialize(selectedData);
        },
        onError: (error) => {
            console.error('Query error:', error);
            if (options.onError) {
                options.onError(error);
            }
        },
        retry: false // No reintentar
    });
}

// ===== lib\db.js =====

import { Pool } from 'pg';

// Configuración del pool de PostgreSQL usando TUS variables de entorno
const pool = new Pool({
    host: process.env.DB_HOST || '185.211.4.203',
    port: parseInt(process.env.DB_PORT || '5432'),
    database: process.env.DB_DATABASE || 'learning_platform',
    user: process.env.DB_USER || 'auwolf',
    password: process.env.PG_PASSWORD || 'un4x.0+',
    max: 200,
    idleTimeoutMillis: 30000,
    connectionTimeoutMillis: 2000,
    ssl: process.env.NODE_ENV === 'production' ? {
        rejectUnauthorized: false
    } : false
});

// Función para ejecutar consultas
export const query = async (text, params) => {
    try {
        console.log('🔍 Ejecutando query:', text.substring(0, 150) + (text.length > 150 ? '...' : ''));
        if (params) {
            console.log('📊 Parámetros:', params);
        }

        const start = Date.now();
        const result = await pool.query(text, params);
        const duration = Date.now() - start;

        console.log(`✅ Query ejecutada en ${duration}ms, filas: ${result.rowCount}`);
        return result;
    } catch (error) {
        console.error('❌ Error en query:', error);
        console.error('Query fallida:', text);
        if (params) {
            console.error('Parámetros:', params);
        }
        throw error;
    }
};

// Función para obtener un cliente directamente (para transacciones)
export const getClient = async () => {
    const client = await pool.connect();

    const originalQuery = client.query;
    const originalRelease = client.release;

    // Monkey patch para logging de queries
    client.query = (...args) => {
        console.log('🔍 Query con cliente:', args[0].substring(0, 100) + '...');
        return originalQuery.apply(client, args);
    };

    // Monkey patch para logging de release
    client.release = () => {
        console.log('🔄 Liberando cliente');
        client.query = originalQuery;
        client.release = originalRelease;
        return originalRelease.apply(client);
    };

    return client;
};

// Función para verificar la conexión y estructura de la BD
export const testConnection = async () => {
    let client;
    try {
        client = await pool.connect();
        console.log('✅ Conexión a PostgreSQL exitosa');

        // Verificar tablas esenciales
        const tablesToCheck = ['users', 'courses', 'course_modules', 'user_course_enrollments'];

        for (const table of tablesToCheck) {
            const tableCheck = await client.query(`
        SELECT EXISTS (
          SELECT FROM information_schema.tables 
          WHERE table_schema = 'public' 
          AND table_name = $1
        );
      `, [table]);

            console.log(`📊 ¿Tabla ${table} existe?`, tableCheck.rows[0].exists);

            if (!tableCheck.rows[0].exists) {
                console.warn(`⚠️  Advertencia: La tabla ${table} no existe en la base de datos`);
            }
        }

        // Contar registros en tablas principales
        try {
            const usersCount = await client.query('SELECT COUNT(*) FROM users');
            const coursesCount = await client.query('SELECT COUNT(*) FROM courses');

            console.log(`👥 Usuarios en BD: ${usersCount.rows[0].count}`);
            console.log(`📚 Cursos en BD: ${coursesCount.rows[0].count}`);
        } catch (countError) {
            console.log('ℹ️  No se pudieron contar registros (tablas probablemente vacías)');
        }

        return true;
    } catch (error) {
        console.error('❌ Error conectando a PostgreSQL:', error);
        return false;
    } finally {
        if (client) {
            client.release();
        }
    }
};

// Función para inicializar la base de datos (ejecutar tablas básicas si no existen)
export const initializeDatabase = async () => {
    const client = await getClient();

    try {
        await client.query('BEGIN');

        // Crear tabla users si no existe
        await client.query(`
      CREATE TABLE IF NOT EXISTS users (
        id UUID DEFAULT uuid_generate_v4() PRIMARY KEY,
        email VARCHAR(255) UNIQUE NOT NULL,
        first_name VARCHAR(100) NOT NULL,
        last_name VARCHAR(100) NOT NULL,
        password_hash VARCHAR(255) NOT NULL,
        role VARCHAR(20) DEFAULT 'student' CHECK (role IN ('admin', 'instructor', 'student')),
        status VARCHAR(20) DEFAULT 'active' CHECK (status IN ('active', 'inactive', 'suspended')),
        profile_image_url VARCHAR(500),
        phone_number VARCHAR(20),
        department VARCHAR(100),
        position VARCHAR(100),
        last_login TIMESTAMPTZ,
        created_at TIMESTAMPTZ DEFAULT NOW(),
        updated_at TIMESTAMPTZ DEFAULT NOW(),
        deleted_at TIMESTAMPTZ
      );
    `);

        console.log('✅ Tabla users verificada/creada');

        // Insertar usuario admin por defecto si no existe (password: admin123)
        await client.query(`
      INSERT INTO users (email, first_name, last_name, password_hash, role)
      VALUES ('admin@learninghub.com', 'Administrador', 'Sistema', '$2b$10$K7Vv.ExampleHashHere1234567890', 'admin')
      ON CONFLICT (email) DO NOTHING;
    `);

        await client.query('COMMIT');
        console.log('✅ Base de datos inicializada correctamente');

    } catch (error) {
        await client.query('ROLLBACK');
        console.error('❌ Error inicializando base de datos:', error);
        throw error;
    } finally {
        client.release();
    }
};

// Manejo de errores de conexión
pool.on('error', (err) => {
    console.error('❌ Error inesperado en el pool de PostgreSQL:', err);
});

// Probar conexión al cargar el módulo (solo en desarrollo)
if (process.env.NODE_ENV !== 'production') {
    testConnection().then(success => {
        if (success) {
            // Inicializar con tablas básicas si es necesario
            initializeDatabase().catch(console.error);
        }
    });
}

export default pool;

// ===== lib\exportUtils.ts =====

import * as XLSX from 'xlsx';

export interface ExportData {
    [key: string]: string | number | boolean | null;
}

export function exportToExcel(data: ExportData[], filename: string) {
    if (!data || data.length === 0) {
        console.warn('No hay datos para exportar');
        return;
    }

    try {
        const workbook = XLSX.utils.book_new();
        const worksheet = XLSX.utils.json_to_sheet(data);

        const columnWidths = Object.keys(data[0]).map(key => ({
            wch: Math.max(key.length, 15)
        }));
        worksheet['!cols'] = columnWidths;

        XLSX.utils.book_append_sheet(workbook, worksheet, 'Datos');
        XLSX.writeFile(workbook, `${filename}.xlsx`);
    } catch (error) {
        console.error('Error al exportar a Excel:', error);
    }
}

export function exportUsersToExcel(users: any[]) {
    const exportData = users.map(user => ({
        'ID': user.id,
        'Nombre': user.firstName || '',
        'Apellido': user.lastName || '',
        'Email': user.email || '',
        'Rol': getRoleLabel(user.role),
        'Estado': getStatusLabel(user.status),
        'Fecha de Registro': user.createdAt ? formatDate(user.createdAt) : '',
        'Última Actualización': user.updatedAt ? formatDate(user.updatedAt) : ''
    }));

    exportToExcel(exportData, `usuarios_${formatDateForFilename()}`);
}

export function exportCoursesToExcel(courses: any[]) {
    const exportData = courses.map(course => ({
        'ID': course.id,
        'Título': course.title,
        'Descripción': course.description || '',
        'Duración (min)': course.duration || 0,
        'Activo': course.isActive ? 'Sí' : 'No',
        'Categoría': course.category || '',
        'Nivel': course.level || '',
        'Fecha de Creación': course.createdAt ? formatDate(course.createdAt) : ''
    }));

    exportToExcel(exportData, `cursos_${formatDateForFilename()}`);
}

export function exportCertificatesToExcel(certificates: any[]) {
    const exportData = certificates.map(cert => ({
        'Número de Certificado': cert.certificateNumber,
        'Estudiante': cert.user?.firstName && cert.user?.lastName
            ? `${cert.user.firstName} ${cert.user.lastName}`
            : cert.user?.email || '',
        'Curso': cert.course?.title || '',
        'Emisor': cert.issuedBy,
        'Puntuación': `${cert.score}%`,
        'Fecha de Emisión': cert.issuedAt ? formatDate(cert.issuedAt) : '',
        'URL de Verificación': cert.verificationUrl || ''
    }));

    exportToExcel(exportData, `certificados_${formatDateForFilename()}`);
}

// Funciones auxiliares
function formatDate(dateString: string): string {
    try {
        return new Date(dateString).toLocaleDateString('es-ES');
    } catch {
        return dateString;
    }
}

function formatDateForFilename(): string {
    return new Date().toISOString().split('T')[0].replace(/-/g, '');
}

function getRoleLabel(role: string): string {
    switch (role) {
        case "admin": return "Administrador";
        case "instructor": return "Instructor";
        case "student": return "Estudiante";
        default: return role;
    }
}

function getStatusLabel(status: string): string {
    switch (status) {
        case "active": return "Activo";
        case "inactive": return "Inactivo";
        case "suspended": return "Suspendido";
        default: return status;
    }
}

// ===== lib\mockData.ts =====

import { Course, CourseModule } from '@/types';

export const mockCourses: Course[] = [
    {
        id: '1',
        title: 'Seguridad Industrial',
        description: 'Curso completo sobre normas de seguridad en el entorno industrial. Aprende sobre EPP, normas OSHA y protocolos de seguridad.',
        instructorId: '2',
        duration: 240,
        isActive: true,
        category: 'Seguridad',
        level: 'intermediate',
        thumbnailUrl: '/api/placeholder/300/200',
        createdAt: '2024-01-15T10:00:00Z',
        updatedAt: '2024-01-20T15:30:00Z'
    },
    {
        id: '2',
        title: 'Primeros Auxilios',
        description: 'Aprende técnicas básicas de primeros auxilios para emergencias. RCP, vendajes, y manejo de situaciones críticas.',
        instructorId: '2',
        duration: 180,
        isActive: true,
        category: 'Salud',
        level: 'beginner',
        thumbnailUrl: '/api/placeholder/300/200',
        createdAt: '2024-02-01T09:15:00Z',
        updatedAt: '2024-02-10T14:20:00Z'
    },
    {
        id: '3',
        title: 'Manejo Defensivo',
        description: 'Técnicas de conducción segura y preventiva. Reduce accidentes y mejora tu seguridad al volante.',
        instructorId: '2',
        duration: 300,
        isActive: true,
        category: 'Conducción',
        level: 'intermediate',
        thumbnailUrl: '/api/placeholder/300/200',
        createdAt: '2024-02-15T11:30:00Z',
        updatedAt: '2024-02-25T16:45:00Z'
    },
    {
        id: '4',
        title: 'Prevención de Incendios',
        description: 'Protocolos y técnicas para prevenir y combatir incendios en el ámbito laboral.',
        instructorId: '2',
        duration: 120,
        isActive: true,
        category: 'Seguridad',
        level: 'beginner',
        thumbnailUrl: '/api/placeholder/300/200',
        createdAt: '2024-03-01T08:00:00Z',
        updatedAt: '2024-03-10T12:00:00Z'
    }
];

export const mockModules: Record<string, CourseModule[]> = {
    '1': [
        {
            id: '101',
            courseId: '1',
            title: 'Introducción a EPP',
            description: 'Equipo de Protección Personal básico y su importancia',
            contentType: 'video',
            contentUrl: 'https://example.com/video1.mp4',
            duration: 1200,
            orderIndex: 1,
            isPublished: true,
            createdAt: '2024-01-16T10:00:00Z',
            updatedAt: '2024-01-16T10:00:00Z'
        },
        {
            id: '102',
            courseId: '1',
            title: 'Normas OSHA',
            description: 'Estándares de seguridad ocupacional y su aplicación',
            contentType: 'video',
            contentUrl: 'https://example.com/video2.mp4',
            duration: 1800,
            orderIndex: 2,
            isPublished: true,
            createdAt: '2024-01-17T10:00:00Z',
            updatedAt: '2024-01-17T10:00:00Z'
        },
        {
            id: '103',
            courseId: '1',
            title: 'Señalización de Seguridad',
            description: 'Tipos de señalización y su significado',
            contentType: 'image',
            contentUrl: 'https://example.com/image1.jpg',
            duration: 600,
            orderIndex: 3,
            isPublished: true,
            createdAt: '2024-01-18T10:00:00Z',
            updatedAt: '2024-01-18T10:00:00Z'
        }
    ],
    '2': [
        {
            id: '201',
            courseId: '2',
            title: 'RCP Básico',
            description: 'Reanimación cardiopulmonar para adultos',
            contentType: 'video',
            contentUrl: 'https://example.com/video3.mp4',
            duration: 1500,
            orderIndex: 1,
            isPublished: true,
            createdAt: '2024-02-02T10:00:00Z',
            updatedAt: '2024-02-02T10:00:00Z'
        },
        {
            id: '202',
            courseId: '2',
            title: 'Manejo de Heridas',
            description: 'Técnicas básicas para el tratamiento de heridas',
            contentType: 'video',
            contentUrl: 'https://example.com/video4.mp4',
            duration: 1200,
            orderIndex: 2,
            isPublished: true,
            createdAt: '2024-02-03T10:00:00Z',
            updatedAt: '2024-02-03T10:00:00Z'
        }
    ],
    '3': [
        {
            id: '301',
            courseId: '3',
            title: 'Principios de Conducción Defensiva',
            description: 'Fundamentos de la conducción preventiva',
            contentType: 'video',
            contentUrl: 'https://example.com/video5.mp4',
            duration: 2400,
            orderIndex: 1,
            isPublished: true,
            createdAt: '2024-02-16T10:00:00Z',
            updatedAt: '2024-02-16T10:00:00Z'
        }
    ],
    '4': [
        {
            id: '401',
            courseId: '4',
            title: 'Tipos de Extintores',
            description: 'Clasificación y uso correcto de extintores',
            contentType: 'video',
            contentUrl: 'https://example.com/video6.mp4',
            duration: 1800,
            orderIndex: 1,
            isPublished: true,
            createdAt: '2024-03-02T10:00:00Z',
            updatedAt: '2024-03-02T10:00:00Z'
        }
    ]
};

// ===== lib\queryClient.ts =====

import { QueryClient } from '@tanstack/react-query';
import { safeSerialize } from './serializer';

// Crea una nueva instancia de QueryClient
export const queryClient = new QueryClient({
    defaultOptions: {
        queries: {
            staleTime: 60 * 1000,
            retry: 1,
            // Asegura que los datos se serialicen correctamente
            structuralSharing: false,
        },
    },
});

// Función para resetear el queryClient (útil para testing)
export function resetQueryClient() {
    queryClient.clear();
}

export async function apiRequest(
    method: string,
    url: string,
    data?: any
): Promise<Response> {
    try {
        const serializedData = data ? safeSerialize(data) : undefined;

        const response = await fetch(url, {
            method,
            headers: {
                'Content-Type': 'application/json',
            },
            body: serializedData ? JSON.stringify(serializedData) : undefined,
        });

        if (!response.ok) {
            throw new Error(`HTTP error! status: ${response.status}`);
        }

        const responseData = await response.json();
        return safeSerialize(responseData);
    } catch (error) {
        console.error('API request failed:', error);
        throw error;
    }
}

// ===== lib\serializer.ts =====

export function safeSerialize<T>(data: T): T {
    if (data === null || data === undefined) {
        return data;
    }

    if (typeof data !== 'object') {
        return data;
    }

    if (Array.isArray(data)) {
        return data.map(item => safeSerialize(item)) as unknown as T;
    }

    if (data instanceof Date) {
        return data.toISOString() as unknown as T;
    }

    // Manejar objetos con prototipo null
    if (Object.getPrototypeOf(data) === null) {
        return JSON.parse(JSON.stringify(data));
    }

    const serialized: Record<string, any> = {};

    for (const key in data) {
        if (Object.prototype.hasOwnProperty.call(data, key)) {
            const value = (data as any)[key];

            if (value === null || value === undefined) {
                serialized[key] = value;
            } else if (typeof value === 'object') {
                if (value instanceof Date) {
                    serialized[key] = value.toISOString();
                } else if (Array.isArray(value)) {
                    serialized[key] = value.map(item => safeSerialize(item));
                } else if (value && typeof value === 'object') {
                    // Verificar si es un objeto con prototipo null
                    if (Object.getPrototypeOf(value) === null) {
                        serialized[key] = JSON.parse(JSON.stringify(value));
                    } else {
                        serialized[key] = safeSerialize(value);
                    }
                } else {
                    serialized[key] = value;
                }
            } else {
                serialized[key] = value;
            }
        }
    }

    return serialized as T;
}

export function isSerializable(obj: any): boolean {
    if (obj === null || obj === undefined) {
        return true;
    }

    if (typeof obj !== 'object') {
        return true;
    }

    if (obj instanceof Date) {
        return true;
    }

    if (Object.getPrototypeOf(obj) === null) {
        return true;
    }

    if (Array.isArray(obj)) {
        return obj.every(item => isSerializable(item));
    }

    for (const key in obj) {
        if (Object.prototype.hasOwnProperty.call(obj, key)) {
            const value = obj[key];

            if (value !== null && typeof value === 'object' && !(value instanceof Date)) {
                if (Object.getPrototypeOf(value) === null) {
                    continue;
                }
                if (!isSerializable(value)) {
                    return false;
                }
            }

            if (typeof key === 'symbol') {
                return false;
            }
        }
    }

    return true;
}

// ===== lib\utils.ts =====

import { clsx, type ClassValue } from "clsx"
import { twMerge } from "tailwind-merge"

export function cn(...inputs: ClassValue[]) {
    return twMerge(clsx(inputs))
}

// ===== mergeFiles.js =====

const fs = require('fs');
const path = require('path');

const folder = './'; // carpeta raíz del proyecto
const outputFile = 'proyecto_completo.txt';
const extensions = ['.jsx', '.js', '.ts', '.tsx', '.css', '.json', '.html'];

function getFiles(dir) {
    let results = [];
    fs.readdirSync(dir).forEach(file => {
        const fullPath = path.join(dir, file);
        const stat = fs.statSync(fullPath);
        if (stat && stat.isDirectory()) {
            results = results.concat(getFiles(fullPath));
        } else if (extensions.includes(path.extname(fullPath))) {
            results.push(fullPath);
        }
    });
    return results;
}

const allFiles = getFiles(folder);
let allText = '';

allFiles.forEach(file => {
    allText += `\n\n// ===== ${file} =====\n\n`;
    allText += fs.readFileSync(file, 'utf8');
});

fs.writeFileSync(outputFile, allText, 'utf8');
console.log(`Archivo creado: ${outputFile}`);


// ===== next-env.d.ts =====

/// <reference types="next" />
/// <reference types="next/image-types/global" />

// NOTE: This file should not be edited
// see https://nextjs.org/docs/basic-features/typescript for more information.


// ===== next.config.js =====

/** @type {import('next').NextConfig} */
const nextConfig = {
    experimental: {
        serverComponentsExternalPackages: ['bcryptjs'],
    },
    images: {
        domains: ['localhost'],
        remotePatterns: [
            {
                protocol: 'https',
                hostname: '**',
            },
        ],
    },
    // Configuración para servir archivos estáticos
    async headers() {
        return [
            {
                source: '/uploads/:path*',
                headers: [
                    {
                        key: 'Cache-Control',
                        value: 'public, max-age=31536000, immutable',
                    },
                ],
            },
        ];
    },
    // Aumentar el límite de tamaño para uploads
    api: {
        bodyParser: {
            sizeLimit: '100mb',
        },
    },
};

module.exports = nextConfig;

// ===== package-lock.json =====

{
    "name": "newcap",
    "version": "0.1.0",
    "lockfileVersion": 3,
    "requires": true,
    "packages": {
        "": {
            "name": "newcap",
            "version": "0.1.0",
            "dependencies": {
                "@hookform/resolvers": "^3.3.1",
                "@radix-ui/react-alert-dialog": "^1.0.5",
                "@radix-ui/react-checkbox": "^1.0.4",
                "@radix-ui/react-dropdown-menu": "^2.0.6",
                "@radix-ui/react-label": "^2.0.2",
                "@radix-ui/react-progress": "^1.1.7",
                "@radix-ui/react-select": "^2.0.0",
                "@radix-ui/react-switch": "^1.2.6",
                "@radix-ui/react-tabs": "^1.1.13",
                "@radix-ui/react-toast": "^1.1.5",
                "@radix-ui/react-tooltip": "^1.0.7",
                "@tanstack/react-query": "^4.36.1",
                "@types/pg": "^8.15.5",
                "@types/uuid": "^10.0.0",
                "bcryptjs": "^3.0.2",
                "class-variance-authority": "^0.7.0",
                "clsx": "^2.0.0",
                "install": "^0.13.0",
                "lucide-react": "^0.294.0",
                "next": "14.0.0",
                "npm": "^11.6.0",
                "pg": "^8.16.3",
                "react": "^18.2.0",
                "react-dom": "^18.2.0",
                "react-dropzone": "^14.3.8",
                "react-hook-form": "^7.48.2",
                "recharts": "^2.15.4",
                "tailwind-merge": "^1.14.0",
                "uuid": "^12.0.0",
                "xlsx": "^0.18.5",
                "zod": "^3.22.4"
            },
            "devDependencies": {
                "@types/bcryptjs": "^3.0.0",
                "@types/node": "^20",
                "@types/react": "^18",
                "@types/react-dom": "^18",
                "autoprefixer": "^10.0.1",
                "eslint": "^8",
                "eslint-config-next": "14.0.0",
                "postcss": "^8",
                "tailwindcss": "^3.3.0",
                "typescript": "^5"
            }
        },
        "node_modules/@alloc/quick-lru": {
            "version": "5.2.0",
            "resolved": "https://registry.npmjs.org/@alloc/quick-lru/-/quick-lru-5.2.0.tgz",
            "integrity": "sha512-UrcABB+4bUrFABwbluTIBErXwvbsU/V7TZWfmbgJfbkwiBuziS9gxdODUyuiecfdGQ85jglMW6juS3+z5TsKLw==",
            "dev": true,
            "engines": {
                "node": ">=10"
            },
            "funding": {
                "url": "https://github.com/sponsors/sindresorhus"
            }
        },
        "node_modules/@babel/runtime": {
            "version": "7.28.4",
            "resolved": "https://registry.npmjs.org/@babel/runtime/-/runtime-7.28.4.tgz",
            "integrity": "sha512-Q/N6JNWvIvPnLDvjlE1OUBLPQHH6l3CltCEsHIujp45zQUSSh8K+gHnaEX45yAT1nyngnINhvWtzN+Nb9D8RAQ==",
            "engines": {
                "node": ">=6.9.0"
            }
        },
        "node_modules/@emnapi/core": {
            "version": "1.5.0",
            "resolved": "https://registry.npmjs.org/@emnapi/core/-/core-1.5.0.tgz",
            "integrity": "sha512-sbP8GzB1WDzacS8fgNPpHlp6C9VZe+SJP3F90W9rLemaQj2PzIuTEl1qDOYQf58YIpyjViI24y9aPWCjEzY2cg==",
            "dev": true,
            "optional": true,
            "dependencies": {
                "@emnapi/wasi-threads": "1.1.0",
                "tslib": "^2.4.0"
            }
        },
        "node_modules/@emnapi/runtime": {
            "version": "1.5.0",
            "resolved": "https://registry.npmjs.org/@emnapi/runtime/-/runtime-1.5.0.tgz",
            "integrity": "sha512-97/BJ3iXHww3djw6hYIfErCZFee7qCtrneuLa20UXFCOTCfBM2cvQHjWJ2EG0s0MtdNwInarqCTz35i4wWXHsQ==",
            "dev": true,
            "optional": true,
            "dependencies": {
                "tslib": "^2.4.0"
            }
        },
        "node_modules/@emnapi/wasi-threads": {
            "version": "1.1.0",
            "resolved": "https://registry.npmjs.org/@emnapi/wasi-threads/-/wasi-threads-1.1.0.tgz",
            "integrity": "sha512-WI0DdZ8xFSbgMjR1sFsKABJ/C5OnRrjT06JXbZKexJGrDuPTzZdDYfFlsgcCXCyf+suG5QU2e/y1Wo2V/OapLQ==",
            "dev": true,
            "optional": true,
            "dependencies": {
                "tslib": "^2.4.0"
            }
        },
        "node_modules/@eslint-community/eslint-utils": {
            "version": "4.8.0",
            "resolved": "https://registry.npmjs.org/@eslint-community/eslint-utils/-/eslint-utils-4.8.0.tgz",
            "integrity": "sha512-MJQFqrZgcW0UNYLGOuQpey/oTN59vyWwplvCGZztn1cKz9agZPPYpJB7h2OMmuu7VLqkvEjN8feFZJmxNF9D+Q==",
            "dev": true,
            "dependencies": {
                "eslint-visitor-keys": "^3.4.3"
            },
            "engines": {
                "node": "^12.22.0 || ^14.17.0 || >=16.0.0"
            },
            "funding": {
                "url": "https://opencollective.com/eslint"
            },
            "peerDependencies": {
                "eslint": "^6.0.0 || ^7.0.0 || >=8.0.0"
            }
        },
        "node_modules/@eslint-community/regexpp": {
            "version": "4.12.1",
            "resolved": "https://registry.npmjs.org/@eslint-community/regexpp/-/regexpp-4.12.1.tgz",
            "integrity": "sha512-CCZCDJuduB9OUkFkY2IgppNZMi2lBQgD2qzwXkEia16cge2pijY/aXi96CJMquDMn3nJdlPV1A5KrJEXwfLNzQ==",
            "dev": true,
            "engines": {
                "node": "^12.0.0 || ^14.0.0 || >=16.0.0"
            }
        },
        "node_modules/@eslint/eslintrc": {
            "version": "2.1.4",
            "resolved": "https://registry.npmjs.org/@eslint/eslintrc/-/eslintrc-2.1.4.tgz",
            "integrity": "sha512-269Z39MS6wVJtsoUl10L60WdkhJVdPG24Q4eZTH3nnF6lpvSShEK3wQjDX9JRWAUPvPh7COouPpU9IrqaZFvtQ==",
            "dev": true,
            "dependencies": {
                "ajv": "^6.12.4",
                "debug": "^4.3.2",
                "espree": "^9.6.0",
                "globals": "^13.19.0",
                "ignore": "^5.2.0",
                "import-fresh": "^3.2.1",
                "js-yaml": "^4.1.0",
                "minimatch": "^3.1.2",
                "strip-json-comments": "^3.1.1"
            },
            "engines": {
                "node": "^12.22.0 || ^14.17.0 || >=16.0.0"
            },
            "funding": {
                "url": "https://opencollective.com/eslint"
            }
        },
        "node_modules/@eslint/js": {
            "version": "8.57.1",
            "resolved": "https://registry.npmjs.org/@eslint/js/-/js-8.57.1.tgz",
            "integrity": "sha512-d9zaMRSTIKDLhctzH12MtXvJKSSUhaHcjV+2Z+GK+EEY7XKpP5yR4x+N3TAcHTcu963nIr+TMcCb4DBCYX1z6Q==",
            "dev": true,
            "engines": {
                "node": "^12.22.0 || ^14.17.0 || >=16.0.0"
            }
        },
        "node_modules/@floating-ui/core": {
            "version": "1.7.3",
            "resolved": "https://registry.npmjs.org/@floating-ui/core/-/core-1.7.3.tgz",
            "integrity": "sha512-sGnvb5dmrJaKEZ+LDIpguvdX3bDlEllmv4/ClQ9awcmCZrlx5jQyyMWFM5kBI+EyNOCDDiKk8il0zeuX3Zlg/w==",
            "dependencies": {
                "@floating-ui/utils": "^0.2.10"
            }
        },
        "node_modules/@floating-ui/dom": {
            "version": "1.7.4",
            "resolved": "https://registry.npmjs.org/@floating-ui/dom/-/dom-1.7.4.tgz",
            "integrity": "sha512-OOchDgh4F2CchOX94cRVqhvy7b3AFb+/rQXyswmzmGakRfkMgoWVjfnLWkRirfLEfuD4ysVW16eXzwt3jHIzKA==",
            "dependencies": {
                "@floating-ui/core": "^1.7.3",
                "@floating-ui/utils": "^0.2.10"
            }
        },
        "node_modules/@floating-ui/react-dom": {
            "version": "2.1.6",
            "resolved": "https://registry.npmjs.org/@floating-ui/react-dom/-/react-dom-2.1.6.tgz",
            "integrity": "sha512-4JX6rEatQEvlmgU80wZyq9RT96HZJa88q8hp0pBd+LrczeDI4o6uA2M+uvxngVHo4Ihr8uibXxH6+70zhAFrVw==",
            "dependencies": {
                "@floating-ui/dom": "^1.7.4"
            },
            "peerDependencies": {
                "react": ">=16.8.0",
                "react-dom": ">=16.8.0"
            }
        },
        "node_modules/@floating-ui/utils": {
            "version": "0.2.10",
            "resolved": "https://registry.npmjs.org/@floating-ui/utils/-/utils-0.2.10.tgz",
            "integrity": "sha512-aGTxbpbg8/b5JfU1HXSrbH3wXZuLPJcNEcZQFMxLs3oSzgtVu6nFPkbbGGUvBcUjKV2YyB9Wxxabo+HEH9tcRQ=="
        },
        "node_modules/@hookform/resolvers": {
            "version": "3.10.0",
            "resolved": "https://registry.npmjs.org/@hookform/resolvers/-/resolvers-3.10.0.tgz",
            "integrity": "sha512-79Dv+3mDF7i+2ajj7SkypSKHhl1cbln1OGavqrsF7p6mbUv11xpqpacPsGDCTRvCSjEEIez2ef1NveSVL3b0Ag==",
            "peerDependencies": {
                "react-hook-form": "^7.0.0"
            }
        },
        "node_modules/@humanwhocodes/config-array": {
            "version": "0.13.0",
            "resolved": "https://registry.npmjs.org/@humanwhocodes/config-array/-/config-array-0.13.0.tgz",
            "integrity": "sha512-DZLEEqFWQFiyK6h5YIeynKx7JlvCYWL0cImfSRXZ9l4Sg2efkFGTuFf6vzXjK1cq6IYkU+Eg/JizXw+TD2vRNw==",
            "deprecated": "Use @eslint/config-array instead",
            "dev": true,
            "dependencies": {
                "@humanwhocodes/object-schema": "^2.0.3",
                "debug": "^4.3.1",
                "minimatch": "^3.0.5"
            },
            "engines": {
                "node": ">=10.10.0"
            }
        },
        "node_modules/@humanwhocodes/module-importer": {
            "version": "1.0.1",
            "resolved": "https://registry.npmjs.org/@humanwhocodes/module-importer/-/module-importer-1.0.1.tgz",
            "integrity": "sha512-bxveV4V8v5Yb4ncFTT3rPSgZBOpCkjfK0y4oVVVJwIuDVBRMDXrPyXRL988i5ap9m9bnyEEjWfm5WkBmtffLfA==",
            "dev": true,
            "engines": {
                "node": ">=12.22"
            },
            "funding": {
                "type": "github",
                "url": "https://github.com/sponsors/nzakas"
            }
        },
        "node_modules/@humanwhocodes/object-schema": {
            "version": "2.0.3",
            "resolved": "https://registry.npmjs.org/@humanwhocodes/object-schema/-/object-schema-2.0.3.tgz",
            "integrity": "sha512-93zYdMES/c1D69yZiKDBj0V24vqNzB/koF26KPaagAfd3P/4gUlh3Dys5ogAK+Exi9QyzlD8x/08Zt7wIKcDcA==",
            "deprecated": "Use @eslint/object-schema instead",
            "dev": true
        },
        "node_modules/@isaacs/cliui": {
            "version": "8.0.2",
            "resolved": "https://registry.npmjs.org/@isaacs/cliui/-/cliui-8.0.2.tgz",
            "integrity": "sha512-O8jcjabXaleOG9DQ0+ARXWZBTfnP4WNAqzuiJK7ll44AmxGKv/J2M4TPjxjY3znBCfvBXFzucm1twdyFybFqEA==",
            "dev": true,
            "dependencies": {
                "string-width": "^5.1.2",
                "string-width-cjs": "npm:string-width@^4.2.0",
                "strip-ansi": "^7.0.1",
                "strip-ansi-cjs": "npm:strip-ansi@^6.0.1",
                "wrap-ansi": "^8.1.0",
                "wrap-ansi-cjs": "npm:wrap-ansi@^7.0.0"
            },
            "engines": {
                "node": ">=12"
            }
        },
        "node_modules/@isaacs/cliui/node_modules/ansi-regex": {
            "version": "6.2.0",
            "resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-6.2.0.tgz",
            "integrity": "sha512-TKY5pyBkHyADOPYlRT9Lx6F544mPl0vS5Ew7BJ45hA08Q+t3GjbueLliBWN3sMICk6+y7HdyxSzC4bWS8baBdg==",
            "dev": true,
            "engines": {
                "node": ">=12"
            },
            "funding": {
                "url": "https://github.com/chalk/ansi-regex?sponsor=1"
            }
        },
        "node_modules/@isaacs/cliui/node_modules/strip-ansi": {
            "version": "7.1.0",
            "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-7.1.0.tgz",
            "integrity": "sha512-iq6eVVI64nQQTRYq2KtEg2d2uU7LElhTJwsH4YzIHZshxlgZms/wIc4VoDQTlG/IvVIrBKG06CrZnp0qv7hkcQ==",
            "dev": true,
            "dependencies": {
                "ansi-regex": "^6.0.1"
            },
            "engines": {
                "node": ">=12"
            },
            "funding": {
                "url": "https://github.com/chalk/strip-ansi?sponsor=1"
            }
        },
        "node_modules/@jridgewell/gen-mapping": {
            "version": "0.3.13",
            "resolved": "https://registry.npmjs.org/@jridgewell/gen-mapping/-/gen-mapping-0.3.13.tgz",
            "integrity": "sha512-2kkt/7niJ6MgEPxF0bYdQ6etZaA+fQvDcLKckhy1yIQOzaoKjBBjSj63/aLVjYE3qhRt5dvM+uUyfCg6UKCBbA==",
            "dev": true,
            "dependencies": {
                "@jridgewell/sourcemap-codec": "^1.5.0",
                "@jridgewell/trace-mapping": "^0.3.24"
            }
        },
        "node_modules/@jridgewell/resolve-uri": {
            "version": "3.1.2",
            "resolved": "https://registry.npmjs.org/@jridgewell/resolve-uri/-/resolve-uri-3.1.2.tgz",
            "integrity": "sha512-bRISgCIjP20/tbWSPWMEi54QVPRZExkuD9lJL+UIxUKtwVJA8wW1Trb1jMs1RFXo1CBTNZ/5hpC9QvmKWdopKw==",
            "dev": true,
            "engines": {
                "node": ">=6.0.0"
            }
        },
        "node_modules/@jridgewell/sourcemap-codec": {
            "version": "1.5.5",
            "resolved": "https://registry.npmjs.org/@jridgewell/sourcemap-codec/-/sourcemap-codec-1.5.5.tgz",
            "integrity": "sha512-cYQ9310grqxueWbl+WuIUIaiUaDcj7WOq5fVhEljNVgRfOUhY9fy2zTvfoqWsnebh8Sl70VScFbICvJnLKB0Og==",
            "dev": true
        },
        "node_modules/@jridgewell/trace-mapping": {
            "version": "0.3.30",
            "resolved": "https://registry.npmjs.org/@jridgewell/trace-mapping/-/trace-mapping-0.3.30.tgz",
            "integrity": "sha512-GQ7Nw5G2lTu/BtHTKfXhKHok2WGetd4XYcVKGx00SjAk8GMwgJM3zr6zORiPGuOE+/vkc90KtTosSSvaCjKb2Q==",
            "dev": true,
            "dependencies": {
                "@jridgewell/resolve-uri": "^3.1.0",
                "@jridgewell/sourcemap-codec": "^1.4.14"
            }
        },
        "node_modules/@napi-rs/wasm-runtime": {
            "version": "0.2.12",
            "resolved": "https://registry.npmjs.org/@napi-rs/wasm-runtime/-/wasm-runtime-0.2.12.tgz",
            "integrity": "sha512-ZVWUcfwY4E/yPitQJl481FjFo3K22D6qF0DuFH6Y/nbnE11GY5uguDxZMGXPQ8WQ0128MXQD7TnfHyK4oWoIJQ==",
            "dev": true,
            "optional": true,
            "dependencies": {
                "@emnapi/core": "^1.4.3",
                "@emnapi/runtime": "^1.4.3",
                "@tybys/wasm-util": "^0.10.0"
            }
        },
        "node_modules/@next/env": {
            "version": "14.0.0",
            "resolved": "https://registry.npmjs.org/@next/env/-/env-14.0.0.tgz",
            "integrity": "sha512-cIKhxkfVELB6hFjYsbtEeTus2mwrTC+JissfZYM0n+8Fv+g8ucUfOlm3VEDtwtwydZ0Nuauv3bl0qF82nnCAqA=="
        },
        "node_modules/@next/eslint-plugin-next": {
            "version": "14.0.0",
            "resolved": "https://registry.npmjs.org/@next/eslint-plugin-next/-/eslint-plugin-next-14.0.0.tgz",
            "integrity": "sha512-Ye37nNI09V3yt7pzuzSQtwlvuJ2CGzFszHXkcTHHZgNr7EhTMFLipn3VSJChy+e5+ahTdNApPphc3qCPUsn10A==",
            "dev": true,
            "dependencies": {
                "glob": "7.1.7"
            }
        },
        "node_modules/@next/swc-darwin-arm64": {
            "version": "14.0.0",
            "resolved": "https://registry.npmjs.org/@next/swc-darwin-arm64/-/swc-darwin-arm64-14.0.0.tgz",
            "integrity": "sha512-HQKi159jCz4SRsPesVCiNN6tPSAFUkOuSkpJsqYTIlbHLKr1mD6be/J0TvWV6fwJekj81bZV9V/Tgx3C2HO9lA==",
            "cpu": [
                "arm64"
            ],
            "optional": true,
            "os": [
                "darwin"
            ],
            "engines": {
                "node": ">= 10"
            }
        },
        "node_modules/@next/swc-darwin-x64": {
            "version": "14.0.0",
            "resolved": "https://registry.npmjs.org/@next/swc-darwin-x64/-/swc-darwin-x64-14.0.0.tgz",
            "integrity": "sha512-4YyQLMSaCgX/kgC1jjF3s3xSoBnwHuDhnF6WA1DWNEYRsbOOPWjcYhv8TKhRe2ApdOam+VfQSffC4ZD+X4u1Cg==",
            "cpu": [
                "x64"
            ],
            "optional": true,
            "os": [
                "darwin"
            ],
            "engines": {
                "node": ">= 10"
            }
        },
        "node_modules/@next/swc-linux-arm64-gnu": {
            "version": "14.0.0",
            "resolved": "https://registry.npmjs.org/@next/swc-linux-arm64-gnu/-/swc-linux-arm64-gnu-14.0.0.tgz",
            "integrity": "sha512-io7fMkJ28Glj7SH8yvnlD6naIhRDnDxeE55CmpQkj3+uaA2Hko6WGY2pT5SzpQLTnGGnviK85cy8EJ2qsETj/g==",
            "cpu": [
                "arm64"
            ],
            "optional": true,
            "os": [
                "linux"
            ],
            "engines": {
                "node": ">= 10"
            }
        },
        "node_modules/@next/swc-linux-arm64-musl": {
            "version": "14.0.0",
            "resolved": "https://registry.npmjs.org/@next/swc-linux-arm64-musl/-/swc-linux-arm64-musl-14.0.0.tgz",
            "integrity": "sha512-nC2h0l1Jt8LEzyQeSs/BKpXAMe0mnHIMykYALWaeddTqCv5UEN8nGO3BG8JAqW/Y8iutqJsaMe2A9itS0d/r8w==",
            "cpu": [
                "arm64"
            ],
            "optional": true,
            "os": [
                "linux"
            ],
            "engines": {
                "node": ">= 10"
            }
        },
        "node_modules/@next/swc-linux-x64-gnu": {
            "version": "14.0.0",
            "resolved": "https://registry.npmjs.org/@next/swc-linux-x64-gnu/-/swc-linux-x64-gnu-14.0.0.tgz",
            "integrity": "sha512-Wf+WjXibJQ7hHXOdNOmSMW5bxeJHVf46Pwb3eLSD2L76NrytQlif9NH7JpHuFlYKCQGfKfgSYYre5rIfmnSwQw==",
            "cpu": [
                "x64"
            ],
            "optional": true,
            "os": [
                "linux"
            ],
            "engines": {
                "node": ">= 10"
            }
        },
        "node_modules/@next/swc-linux-x64-musl": {
            "version": "14.0.0",
            "resolved": "https://registry.npmjs.org/@next/swc-linux-x64-musl/-/swc-linux-x64-musl-14.0.0.tgz",
            "integrity": "sha512-WTZb2G7B+CTsdigcJVkRxfcAIQj7Lf0ipPNRJ3vlSadU8f0CFGv/ST+sJwF5eSwIe6dxKoX0DG6OljDBaad+rg==",
            "cpu": [
                "x64"
            ],
            "optional": true,
            "os": [
                "linux"
            ],
            "engines": {
                "node": ">= 10"
            }
        },
        "node_modules/@next/swc-win32-arm64-msvc": {
            "version": "14.0.0",
            "resolved": "https://registry.npmjs.org/@next/swc-win32-arm64-msvc/-/swc-win32-arm64-msvc-14.0.0.tgz",
            "integrity": "sha512-7R8/x6oQODmNpnWVW00rlWX90sIlwluJwcvMT6GXNIBOvEf01t3fBg0AGURNKdTJg2xNuP7TyLchCL7Lh2DTiw==",
            "cpu": [
                "arm64"
            ],
            "optional": true,
            "os": [
                "win32"
            ],
            "engines": {
                "node": ">= 10"
            }
        },
        "node_modules/@next/swc-win32-ia32-msvc": {
            "version": "14.0.0",
            "resolved": "https://registry.npmjs.org/@next/swc-win32-ia32-msvc/-/swc-win32-ia32-msvc-14.0.0.tgz",
            "integrity": "sha512-RLK1nELvhCnxaWPF07jGU4x3tjbyx2319q43loZELqF0+iJtKutZ+Lk8SVmf/KiJkYBc7Cragadz7hb3uQvz4g==",
            "cpu": [
                "ia32"
            ],
            "optional": true,
            "os": [
                "win32"
            ],
            "engines": {
                "node": ">= 10"
            }
        },
        "node_modules/@next/swc-win32-x64-msvc": {
            "version": "14.0.0",
            "resolved": "https://registry.npmjs.org/@next/swc-win32-x64-msvc/-/swc-win32-x64-msvc-14.0.0.tgz",
            "integrity": "sha512-g6hLf1SUko+hnnaywQQZzzb3BRecQsoKkF3o/C+F+dOA4w/noVAJngUVkfwF0+2/8FzNznM7ofM6TGZO9svn7w==",
            "cpu": [
                "x64"
            ],
            "optional": true,
            "os": [
                "win32"
            ],
            "engines": {
                "node": ">= 10"
            }
        },
        "node_modules/@nodelib/fs.scandir": {
            "version": "2.1.5",
            "resolved": "https://registry.npmjs.org/@nodelib/fs.scandir/-/fs.scandir-2.1.5.tgz",
            "integrity": "sha512-vq24Bq3ym5HEQm2NKCr3yXDwjc7vTsEThRDnkp2DK9p1uqLR+DHurm/NOTo0KG7HYHU7eppKZj3MyqYuMBf62g==",
            "dev": true,
            "dependencies": {
                "@nodelib/fs.stat": "2.0.5",
                "run-parallel": "^1.1.9"
            },
            "engines": {
                "node": ">= 8"
            }
        },
        "node_modules/@nodelib/fs.stat": {
            "version": "2.0.5",
            "resolved": "https://registry.npmjs.org/@nodelib/fs.stat/-/fs.stat-2.0.5.tgz",
            "integrity": "sha512-RkhPPp2zrqDAQA/2jNhnztcPAlv64XdhIp7a7454A5ovI7Bukxgt7MX7udwAu3zg1DcpPU0rz3VV1SeaqvY4+A==",
            "dev": true,
            "engines": {
                "node": ">= 8"
            }
        },
        "node_modules/@nodelib/fs.walk": {
            "version": "1.2.8",
            "resolved": "https://registry.npmjs.org/@nodelib/fs.walk/-/fs.walk-1.2.8.tgz",
            "integrity": "sha512-oGB+UxlgWcgQkgwo8GcEGwemoTFt3FIO9ababBmaGwXIoBKZ+GTy0pP185beGg7Llih/NSHSV2XAs1lnznocSg==",
            "dev": true,
            "dependencies": {
                "@nodelib/fs.scandir": "2.1.5",
                "fastq": "^1.6.0"
            },
            "engines": {
                "node": ">= 8"
            }
        },
        "node_modules/@nolyfill/is-core-module": {
            "version": "1.0.39",
            "resolved": "https://registry.npmjs.org/@nolyfill/is-core-module/-/is-core-module-1.0.39.tgz",
            "integrity": "sha512-nn5ozdjYQpUCZlWGuxcJY/KpxkWQs4DcbMCmKojjyrYDEAGy4Ce19NN4v5MduafTwJlbKc99UA8YhSVqq9yPZA==",
            "dev": true,
            "engines": {
                "node": ">=12.4.0"
            }
        },
        "node_modules/@pkgjs/parseargs": {
            "version": "0.11.0",
            "resolved": "https://registry.npmjs.org/@pkgjs/parseargs/-/parseargs-0.11.0.tgz",
            "integrity": "sha512-+1VkjdD0QBLPodGrJUeqarH8VAIvQODIbwh9XpP5Syisf7YoQgsJKPNFoqqLQlu+VQ/tVSshMR6loPMn8U+dPg==",
            "dev": true,
            "optional": true,
            "engines": {
                "node": ">=14"
            }
        },
        "node_modules/@radix-ui/number": {
            "version": "1.1.1",
            "resolved": "https://registry.npmjs.org/@radix-ui/number/-/number-1.1.1.tgz",
            "integrity": "sha512-MkKCwxlXTgz6CFoJx3pCwn07GKp36+aZyu/u2Ln2VrA5DcdyCZkASEDBTd8x5whTQQL5CiYf4prXKLcgQdv29g=="
        },
        "node_modules/@radix-ui/primitive": {
            "version": "1.1.3",
            "resolved": "https://registry.npmjs.org/@radix-ui/primitive/-/primitive-1.1.3.tgz",
            "integrity": "sha512-JTF99U/6XIjCBo0wqkU5sK10glYe27MRRsfwoiq5zzOEZLHU3A3KCMa5X/azekYRCJ0HlwI0crAXS/5dEHTzDg=="
        },
        "node_modules/@radix-ui/react-alert-dialog": {
            "version": "1.1.15",
            "resolved": "https://registry.npmjs.org/@radix-ui/react-alert-dialog/-/react-alert-dialog-1.1.15.tgz",
            "integrity": "sha512-oTVLkEw5GpdRe29BqJ0LSDFWI3qu0vR1M0mUkOQWDIUnY/QIkLpgDMWuKxP94c2NAC2LGcgVhG1ImF3jkZ5wXw==",
            "dependencies": {
                "@radix-ui/primitive": "1.1.3",
                "@radix-ui/react-compose-refs": "1.1.2",
                "@radix-ui/react-context": "1.1.2",
                "@radix-ui/react-dialog": "1.1.15",
                "@radix-ui/react-primitive": "2.1.3",
                "@radix-ui/react-slot": "1.2.3"
            },
            "peerDependencies": {
                "@types/react": "*",
                "@types/react-dom": "*",
                "react": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc",
                "react-dom": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc"
            },
            "peerDependenciesMeta": {
                "@types/react": {
                    "optional": true
                },
                "@types/react-dom": {
                    "optional": true
                }
            }
        },
        "node_modules/@radix-ui/react-arrow": {
            "version": "1.1.7",
            "resolved": "https://registry.npmjs.org/@radix-ui/react-arrow/-/react-arrow-1.1.7.tgz",
            "integrity": "sha512-F+M1tLhO+mlQaOWspE8Wstg+z6PwxwRd8oQ8IXceWz92kfAmalTRf0EjrouQeo7QssEPfCn05B4Ihs1K9WQ/7w==",
            "dependencies": {
                "@radix-ui/react-primitive": "2.1.3"
            },
            "peerDependencies": {
                "@types/react": "*",
                "@types/react-dom": "*",
                "react": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc",
                "react-dom": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc"
            },
            "peerDependenciesMeta": {
                "@types/react": {
                    "optional": true
                },
                "@types/react-dom": {
                    "optional": true
                }
            }
        },
        "node_modules/@radix-ui/react-checkbox": {
            "version": "1.3.3",
            "resolved": "https://registry.npmjs.org/@radix-ui/react-checkbox/-/react-checkbox-1.3.3.tgz",
            "integrity": "sha512-wBbpv+NQftHDdG86Qc0pIyXk5IR3tM8Vd0nWLKDcX8nNn4nXFOFwsKuqw2okA/1D/mpaAkmuyndrPJTYDNZtFw==",
            "dependencies": {
                "@radix-ui/primitive": "1.1.3",
                "@radix-ui/react-compose-refs": "1.1.2",
                "@radix-ui/react-context": "1.1.2",
                "@radix-ui/react-presence": "1.1.5",
                "@radix-ui/react-primitive": "2.1.3",
                "@radix-ui/react-use-controllable-state": "1.2.2",
                "@radix-ui/react-use-previous": "1.1.1",
                "@radix-ui/react-use-size": "1.1.1"
            },
            "peerDependencies": {
                "@types/react": "*",
                "@types/react-dom": "*",
                "react": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc",
                "react-dom": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc"
            },
            "peerDependenciesMeta": {
                "@types/react": {
                    "optional": true
                },
                "@types/react-dom": {
                    "optional": true
                }
            }
        },
        "node_modules/@radix-ui/react-collection": {
            "version": "1.1.7",
            "resolved": "https://registry.npmjs.org/@radix-ui/react-collection/-/react-collection-1.1.7.tgz",
            "integrity": "sha512-Fh9rGN0MoI4ZFUNyfFVNU4y9LUz93u9/0K+yLgA2bwRojxM8JU1DyvvMBabnZPBgMWREAJvU2jjVzq+LrFUglw==",
            "dependencies": {
                "@radix-ui/react-compose-refs": "1.1.2",
                "@radix-ui/react-context": "1.1.2",
                "@radix-ui/react-primitive": "2.1.3",
                "@radix-ui/react-slot": "1.2.3"
            },
            "peerDependencies": {
                "@types/react": "*",
                "@types/react-dom": "*",
                "react": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc",
                "react-dom": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc"
            },
            "peerDependenciesMeta": {
                "@types/react": {
                    "optional": true
                },
                "@types/react-dom": {
                    "optional": true
                }
            }
        },
        "node_modules/@radix-ui/react-compose-refs": {
            "version": "1.1.2",
            "resolved": "https://registry.npmjs.org/@radix-ui/react-compose-refs/-/react-compose-refs-1.1.2.tgz",
            "integrity": "sha512-z4eqJvfiNnFMHIIvXP3CY57y2WJs5g2v3X0zm9mEJkrkNv4rDxu+sg9Jh8EkXyeqBkB7SOcboo9dMVqhyrACIg==",
            "peerDependencies": {
                "@types/react": "*",
                "react": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc"
            },
            "peerDependenciesMeta": {
                "@types/react": {
                    "optional": true
                }
            }
        },
        "node_modules/@radix-ui/react-context": {
            "version": "1.1.2",
            "resolved": "https://registry.npmjs.org/@radix-ui/react-context/-/react-context-1.1.2.tgz",
            "integrity": "sha512-jCi/QKUM2r1Ju5a3J64TH2A5SpKAgh0LpknyqdQ4m6DCV0xJ2HG1xARRwNGPQfi1SLdLWZ1OJz6F4OMBBNiGJA==",
            "peerDependencies": {
                "@types/react": "*",
                "react": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc"
            },
            "peerDependenciesMeta": {
                "@types/react": {
                    "optional": true
                }
            }
        },
        "node_modules/@radix-ui/react-dialog": {
            "version": "1.1.15",
            "resolved": "https://registry.npmjs.org/@radix-ui/react-dialog/-/react-dialog-1.1.15.tgz",
            "integrity": "sha512-TCglVRtzlffRNxRMEyR36DGBLJpeusFcgMVD9PZEzAKnUs1lKCgX5u9BmC2Yg+LL9MgZDugFFs1Vl+Jp4t/PGw==",
            "dependencies": {
                "@radix-ui/primitive": "1.1.3",
                "@radix-ui/react-compose-refs": "1.1.2",
                "@radix-ui/react-context": "1.1.2",
                "@radix-ui/react-dismissable-layer": "1.1.11",
                "@radix-ui/react-focus-guards": "1.1.3",
                "@radix-ui/react-focus-scope": "1.1.7",
                "@radix-ui/react-id": "1.1.1",
                "@radix-ui/react-portal": "1.1.9",
                "@radix-ui/react-presence": "1.1.5",
                "@radix-ui/react-primitive": "2.1.3",
                "@radix-ui/react-slot": "1.2.3",
                "@radix-ui/react-use-controllable-state": "1.2.2",
                "aria-hidden": "^1.2.4",
                "react-remove-scroll": "^2.6.3"
            },
            "peerDependencies": {
                "@types/react": "*",
                "@types/react-dom": "*",
                "react": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc",
                "react-dom": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc"
            },
            "peerDependenciesMeta": {
                "@types/react": {
                    "optional": true
                },
                "@types/react-dom": {
                    "optional": true
                }
            }
        },
        "node_modules/@radix-ui/react-direction": {
            "version": "1.1.1",
            "resolved": "https://registry.npmjs.org/@radix-ui/react-direction/-/react-direction-1.1.1.tgz",
            "integrity": "sha512-1UEWRX6jnOA2y4H5WczZ44gOOjTEmlqv1uNW4GAJEO5+bauCBhv8snY65Iw5/VOS/ghKN9gr2KjnLKxrsvoMVw==",
            "peerDependencies": {
                "@types/react": "*",
                "react": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc"
            },
            "peerDependenciesMeta": {
                "@types/react": {
                    "optional": true
                }
            }
        },
        "node_modules/@radix-ui/react-dismissable-layer": {
            "version": "1.1.11",
            "resolved": "https://registry.npmjs.org/@radix-ui/react-dismissable-layer/-/react-dismissable-layer-1.1.11.tgz",
            "integrity": "sha512-Nqcp+t5cTB8BinFkZgXiMJniQH0PsUt2k51FUhbdfeKvc4ACcG2uQniY/8+h1Yv6Kza4Q7lD7PQV0z0oicE0Mg==",
            "dependencies": {
                "@radix-ui/primitive": "1.1.3",
                "@radix-ui/react-compose-refs": "1.1.2",
                "@radix-ui/react-primitive": "2.1.3",
                "@radix-ui/react-use-callback-ref": "1.1.1",
                "@radix-ui/react-use-escape-keydown": "1.1.1"
            },
            "peerDependencies": {
                "@types/react": "*",
                "@types/react-dom": "*",
                "react": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc",
                "react-dom": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc"
            },
            "peerDependenciesMeta": {
                "@types/react": {
                    "optional": true
                },
                "@types/react-dom": {
                    "optional": true
                }
            }
        },
        "node_modules/@radix-ui/react-dropdown-menu": {
            "version": "2.1.16",
            "resolved": "https://registry.npmjs.org/@radix-ui/react-dropdown-menu/-/react-dropdown-menu-2.1.16.tgz",
            "integrity": "sha512-1PLGQEynI/3OX/ftV54COn+3Sud/Mn8vALg2rWnBLnRaGtJDduNW/22XjlGgPdpcIbiQxjKtb7BkcjP00nqfJw==",
            "dependencies": {
                "@radix-ui/primitive": "1.1.3",
                "@radix-ui/react-compose-refs": "1.1.2",
                "@radix-ui/react-context": "1.1.2",
                "@radix-ui/react-id": "1.1.1",
                "@radix-ui/react-menu": "2.1.16",
                "@radix-ui/react-primitive": "2.1.3",
                "@radix-ui/react-use-controllable-state": "1.2.2"
            },
            "peerDependencies": {
                "@types/react": "*",
                "@types/react-dom": "*",
                "react": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc",
                "react-dom": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc"
            },
            "peerDependenciesMeta": {
                "@types/react": {
                    "optional": true
                },
                "@types/react-dom": {
                    "optional": true
                }
            }
        },
        "node_modules/@radix-ui/react-focus-guards": {
            "version": "1.1.3",
            "resolved": "https://registry.npmjs.org/@radix-ui/react-focus-guards/-/react-focus-guards-1.1.3.tgz",
            "integrity": "sha512-0rFg/Rj2Q62NCm62jZw0QX7a3sz6QCQU0LpZdNrJX8byRGaGVTqbrW9jAoIAHyMQqsNpeZ81YgSizOt5WXq0Pw==",
            "peerDependencies": {
                "@types/react": "*",
                "react": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc"
            },
            "peerDependenciesMeta": {
                "@types/react": {
                    "optional": true
                }
            }
        },
        "node_modules/@radix-ui/react-focus-scope": {
            "version": "1.1.7",
            "resolved": "https://registry.npmjs.org/@radix-ui/react-focus-scope/-/react-focus-scope-1.1.7.tgz",
            "integrity": "sha512-t2ODlkXBQyn7jkl6TNaw/MtVEVvIGelJDCG41Okq/KwUsJBwQ4XVZsHAVUkK4mBv3ewiAS3PGuUWuY2BoK4ZUw==",
            "dependencies": {
                "@radix-ui/react-compose-refs": "1.1.2",
                "@radix-ui/react-primitive": "2.1.3",
                "@radix-ui/react-use-callback-ref": "1.1.1"
            },
            "peerDependencies": {
                "@types/react": "*",
                "@types/react-dom": "*",
                "react": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc",
                "react-dom": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc"
            },
            "peerDependenciesMeta": {
                "@types/react": {
                    "optional": true
                },
                "@types/react-dom": {
                    "optional": true
                }
            }
        },
        "node_modules/@radix-ui/react-id": {
            "version": "1.1.1",
            "resolved": "https://registry.npmjs.org/@radix-ui/react-id/-/react-id-1.1.1.tgz",
            "integrity": "sha512-kGkGegYIdQsOb4XjsfM97rXsiHaBwco+hFI66oO4s9LU+PLAC5oJ7khdOVFxkhsmlbpUqDAvXw11CluXP+jkHg==",
            "dependencies": {
                "@radix-ui/react-use-layout-effect": "1.1.1"
            },
            "peerDependencies": {
                "@types/react": "*",
                "react": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc"
            },
            "peerDependenciesMeta": {
                "@types/react": {
                    "optional": true
                }
            }
        },
        "node_modules/@radix-ui/react-label": {
            "version": "2.1.7",
            "resolved": "https://registry.npmjs.org/@radix-ui/react-label/-/react-label-2.1.7.tgz",
            "integrity": "sha512-YT1GqPSL8kJn20djelMX7/cTRp/Y9w5IZHvfxQTVHrOqa2yMl7i/UfMqKRU5V7mEyKTrUVgJXhNQPVCG8PBLoQ==",
            "dependencies": {
                "@radix-ui/react-primitive": "2.1.3"
            },
            "peerDependencies": {
                "@types/react": "*",
                "@types/react-dom": "*",
                "react": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc",
                "react-dom": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc"
            },
            "peerDependenciesMeta": {
                "@types/react": {
                    "optional": true
                },
                "@types/react-dom": {
                    "optional": true
                }
            }
        },
        "node_modules/@radix-ui/react-menu": {
            "version": "2.1.16",
            "resolved": "https://registry.npmjs.org/@radix-ui/react-menu/-/react-menu-2.1.16.tgz",
            "integrity": "sha512-72F2T+PLlphrqLcAotYPp0uJMr5SjP5SL01wfEspJbru5Zs5vQaSHb4VB3ZMJPimgHHCHG7gMOeOB9H3Hdmtxg==",
            "dependencies": {
                "@radix-ui/primitive": "1.1.3",
                "@radix-ui/react-collection": "1.1.7",
                "@radix-ui/react-compose-refs": "1.1.2",
                "@radix-ui/react-context": "1.1.2",
                "@radix-ui/react-direction": "1.1.1",
                "@radix-ui/react-dismissable-layer": "1.1.11",
                "@radix-ui/react-focus-guards": "1.1.3",
                "@radix-ui/react-focus-scope": "1.1.7",
                "@radix-ui/react-id": "1.1.1",
                "@radix-ui/react-popper": "1.2.8",
                "@radix-ui/react-portal": "1.1.9",
                "@radix-ui/react-presence": "1.1.5",
                "@radix-ui/react-primitive": "2.1.3",
                "@radix-ui/react-roving-focus": "1.1.11",
                "@radix-ui/react-slot": "1.2.3",
                "@radix-ui/react-use-callback-ref": "1.1.1",
                "aria-hidden": "^1.2.4",
                "react-remove-scroll": "^2.6.3"
            },
            "peerDependencies": {
                "@types/react": "*",
                "@types/react-dom": "*",
                "react": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc",
                "react-dom": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc"
            },
            "peerDependenciesMeta": {
                "@types/react": {
                    "optional": true
                },
                "@types/react-dom": {
                    "optional": true
                }
            }
        },
        "node_modules/@radix-ui/react-popper": {
            "version": "1.2.8",
            "resolved": "https://registry.npmjs.org/@radix-ui/react-popper/-/react-popper-1.2.8.tgz",
            "integrity": "sha512-0NJQ4LFFUuWkE7Oxf0htBKS6zLkkjBH+hM1uk7Ng705ReR8m/uelduy1DBo0PyBXPKVnBA6YBlU94MBGXrSBCw==",
            "dependencies": {
                "@floating-ui/react-dom": "^2.0.0",
                "@radix-ui/react-arrow": "1.1.7",
                "@radix-ui/react-compose-refs": "1.1.2",
                "@radix-ui/react-context": "1.1.2",
                "@radix-ui/react-primitive": "2.1.3",
                "@radix-ui/react-use-callback-ref": "1.1.1",
                "@radix-ui/react-use-layout-effect": "1.1.1",
                "@radix-ui/react-use-rect": "1.1.1",
                "@radix-ui/react-use-size": "1.1.1",
                "@radix-ui/rect": "1.1.1"
            },
            "peerDependencies": {
                "@types/react": "*",
                "@types/react-dom": "*",
                "react": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc",
                "react-dom": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc"
            },
            "peerDependenciesMeta": {
                "@types/react": {
                    "optional": true
                },
                "@types/react-dom": {
                    "optional": true
                }
            }
        },
        "node_modules/@radix-ui/react-portal": {
            "version": "1.1.9",
            "resolved": "https://registry.npmjs.org/@radix-ui/react-portal/-/react-portal-1.1.9.tgz",
            "integrity": "sha512-bpIxvq03if6UNwXZ+HTK71JLh4APvnXntDc6XOX8UVq4XQOVl7lwok0AvIl+b8zgCw3fSaVTZMpAPPagXbKmHQ==",
            "dependencies": {
                "@radix-ui/react-primitive": "2.1.3",
                "@radix-ui/react-use-layout-effect": "1.1.1"
            },
            "peerDependencies": {
                "@types/react": "*",
                "@types/react-dom": "*",
                "react": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc",
                "react-dom": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc"
            },
            "peerDependenciesMeta": {
                "@types/react": {
                    "optional": true
                },
                "@types/react-dom": {
                    "optional": true
                }
            }
        },
        "node_modules/@radix-ui/react-presence": {
            "version": "1.1.5",
            "resolved": "https://registry.npmjs.org/@radix-ui/react-presence/-/react-presence-1.1.5.tgz",
            "integrity": "sha512-/jfEwNDdQVBCNvjkGit4h6pMOzq8bHkopq458dPt2lMjx+eBQUohZNG9A7DtO/O5ukSbxuaNGXMjHicgwy6rQQ==",
            "dependencies": {
                "@radix-ui/react-compose-refs": "1.1.2",
                "@radix-ui/react-use-layout-effect": "1.1.1"
            },
            "peerDependencies": {
                "@types/react": "*",
                "@types/react-dom": "*",
                "react": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc",
                "react-dom": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc"
            },
            "peerDependenciesMeta": {
                "@types/react": {
                    "optional": true
                },
                "@types/react-dom": {
                    "optional": true
                }
            }
        },
        "node_modules/@radix-ui/react-primitive": {
            "version": "2.1.3",
            "resolved": "https://registry.npmjs.org/@radix-ui/react-primitive/-/react-primitive-2.1.3.tgz",
            "integrity": "sha512-m9gTwRkhy2lvCPe6QJp4d3G1TYEUHn/FzJUtq9MjH46an1wJU+GdoGC5VLof8RX8Ft/DlpshApkhswDLZzHIcQ==",
            "dependencies": {
                "@radix-ui/react-slot": "1.2.3"
            },
            "peerDependencies": {
                "@types/react": "*",
                "@types/react-dom": "*",
                "react": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc",
                "react-dom": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc"
            },
            "peerDependenciesMeta": {
                "@types/react": {
                    "optional": true
                },
                "@types/react-dom": {
                    "optional": true
                }
            }
        },
        "node_modules/@radix-ui/react-progress": {
            "version": "1.1.7",
            "resolved": "https://registry.npmjs.org/@radix-ui/react-progress/-/react-progress-1.1.7.tgz",
            "integrity": "sha512-vPdg/tF6YC/ynuBIJlk1mm7Le0VgW6ub6J2UWnTQ7/D23KXcPI1qy+0vBkgKgd38RCMJavBXpB83HPNFMTb0Fg==",
            "dependencies": {
                "@radix-ui/react-context": "1.1.2",
                "@radix-ui/react-primitive": "2.1.3"
            },
            "peerDependencies": {
                "@types/react": "*",
                "@types/react-dom": "*",
                "react": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc",
                "react-dom": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc"
            },
            "peerDependenciesMeta": {
                "@types/react": {
                    "optional": true
                },
                "@types/react-dom": {
                    "optional": true
                }
            }
        },
        "node_modules/@radix-ui/react-roving-focus": {
            "version": "1.1.11",
            "resolved": "https://registry.npmjs.org/@radix-ui/react-roving-focus/-/react-roving-focus-1.1.11.tgz",
            "integrity": "sha512-7A6S9jSgm/S+7MdtNDSb+IU859vQqJ/QAtcYQcfFC6W8RS4IxIZDldLR0xqCFZ6DCyrQLjLPsxtTNch5jVA4lA==",
            "dependencies": {
                "@radix-ui/primitive": "1.1.3",
                "@radix-ui/react-collection": "1.1.7",
                "@radix-ui/react-compose-refs": "1.1.2",
                "@radix-ui/react-context": "1.1.2",
                "@radix-ui/react-direction": "1.1.1",
                "@radix-ui/react-id": "1.1.1",
                "@radix-ui/react-primitive": "2.1.3",
                "@radix-ui/react-use-callback-ref": "1.1.1",
                "@radix-ui/react-use-controllable-state": "1.2.2"
            },
            "peerDependencies": {
                "@types/react": "*",
                "@types/react-dom": "*",
                "react": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc",
                "react-dom": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc"
            },
            "peerDependenciesMeta": {
                "@types/react": {
                    "optional": true
                },
                "@types/react-dom": {
                    "optional": true
                }
            }
        },
        "node_modules/@radix-ui/react-select": {
            "version": "2.2.6",
            "resolved": "https://registry.npmjs.org/@radix-ui/react-select/-/react-select-2.2.6.tgz",
            "integrity": "sha512-I30RydO+bnn2PQztvo25tswPH+wFBjehVGtmagkU78yMdwTwVf12wnAOF+AeP8S2N8xD+5UPbGhkUfPyvT+mwQ==",
            "dependencies": {
                "@radix-ui/number": "1.1.1",
                "@radix-ui/primitive": "1.1.3",
                "@radix-ui/react-collection": "1.1.7",
                "@radix-ui/react-compose-refs": "1.1.2",
                "@radix-ui/react-context": "1.1.2",
                "@radix-ui/react-direction": "1.1.1",
                "@radix-ui/react-dismissable-layer": "1.1.11",
                "@radix-ui/react-focus-guards": "1.1.3",
                "@radix-ui/react-focus-scope": "1.1.7",
                "@radix-ui/react-id": "1.1.1",
                "@radix-ui/react-popper": "1.2.8",
                "@radix-ui/react-portal": "1.1.9",
                "@radix-ui/react-primitive": "2.1.3",
                "@radix-ui/react-slot": "1.2.3",
                "@radix-ui/react-use-callback-ref": "1.1.1",
                "@radix-ui/react-use-controllable-state": "1.2.2",
                "@radix-ui/react-use-layout-effect": "1.1.1",
                "@radix-ui/react-use-previous": "1.1.1",
                "@radix-ui/react-visually-hidden": "1.2.3",
                "aria-hidden": "^1.2.4",
                "react-remove-scroll": "^2.6.3"
            },
            "peerDependencies": {
                "@types/react": "*",
                "@types/react-dom": "*",
                "react": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc",
                "react-dom": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc"
            },
            "peerDependenciesMeta": {
                "@types/react": {
                    "optional": true
                },
                "@types/react-dom": {
                    "optional": true
                }
            }
        },
        "node_modules/@radix-ui/react-slot": {
            "version": "1.2.3",
            "resolved": "https://registry.npmjs.org/@radix-ui/react-slot/-/react-slot-1.2.3.tgz",
            "integrity": "sha512-aeNmHnBxbi2St0au6VBVC7JXFlhLlOnvIIlePNniyUNAClzmtAUEY8/pBiK3iHjufOlwA+c20/8jngo7xcrg8A==",
            "dependencies": {
                "@radix-ui/react-compose-refs": "1.1.2"
            },
            "peerDependencies": {
                "@types/react": "*",
                "react": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc"
            },
            "peerDependenciesMeta": {
                "@types/react": {
                    "optional": true
                }
            }
        },
        "node_modules/@radix-ui/react-switch": {
            "version": "1.2.6",
            "resolved": "https://registry.npmjs.org/@radix-ui/react-switch/-/react-switch-1.2.6.tgz",
            "integrity": "sha512-bByzr1+ep1zk4VubeEVViV592vu2lHE2BZY5OnzehZqOOgogN80+mNtCqPkhn2gklJqOpxWgPoYTSnhBCqpOXQ==",
            "dependencies": {
                "@radix-ui/primitive": "1.1.3",
                "@radix-ui/react-compose-refs": "1.1.2",
                "@radix-ui/react-context": "1.1.2",
                "@radix-ui/react-primitive": "2.1.3",
                "@radix-ui/react-use-controllable-state": "1.2.2",
                "@radix-ui/react-use-previous": "1.1.1",
                "@radix-ui/react-use-size": "1.1.1"
            },
            "peerDependencies": {
                "@types/react": "*",
                "@types/react-dom": "*",
                "react": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc",
                "react-dom": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc"
            },
            "peerDependenciesMeta": {
                "@types/react": {
                    "optional": true
                },
                "@types/react-dom": {
                    "optional": true
                }
            }
        },
        "node_modules/@radix-ui/react-tabs": {
            "version": "1.1.13",
            "resolved": "https://registry.npmjs.org/@radix-ui/react-tabs/-/react-tabs-1.1.13.tgz",
            "integrity": "sha512-7xdcatg7/U+7+Udyoj2zodtI9H/IIopqo+YOIcZOq1nJwXWBZ9p8xiu5llXlekDbZkca79a/fozEYQXIA4sW6A==",
            "dependencies": {
                "@radix-ui/primitive": "1.1.3",
                "@radix-ui/react-context": "1.1.2",
                "@radix-ui/react-direction": "1.1.1",
                "@radix-ui/react-id": "1.1.1",
                "@radix-ui/react-presence": "1.1.5",
                "@radix-ui/react-primitive": "2.1.3",
                "@radix-ui/react-roving-focus": "1.1.11",
                "@radix-ui/react-use-controllable-state": "1.2.2"
            },
            "peerDependencies": {
                "@types/react": "*",
                "@types/react-dom": "*",
                "react": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc",
                "react-dom": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc"
            },
            "peerDependenciesMeta": {
                "@types/react": {
                    "optional": true
                },
                "@types/react-dom": {
                    "optional": true
                }
            }
        },
        "node_modules/@radix-ui/react-toast": {
            "version": "1.2.15",
            "resolved": "https://registry.npmjs.org/@radix-ui/react-toast/-/react-toast-1.2.15.tgz",
            "integrity": "sha512-3OSz3TacUWy4WtOXV38DggwxoqJK4+eDkNMl5Z/MJZaoUPaP4/9lf81xXMe1I2ReTAptverZUpbPY4wWwWyL5g==",
            "dependencies": {
                "@radix-ui/primitive": "1.1.3",
                "@radix-ui/react-collection": "1.1.7",
                "@radix-ui/react-compose-refs": "1.1.2",
                "@radix-ui/react-context": "1.1.2",
                "@radix-ui/react-dismissable-layer": "1.1.11",
                "@radix-ui/react-portal": "1.1.9",
                "@radix-ui/react-presence": "1.1.5",
                "@radix-ui/react-primitive": "2.1.3",
                "@radix-ui/react-use-callback-ref": "1.1.1",
                "@radix-ui/react-use-controllable-state": "1.2.2",
                "@radix-ui/react-use-layout-effect": "1.1.1",
                "@radix-ui/react-visually-hidden": "1.2.3"
            },
            "peerDependencies": {
                "@types/react": "*",
                "@types/react-dom": "*",
                "react": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc",
                "react-dom": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc"
            },
            "peerDependenciesMeta": {
                "@types/react": {
                    "optional": true
                },
                "@types/react-dom": {
                    "optional": true
                }
            }
        },
        "node_modules/@radix-ui/react-tooltip": {
            "version": "1.2.8",
            "resolved": "https://registry.npmjs.org/@radix-ui/react-tooltip/-/react-tooltip-1.2.8.tgz",
            "integrity": "sha512-tY7sVt1yL9ozIxvmbtN5qtmH2krXcBCfjEiCgKGLqunJHvgvZG2Pcl2oQ3kbcZARb1BGEHdkLzcYGO8ynVlieg==",
            "dependencies": {
                "@radix-ui/primitive": "1.1.3",
                "@radix-ui/react-compose-refs": "1.1.2",
                "@radix-ui/react-context": "1.1.2",
                "@radix-ui/react-dismissable-layer": "1.1.11",
                "@radix-ui/react-id": "1.1.1",
                "@radix-ui/react-popper": "1.2.8",
                "@radix-ui/react-portal": "1.1.9",
                "@radix-ui/react-presence": "1.1.5",
                "@radix-ui/react-primitive": "2.1.3",
                "@radix-ui/react-slot": "1.2.3",
                "@radix-ui/react-use-controllable-state": "1.2.2",
                "@radix-ui/react-visually-hidden": "1.2.3"
            },
            "peerDependencies": {
                "@types/react": "*",
                "@types/react-dom": "*",
                "react": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc",
                "react-dom": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc"
            },
            "peerDependenciesMeta": {
                "@types/react": {
                    "optional": true
                },
                "@types/react-dom": {
                    "optional": true
                }
            }
        },
        "node_modules/@radix-ui/react-use-callback-ref": {
            "version": "1.1.1",
            "resolved": "https://registry.npmjs.org/@radix-ui/react-use-callback-ref/-/react-use-callback-ref-1.1.1.tgz",
            "integrity": "sha512-FkBMwD+qbGQeMu1cOHnuGB6x4yzPjho8ap5WtbEJ26umhgqVXbhekKUQO+hZEL1vU92a3wHwdp0HAcqAUF5iDg==",
            "peerDependencies": {
                "@types/react": "*",
                "react": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc"
            },
            "peerDependenciesMeta": {
                "@types/react": {
                    "optional": true
                }
            }
        },
        "node_modules/@radix-ui/react-use-controllable-state": {
            "version": "1.2.2",
            "resolved": "https://registry.npmjs.org/@radix-ui/react-use-controllable-state/-/react-use-controllable-state-1.2.2.tgz",
            "integrity": "sha512-BjasUjixPFdS+NKkypcyyN5Pmg83Olst0+c6vGov0diwTEo6mgdqVR6hxcEgFuh4QrAs7Rc+9KuGJ9TVCj0Zzg==",
            "dependencies": {
                "@radix-ui/react-use-effect-event": "0.0.2",
                "@radix-ui/react-use-layout-effect": "1.1.1"
            },
            "peerDependencies": {
                "@types/react": "*",
                "react": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc"
            },
            "peerDependenciesMeta": {
                "@types/react": {
                    "optional": true
                }
            }
        },
        "node_modules/@radix-ui/react-use-effect-event": {
            "version": "0.0.2",
            "resolved": "https://registry.npmjs.org/@radix-ui/react-use-effect-event/-/react-use-effect-event-0.0.2.tgz",
            "integrity": "sha512-Qp8WbZOBe+blgpuUT+lw2xheLP8q0oatc9UpmiemEICxGvFLYmHm9QowVZGHtJlGbS6A6yJ3iViad/2cVjnOiA==",
            "dependencies": {
                "@radix-ui/react-use-layout-effect": "1.1.1"
            },
            "peerDependencies": {
                "@types/react": "*",
                "react": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc"
            },
            "peerDependenciesMeta": {
                "@types/react": {
                    "optional": true
                }
            }
        },
        "node_modules/@radix-ui/react-use-escape-keydown": {
            "version": "1.1.1",
            "resolved": "https://registry.npmjs.org/@radix-ui/react-use-escape-keydown/-/react-use-escape-keydown-1.1.1.tgz",
            "integrity": "sha512-Il0+boE7w/XebUHyBjroE+DbByORGR9KKmITzbR7MyQ4akpORYP/ZmbhAr0DG7RmmBqoOnZdy2QlvajJ2QA59g==",
            "dependencies": {
                "@radix-ui/react-use-callback-ref": "1.1.1"
            },
            "peerDependencies": {
                "@types/react": "*",
                "react": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc"
            },
            "peerDependenciesMeta": {
                "@types/react": {
                    "optional": true
                }
            }
        },
        "node_modules/@radix-ui/react-use-layout-effect": {
            "version": "1.1.1",
            "resolved": "https://registry.npmjs.org/@radix-ui/react-use-layout-effect/-/react-use-layout-effect-1.1.1.tgz",
            "integrity": "sha512-RbJRS4UWQFkzHTTwVymMTUv8EqYhOp8dOOviLj2ugtTiXRaRQS7GLGxZTLL1jWhMeoSCf5zmcZkqTl9IiYfXcQ==",
            "peerDependencies": {
                "@types/react": "*",
                "react": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc"
            },
            "peerDependenciesMeta": {
                "@types/react": {
                    "optional": true
                }
            }
        },
        "node_modules/@radix-ui/react-use-previous": {
            "version": "1.1.1",
            "resolved": "https://registry.npmjs.org/@radix-ui/react-use-previous/-/react-use-previous-1.1.1.tgz",
            "integrity": "sha512-2dHfToCj/pzca2Ck724OZ5L0EVrr3eHRNsG/b3xQJLA2hZpVCS99bLAX+hm1IHXDEnzU6by5z/5MIY794/a8NQ==",
            "peerDependencies": {
                "@types/react": "*",
                "react": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc"
            },
            "peerDependenciesMeta": {
                "@types/react": {
                    "optional": true
                }
            }
        },
        "node_modules/@radix-ui/react-use-rect": {
            "version": "1.1.1",
            "resolved": "https://registry.npmjs.org/@radix-ui/react-use-rect/-/react-use-rect-1.1.1.tgz",
            "integrity": "sha512-QTYuDesS0VtuHNNvMh+CjlKJ4LJickCMUAqjlE3+j8w+RlRpwyX3apEQKGFzbZGdo7XNG1tXa+bQqIE7HIXT2w==",
            "dependencies": {
                "@radix-ui/rect": "1.1.1"
            },
            "peerDependencies": {
                "@types/react": "*",
                "react": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc"
            },
            "peerDependenciesMeta": {
                "@types/react": {
                    "optional": true
                }
            }
        },
        "node_modules/@radix-ui/react-use-size": {
            "version": "1.1.1",
            "resolved": "https://registry.npmjs.org/@radix-ui/react-use-size/-/react-use-size-1.1.1.tgz",
            "integrity": "sha512-ewrXRDTAqAXlkl6t/fkXWNAhFX9I+CkKlw6zjEwk86RSPKwZr3xpBRso655aqYafwtnbpHLj6toFzmd6xdVptQ==",
            "dependencies": {
                "@radix-ui/react-use-layout-effect": "1.1.1"
            },
            "peerDependencies": {
                "@types/react": "*",
                "react": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc"
            },
            "peerDependenciesMeta": {
                "@types/react": {
                    "optional": true
                }
            }
        },
        "node_modules/@radix-ui/react-visually-hidden": {
            "version": "1.2.3",
            "resolved": "https://registry.npmjs.org/@radix-ui/react-visually-hidden/-/react-visually-hidden-1.2.3.tgz",
            "integrity": "sha512-pzJq12tEaaIhqjbzpCuv/OypJY/BPavOofm+dbab+MHLajy277+1lLm6JFcGgF5eskJ6mquGirhXY2GD/8u8Ug==",
            "dependencies": {
                "@radix-ui/react-primitive": "2.1.3"
            },
            "peerDependencies": {
                "@types/react": "*",
                "@types/react-dom": "*",
                "react": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc",
                "react-dom": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc"
            },
            "peerDependenciesMeta": {
                "@types/react": {
                    "optional": true
                },
                "@types/react-dom": {
                    "optional": true
                }
            }
        },
        "node_modules/@radix-ui/rect": {
            "version": "1.1.1",
            "resolved": "https://registry.npmjs.org/@radix-ui/rect/-/rect-1.1.1.tgz",
            "integrity": "sha512-HPwpGIzkl28mWyZqG52jiqDJ12waP11Pa1lGoiyUkIEuMLBP0oeK/C89esbXrxsky5we7dfd8U58nm0SgAWpVw=="
        },
        "node_modules/@rtsao/scc": {
            "version": "1.1.0",
            "resolved": "https://registry.npmjs.org/@rtsao/scc/-/scc-1.1.0.tgz",
            "integrity": "sha512-zt6OdqaDoOnJ1ZYsCYGt9YmWzDXl4vQdKTyJev62gFhRGKdx7mcT54V9KIjg+d2wi9EXsPvAPKe7i7WjfVWB8g==",
            "dev": true
        },
        "node_modules/@rushstack/eslint-patch": {
            "version": "1.12.0",
            "resolved": "https://registry.npmjs.org/@rushstack/eslint-patch/-/eslint-patch-1.12.0.tgz",
            "integrity": "sha512-5EwMtOqvJMMa3HbmxLlF74e+3/HhwBTMcvt3nqVJgGCozO6hzIPOBlwm8mGVNR9SN2IJpxSnlxczyDjcn7qIyw==",
            "dev": true
        },
        "node_modules/@swc/helpers": {
            "version": "0.5.2",
            "resolved": "https://registry.npmjs.org/@swc/helpers/-/helpers-0.5.2.tgz",
            "integrity": "sha512-E4KcWTpoLHqwPHLxidpOqQbcrZVgi0rsmmZXUle1jXmJfuIf/UWpczUJ7MZZ5tlxytgJXyp0w4PGkkeLiuIdZw==",
            "dependencies": {
                "tslib": "^2.4.0"
            }
        },
        "node_modules/@tanstack/query-core": {
            "version": "4.40.0",
            "resolved": "https://registry.npmjs.org/@tanstack/query-core/-/query-core-4.40.0.tgz",
            "integrity": "sha512-7MJTtZkCSuehMC7IxMOCGsLvHS3jHx4WjveSrGsG1Nc1UQLjaFwwkpLA2LmPfvOAxnH4mszMOBFD6LlZE+aB+Q==",
            "funding": {
                "type": "github",
                "url": "https://github.com/sponsors/tannerlinsley"
            }
        },
        "node_modules/@tanstack/react-query": {
            "version": "4.40.1",
            "resolved": "https://registry.npmjs.org/@tanstack/react-query/-/react-query-4.40.1.tgz",
            "integrity": "sha512-mgD07S5N8e5v81CArKDWrHE4LM7HxZ9k/KLeD3+NUD9WimGZgKIqojUZf/rXkfAMYZU9p0Chzj2jOXm7xpgHHQ==",
            "dependencies": {
                "@tanstack/query-core": "4.40.0",
                "use-sync-external-store": "^1.2.0"
            },
            "funding": {
                "type": "github",
                "url": "https://github.com/sponsors/tannerlinsley"
            },
            "peerDependencies": {
                "react": "^16.8.0 || ^17.0.0 || ^18.0.0",
                "react-dom": "^16.8.0 || ^17.0.0 || ^18.0.0",
                "react-native": "*"
            },
            "peerDependenciesMeta": {
                "react-dom": {
                    "optional": true
                },
                "react-native": {
                    "optional": true
                }
            }
        },
        "node_modules/@tybys/wasm-util": {
            "version": "0.10.0",
            "resolved": "https://registry.npmjs.org/@tybys/wasm-util/-/wasm-util-0.10.0.tgz",
            "integrity": "sha512-VyyPYFlOMNylG45GoAe0xDoLwWuowvf92F9kySqzYh8vmYm7D2u4iUJKa1tOUpS70Ku13ASrOkS4ScXFsTaCNQ==",
            "dev": true,
            "optional": true,
            "dependencies": {
                "tslib": "^2.4.0"
            }
        },
        "node_modules/@types/bcryptjs": {
            "version": "3.0.0",
            "resolved": "https://registry.npmjs.org/@types/bcryptjs/-/bcryptjs-3.0.0.tgz",
            "integrity": "sha512-WRZOuCuaz8UcZZE4R5HXTco2goQSI2XxjGY3hbM/xDvwmqFWd4ivooImsMx65OKM6CtNKbnZ5YL+YwAwK7c1dg==",
            "deprecated": "This is a stub types definition. bcryptjs provides its own type definitions, so you do not need this installed.",
            "dev": true,
            "dependencies": {
                "bcryptjs": "*"
            }
        },
        "node_modules/@types/d3-array": {
            "version": "3.2.1",
            "resolved": "https://registry.npmjs.org/@types/d3-array/-/d3-array-3.2.1.tgz",
            "integrity": "sha512-Y2Jn2idRrLzUfAKV2LyRImR+y4oa2AntrgID95SHJxuMUrkNXmanDSed71sRNZysveJVt1hLLemQZIady0FpEg=="
        },
        "node_modules/@types/d3-color": {
            "version": "3.1.3",
            "resolved": "https://registry.npmjs.org/@types/d3-color/-/d3-color-3.1.3.tgz",
            "integrity": "sha512-iO90scth9WAbmgv7ogoq57O9YpKmFBbmoEoCHDB2xMBY0+/KVrqAaCDyCE16dUspeOvIxFFRI+0sEtqDqy2b4A=="
        },
        "node_modules/@types/d3-ease": {
            "version": "3.0.2",
            "resolved": "https://registry.npmjs.org/@types/d3-ease/-/d3-ease-3.0.2.tgz",
            "integrity": "sha512-NcV1JjO5oDzoK26oMzbILE6HW7uVXOHLQvHshBUW4UMdZGfiY6v5BeQwh9a9tCzv+CeefZQHJt5SRgK154RtiA=="
        },
        "node_modules/@types/d3-interpolate": {
            "version": "3.0.4",
            "resolved": "https://registry.npmjs.org/@types/d3-interpolate/-/d3-interpolate-3.0.4.tgz",
            "integrity": "sha512-mgLPETlrpVV1YRJIglr4Ez47g7Yxjl1lj7YKsiMCb27VJH9W8NVM6Bb9d8kkpG/uAQS5AmbA48q2IAolKKo1MA==",
            "dependencies": {
                "@types/d3-color": "*"
            }
        },
        "node_modules/@types/d3-path": {
            "version": "3.1.1",
            "resolved": "https://registry.npmjs.org/@types/d3-path/-/d3-path-3.1.1.tgz",
            "integrity": "sha512-VMZBYyQvbGmWyWVea0EHs/BwLgxc+MKi1zLDCONksozI4YJMcTt8ZEuIR4Sb1MMTE8MMW49v0IwI5+b7RmfWlg=="
        },
        "node_modules/@types/d3-scale": {
            "version": "4.0.9",
            "resolved": "https://registry.npmjs.org/@types/d3-scale/-/d3-scale-4.0.9.tgz",
            "integrity": "sha512-dLmtwB8zkAeO/juAMfnV+sItKjlsw2lKdZVVy6LRr0cBmegxSABiLEpGVmSJJ8O08i4+sGR6qQtb6WtuwJdvVw==",
            "dependencies": {
                "@types/d3-time": "*"
            }
        },
        "node_modules/@types/d3-shape": {
            "version": "3.1.7",
            "resolved": "https://registry.npmjs.org/@types/d3-shape/-/d3-shape-3.1.7.tgz",
            "integrity": "sha512-VLvUQ33C+3J+8p+Daf+nYSOsjB4GXp19/S/aGo60m9h1v6XaxjiT82lKVWJCfzhtuZ3yD7i/TPeC/fuKLLOSmg==",
            "dependencies": {
                "@types/d3-path": "*"
            }
        },
        "node_modules/@types/d3-time": {
            "version": "3.0.4",
            "resolved": "https://registry.npmjs.org/@types/d3-time/-/d3-time-3.0.4.tgz",
            "integrity": "sha512-yuzZug1nkAAaBlBBikKZTgzCeA+k1uy4ZFwWANOfKw5z5LRhV0gNA7gNkKm7HoK+HRN0wX3EkxGk0fpbWhmB7g=="
        },
        "node_modules/@types/d3-timer": {
            "version": "3.0.2",
            "resolved": "https://registry.npmjs.org/@types/d3-timer/-/d3-timer-3.0.2.tgz",
            "integrity": "sha512-Ps3T8E8dZDam6fUyNiMkekK3XUsaUEik+idO9/YjPtfj2qruF8tFBXS7XhtE4iIXBLxhmLjP3SXpLhVf21I9Lw=="
        },
        "node_modules/@types/json5": {
            "version": "0.0.29",
            "resolved": "https://registry.npmjs.org/@types/json5/-/json5-0.0.29.tgz",
            "integrity": "sha512-dRLjCWHYg4oaA77cxO64oO+7JwCwnIzkZPdrrC71jQmQtlhM556pwKo5bUzqvZndkVbeFLIIi+9TC40JNF5hNQ==",
            "dev": true
        },
        "node_modules/@types/node": {
            "version": "20.19.13",
            "resolved": "https://registry.npmjs.org/@types/node/-/node-20.19.13.tgz",
            "integrity": "sha512-yCAeZl7a0DxgNVteXFHt9+uyFbqXGy/ShC4BlcHkoE0AfGXYv/BUiplV72DjMYXHDBXFjhvr6DD1NiRVfB4j8g==",
            "dependencies": {
                "undici-types": "~6.21.0"
            }
        },
        "node_modules/@types/pg": {
            "version": "8.15.5",
            "resolved": "https://registry.npmjs.org/@types/pg/-/pg-8.15.5.tgz",
            "integrity": "sha512-LF7lF6zWEKxuT3/OR8wAZGzkg4ENGXFNyiV/JeOt9z5B+0ZVwbql9McqX5c/WStFq1GaGso7H1AzP/qSzmlCKQ==",
            "dependencies": {
                "@types/node": "*",
                "pg-protocol": "*",
                "pg-types": "^2.2.0"
            }
        },
        "node_modules/@types/prop-types": {
            "version": "15.7.15",
            "resolved": "https://registry.npmjs.org/@types/prop-types/-/prop-types-15.7.15.tgz",
            "integrity": "sha512-F6bEyamV9jKGAFBEmlQnesRPGOQqS2+Uwi0Em15xenOxHaf2hv6L8YCVn3rPdPJOiJfPiCnLIRyvwVaqMY3MIw==",
            "devOptional": true
        },
        "node_modules/@types/react": {
            "version": "18.3.24",
            "resolved": "https://registry.npmjs.org/@types/react/-/react-18.3.24.tgz",
            "integrity": "sha512-0dLEBsA1kI3OezMBF8nSsb7Nk19ZnsyE1LLhB8r27KbgU5H4pvuqZLdtE+aUkJVoXgTVuA+iLIwmZ0TuK4tx6A==",
            "devOptional": true,
            "dependencies": {
                "@types/prop-types": "*",
                "csstype": "^3.0.2"
            }
        },
        "node_modules/@types/react-dom": {
            "version": "18.3.7",
            "resolved": "https://registry.npmjs.org/@types/react-dom/-/react-dom-18.3.7.tgz",
            "integrity": "sha512-MEe3UeoENYVFXzoXEWsvcpg6ZvlrFNlOQ7EOsvhI3CfAXwzPfO8Qwuxd40nepsYKqyyVQnTdEfv68q91yLcKrQ==",
            "devOptional": true,
            "peerDependencies": {
                "@types/react": "^18.0.0"
            }
        },
        "node_modules/@types/uuid": {
            "version": "10.0.0",
            "resolved": "https://registry.npmjs.org/@types/uuid/-/uuid-10.0.0.tgz",
            "integrity": "sha512-7gqG38EyHgyP1S+7+xomFtL+ZNHcKv6DwNaCZmJmo1vgMugyF3TCnXVg4t1uk89mLNwnLtnY3TpOpCOyp1/xHQ=="
        },
        "node_modules/@typescript-eslint/parser": {
            "version": "6.21.0",
            "resolved": "https://registry.npmjs.org/@typescript-eslint/parser/-/parser-6.21.0.tgz",
            "integrity": "sha512-tbsV1jPne5CkFQCgPBcDOt30ItF7aJoZL997JSF7MhGQqOeT3svWRYxiqlfA5RUdlHN6Fi+EI9bxqbdyAUZjYQ==",
            "dev": true,
            "dependencies": {
                "@typescript-eslint/scope-manager": "6.21.0",
                "@typescript-eslint/types": "6.21.0",
                "@typescript-eslint/typescript-estree": "6.21.0",
                "@typescript-eslint/visitor-keys": "6.21.0",
                "debug": "^4.3.4"
            },
            "engines": {
                "node": "^16.0.0 || >=18.0.0"
            },
            "funding": {
                "type": "opencollective",
                "url": "https://opencollective.com/typescript-eslint"
            },
            "peerDependencies": {
                "eslint": "^7.0.0 || ^8.0.0"
            },
            "peerDependenciesMeta": {
                "typescript": {
                    "optional": true
                }
            }
        },
        "node_modules/@typescript-eslint/scope-manager": {
            "version": "6.21.0",
            "resolved": "https://registry.npmjs.org/@typescript-eslint/scope-manager/-/scope-manager-6.21.0.tgz",
            "integrity": "sha512-OwLUIWZJry80O99zvqXVEioyniJMa+d2GrqpUTqi5/v5D5rOrppJVBPa0yKCblcigC0/aYAzxxqQ1B+DS2RYsg==",
            "dev": true,
            "dependencies": {
                "@typescript-eslint/types": "6.21.0",
                "@typescript-eslint/visitor-keys": "6.21.0"
            },
            "engines": {
                "node": "^16.0.0 || >=18.0.0"
            },
            "funding": {
                "type": "opencollective",
                "url": "https://opencollective.com/typescript-eslint"
            }
        },
        "node_modules/@typescript-eslint/types": {
            "version": "6.21.0",
            "resolved": "https://registry.npmjs.org/@typescript-eslint/types/-/types-6.21.0.tgz",
            "integrity": "sha512-1kFmZ1rOm5epu9NZEZm1kckCDGj5UJEf7P1kliH4LKu/RkwpsfqqGmY2OOcUs18lSlQBKLDYBOGxRVtrMN5lpg==",
            "dev": true,
            "engines": {
                "node": "^16.0.0 || >=18.0.0"
            },
            "funding": {
                "type": "opencollective",
                "url": "https://opencollective.com/typescript-eslint"
            }
        },
        "node_modules/@typescript-eslint/typescript-estree": {
            "version": "6.21.0",
            "resolved": "https://registry.npmjs.org/@typescript-eslint/typescript-estree/-/typescript-estree-6.21.0.tgz",
            "integrity": "sha512-6npJTkZcO+y2/kr+z0hc4HwNfrrP4kNYh57ek7yCNlrBjWQ1Y0OS7jiZTkgumrvkX5HkEKXFZkkdFNkaW2wmUQ==",
            "dev": true,
            "dependencies": {
                "@typescript-eslint/types": "6.21.0",
                "@typescript-eslint/visitor-keys": "6.21.0",
                "debug": "^4.3.4",
                "globby": "^11.1.0",
                "is-glob": "^4.0.3",
                "minimatch": "9.0.3",
                "semver": "^7.5.4",
                "ts-api-utils": "^1.0.1"
            },
            "engines": {
                "node": "^16.0.0 || >=18.0.0"
            },
            "funding": {
                "type": "opencollective",
                "url": "https://opencollective.com/typescript-eslint"
            },
            "peerDependenciesMeta": {
                "typescript": {
                    "optional": true
                }
            }
        },
        "node_modules/@typescript-eslint/typescript-estree/node_modules/brace-expansion": {
            "version": "2.0.2",
            "resolved": "https://registry.npmjs.org/brace-expansion/-/brace-expansion-2.0.2.tgz",
            "integrity": "sha512-Jt0vHyM+jmUBqojB7E1NIYadt0vI0Qxjxd2TErW94wDz+E2LAm5vKMXXwg6ZZBTHPuUlDgQHKXvjGBdfcF1ZDQ==",
            "dev": true,
            "dependencies": {
                "balanced-match": "^1.0.0"
            }
        },
        "node_modules/@typescript-eslint/typescript-estree/node_modules/minimatch": {
            "version": "9.0.3",
            "resolved": "https://registry.npmjs.org/minimatch/-/minimatch-9.0.3.tgz",
            "integrity": "sha512-RHiac9mvaRw0x3AYRgDC1CxAP7HTcNrrECeA8YYJeWnpo+2Q5CegtZjaotWTWxDG3UeGA1coE05iH1mPjT/2mg==",
            "dev": true,
            "dependencies": {
                "brace-expansion": "^2.0.1"
            },
            "engines": {
                "node": ">=16 || 14 >=14.17"
            },
            "funding": {
                "url": "https://github.com/sponsors/isaacs"
            }
        },
        "node_modules/@typescript-eslint/visitor-keys": {
            "version": "6.21.0",
            "resolved": "https://registry.npmjs.org/@typescript-eslint/visitor-keys/-/visitor-keys-6.21.0.tgz",
            "integrity": "sha512-JJtkDduxLi9bivAB+cYOVMtbkqdPOhZ+ZI5LC47MIRrDV4Yn2o+ZnW10Nkmr28xRpSpdJ6Sm42Hjf2+REYXm0A==",
            "dev": true,
            "dependencies": {
                "@typescript-eslint/types": "6.21.0",
                "eslint-visitor-keys": "^3.4.1"
            },
            "engines": {
                "node": "^16.0.0 || >=18.0.0"
            },
            "funding": {
                "type": "opencollective",
                "url": "https://opencollective.com/typescript-eslint"
            }
        },
        "node_modules/@ungap/structured-clone": {
            "version": "1.3.0",
            "resolved": "https://registry.npmjs.org/@ungap/structured-clone/-/structured-clone-1.3.0.tgz",
            "integrity": "sha512-WmoN8qaIAo7WTYWbAZuG8PYEhn5fkz7dZrqTBZ7dtt//lL2Gwms1IcnQ5yHqjDfX8Ft5j4YzDM23f87zBfDe9g==",
            "dev": true
        },
        "node_modules/@unrs/resolver-binding-android-arm-eabi": {
            "version": "1.11.1",
            "resolved": "https://registry.npmjs.org/@unrs/resolver-binding-android-arm-eabi/-/resolver-binding-android-arm-eabi-1.11.1.tgz",
            "integrity": "sha512-ppLRUgHVaGRWUx0R0Ut06Mjo9gBaBkg3v/8AxusGLhsIotbBLuRk51rAzqLC8gq6NyyAojEXglNjzf6R948DNw==",
            "cpu": [
                "arm"
            ],
            "dev": true,
            "optional": true,
            "os": [
                "android"
            ]
        },
        "node_modules/@unrs/resolver-binding-android-arm64": {
            "version": "1.11.1",
            "resolved": "https://registry.npmjs.org/@unrs/resolver-binding-android-arm64/-/resolver-binding-android-arm64-1.11.1.tgz",
            "integrity": "sha512-lCxkVtb4wp1v+EoN+HjIG9cIIzPkX5OtM03pQYkG+U5O/wL53LC4QbIeazgiKqluGeVEeBlZahHalCaBvU1a2g==",
            "cpu": [
                "arm64"
            ],
            "dev": true,
            "optional": true,
            "os": [
                "android"
            ]
        },
        "node_modules/@unrs/resolver-binding-darwin-arm64": {
            "version": "1.11.1",
            "resolved": "https://registry.npmjs.org/@unrs/resolver-binding-darwin-arm64/-/resolver-binding-darwin-arm64-1.11.1.tgz",
            "integrity": "sha512-gPVA1UjRu1Y/IsB/dQEsp2V1pm44Of6+LWvbLc9SDk1c2KhhDRDBUkQCYVWe6f26uJb3fOK8saWMgtX8IrMk3g==",
            "cpu": [
                "arm64"
            ],
            "dev": true,
            "optional": true,
            "os": [
                "darwin"
            ]
        },
        "node_modules/@unrs/resolver-binding-darwin-x64": {
            "version": "1.11.1",
            "resolved": "https://registry.npmjs.org/@unrs/resolver-binding-darwin-x64/-/resolver-binding-darwin-x64-1.11.1.tgz",
            "integrity": "sha512-cFzP7rWKd3lZaCsDze07QX1SC24lO8mPty9vdP+YVa3MGdVgPmFc59317b2ioXtgCMKGiCLxJ4HQs62oz6GfRQ==",
            "cpu": [
                "x64"
            ],
            "dev": true,
            "optional": true,
            "os": [
                "darwin"
            ]
        },
        "node_modules/@unrs/resolver-binding-freebsd-x64": {
            "version": "1.11.1",
            "resolved": "https://registry.npmjs.org/@unrs/resolver-binding-freebsd-x64/-/resolver-binding-freebsd-x64-1.11.1.tgz",
            "integrity": "sha512-fqtGgak3zX4DCB6PFpsH5+Kmt/8CIi4Bry4rb1ho6Av2QHTREM+47y282Uqiu3ZRF5IQioJQ5qWRV6jduA+iGw==",
            "cpu": [
                "x64"
            ],
            "dev": true,
            "optional": true,
            "os": [
                "freebsd"
            ]
        },
        "node_modules/@unrs/resolver-binding-linux-arm-gnueabihf": {
            "version": "1.11.1",
            "resolved": "https://registry.npmjs.org/@unrs/resolver-binding-linux-arm-gnueabihf/-/resolver-binding-linux-arm-gnueabihf-1.11.1.tgz",
            "integrity": "sha512-u92mvlcYtp9MRKmP+ZvMmtPN34+/3lMHlyMj7wXJDeXxuM0Vgzz0+PPJNsro1m3IZPYChIkn944wW8TYgGKFHw==",
            "cpu": [
                "arm"
            ],
            "dev": true,
            "optional": true,
            "os": [
                "linux"
            ]
        },
        "node_modules/@unrs/resolver-binding-linux-arm-musleabihf": {
            "version": "1.11.1",
            "resolved": "https://registry.npmjs.org/@unrs/resolver-binding-linux-arm-musleabihf/-/resolver-binding-linux-arm-musleabihf-1.11.1.tgz",
            "integrity": "sha512-cINaoY2z7LVCrfHkIcmvj7osTOtm6VVT16b5oQdS4beibX2SYBwgYLmqhBjA1t51CarSaBuX5YNsWLjsqfW5Cw==",
            "cpu": [
                "arm"
            ],
            "dev": true,
            "optional": true,
            "os": [
                "linux"
            ]
        },
        "node_modules/@unrs/resolver-binding-linux-arm64-gnu": {
            "version": "1.11.1",
            "resolved": "https://registry.npmjs.org/@unrs/resolver-binding-linux-arm64-gnu/-/resolver-binding-linux-arm64-gnu-1.11.1.tgz",
            "integrity": "sha512-34gw7PjDGB9JgePJEmhEqBhWvCiiWCuXsL9hYphDF7crW7UgI05gyBAi6MF58uGcMOiOqSJ2ybEeCvHcq0BCmQ==",
            "cpu": [
                "arm64"
            ],
            "dev": true,
            "optional": true,
            "os": [
                "linux"
            ]
        },
        "node_modules/@unrs/resolver-binding-linux-arm64-musl": {
            "version": "1.11.1",
            "resolved": "https://registry.npmjs.org/@unrs/resolver-binding-linux-arm64-musl/-/resolver-binding-linux-arm64-musl-1.11.1.tgz",
            "integrity": "sha512-RyMIx6Uf53hhOtJDIamSbTskA99sPHS96wxVE/bJtePJJtpdKGXO1wY90oRdXuYOGOTuqjT8ACccMc4K6QmT3w==",
            "cpu": [
                "arm64"
            ],
            "dev": true,
            "optional": true,
            "os": [
                "linux"
            ]
        },
        "node_modules/@unrs/resolver-binding-linux-ppc64-gnu": {
            "version": "1.11.1",
            "resolved": "https://registry.npmjs.org/@unrs/resolver-binding-linux-ppc64-gnu/-/resolver-binding-linux-ppc64-gnu-1.11.1.tgz",
            "integrity": "sha512-D8Vae74A4/a+mZH0FbOkFJL9DSK2R6TFPC9M+jCWYia/q2einCubX10pecpDiTmkJVUH+y8K3BZClycD8nCShA==",
            "cpu": [
                "ppc64"
            ],
            "dev": true,
            "optional": true,
            "os": [
                "linux"
            ]
        },
        "node_modules/@unrs/resolver-binding-linux-riscv64-gnu": {
            "version": "1.11.1",
            "resolved": "https://registry.npmjs.org/@unrs/resolver-binding-linux-riscv64-gnu/-/resolver-binding-linux-riscv64-gnu-1.11.1.tgz",
            "integrity": "sha512-frxL4OrzOWVVsOc96+V3aqTIQl1O2TjgExV4EKgRY09AJ9leZpEg8Ak9phadbuX0BA4k8U5qtvMSQQGGmaJqcQ==",
            "cpu": [
                "riscv64"
            ],
            "dev": true,
            "optional": true,
            "os": [
                "linux"
            ]
        },
        "node_modules/@unrs/resolver-binding-linux-riscv64-musl": {
            "version": "1.11.1",
            "resolved": "https://registry.npmjs.org/@unrs/resolver-binding-linux-riscv64-musl/-/resolver-binding-linux-riscv64-musl-1.11.1.tgz",
            "integrity": "sha512-mJ5vuDaIZ+l/acv01sHoXfpnyrNKOk/3aDoEdLO/Xtn9HuZlDD6jKxHlkN8ZhWyLJsRBxfv9GYM2utQ1SChKew==",
            "cpu": [
                "riscv64"
            ],
            "dev": true,
            "optional": true,
            "os": [
                "linux"
            ]
        },
        "node_modules/@unrs/resolver-binding-linux-s390x-gnu": {
            "version": "1.11.1",
            "resolved": "https://registry.npmjs.org/@unrs/resolver-binding-linux-s390x-gnu/-/resolver-binding-linux-s390x-gnu-1.11.1.tgz",
            "integrity": "sha512-kELo8ebBVtb9sA7rMe1Cph4QHreByhaZ2QEADd9NzIQsYNQpt9UkM9iqr2lhGr5afh885d/cB5QeTXSbZHTYPg==",
            "cpu": [
                "s390x"
            ],
            "dev": true,
            "optional": true,
            "os": [
                "linux"
            ]
        },
        "node_modules/@unrs/resolver-binding-linux-x64-gnu": {
            "version": "1.11.1",
            "resolved": "https://registry.npmjs.org/@unrs/resolver-binding-linux-x64-gnu/-/resolver-binding-linux-x64-gnu-1.11.1.tgz",
            "integrity": "sha512-C3ZAHugKgovV5YvAMsxhq0gtXuwESUKc5MhEtjBpLoHPLYM+iuwSj3lflFwK3DPm68660rZ7G8BMcwSro7hD5w==",
            "cpu": [
                "x64"
            ],
            "dev": true,
            "optional": true,
            "os": [
                "linux"
            ]
        },
        "node_modules/@unrs/resolver-binding-linux-x64-musl": {
            "version": "1.11.1",
            "resolved": "https://registry.npmjs.org/@unrs/resolver-binding-linux-x64-musl/-/resolver-binding-linux-x64-musl-1.11.1.tgz",
            "integrity": "sha512-rV0YSoyhK2nZ4vEswT/QwqzqQXw5I6CjoaYMOX0TqBlWhojUf8P94mvI7nuJTeaCkkds3QE4+zS8Ko+GdXuZtA==",
            "cpu": [
                "x64"
            ],
            "dev": true,
            "optional": true,
            "os": [
                "linux"
            ]
        },
        "node_modules/@unrs/resolver-binding-wasm32-wasi": {
            "version": "1.11.1",
            "resolved": "https://registry.npmjs.org/@unrs/resolver-binding-wasm32-wasi/-/resolver-binding-wasm32-wasi-1.11.1.tgz",
            "integrity": "sha512-5u4RkfxJm+Ng7IWgkzi3qrFOvLvQYnPBmjmZQ8+szTK/b31fQCnleNl1GgEt7nIsZRIf5PLhPwT0WM+q45x/UQ==",
            "cpu": [
                "wasm32"
            ],
            "dev": true,
            "optional": true,
            "dependencies": {
                "@napi-rs/wasm-runtime": "^0.2.11"
            },
            "engines": {
                "node": ">=14.0.0"
            }
        },
        "node_modules/@unrs/resolver-binding-win32-arm64-msvc": {
            "version": "1.11.1",
            "resolved": "https://registry.npmjs.org/@unrs/resolver-binding-win32-arm64-msvc/-/resolver-binding-win32-arm64-msvc-1.11.1.tgz",
            "integrity": "sha512-nRcz5Il4ln0kMhfL8S3hLkxI85BXs3o8EYoattsJNdsX4YUU89iOkVn7g0VHSRxFuVMdM4Q1jEpIId1Ihim/Uw==",
            "cpu": [
                "arm64"
            ],
            "dev": true,
            "optional": true,
            "os": [
                "win32"
            ]
        },
        "node_modules/@unrs/resolver-binding-win32-ia32-msvc": {
            "version": "1.11.1",
            "resolved": "https://registry.npmjs.org/@unrs/resolver-binding-win32-ia32-msvc/-/resolver-binding-win32-ia32-msvc-1.11.1.tgz",
            "integrity": "sha512-DCEI6t5i1NmAZp6pFonpD5m7i6aFrpofcp4LA2i8IIq60Jyo28hamKBxNrZcyOwVOZkgsRp9O2sXWBWP8MnvIQ==",
            "cpu": [
                "ia32"
            ],
            "dev": true,
            "optional": true,
            "os": [
                "win32"
            ]
        },
        "node_modules/@unrs/resolver-binding-win32-x64-msvc": {
            "version": "1.11.1",
            "resolved": "https://registry.npmjs.org/@unrs/resolver-binding-win32-x64-msvc/-/resolver-binding-win32-x64-msvc-1.11.1.tgz",
            "integrity": "sha512-lrW200hZdbfRtztbygyaq/6jP6AKE8qQN2KvPcJ+x7wiD038YtnYtZ82IMNJ69GJibV7bwL3y9FgK+5w/pYt6g==",
            "cpu": [
                "x64"
            ],
            "dev": true,
            "optional": true,
            "os": [
                "win32"
            ]
        },
        "node_modules/acorn": {
            "version": "8.15.0",
            "resolved": "https://registry.npmjs.org/acorn/-/acorn-8.15.0.tgz",
            "integrity": "sha512-NZyJarBfL7nWwIq+FDL6Zp/yHEhePMNnnJ0y3qfieCrmNvYct8uvtiV41UvlSe6apAfk0fY1FbWx+NwfmpvtTg==",
            "dev": true,
            "bin": {
                "acorn": "bin/acorn"
            },
            "engines": {
                "node": ">=0.4.0"
            }
        },
        "node_modules/acorn-jsx": {
            "version": "5.3.2",
            "resolved": "https://registry.npmjs.org/acorn-jsx/-/acorn-jsx-5.3.2.tgz",
            "integrity": "sha512-rq9s+JNhf0IChjtDXxllJ7g41oZk5SlXtp0LHwyA5cejwn7vKmKp4pPri6YEePv2PU65sAsegbXtIinmDFDXgQ==",
            "dev": true,
            "peerDependencies": {
                "acorn": "^6.0.0 || ^7.0.0 || ^8.0.0"
            }
        },
        "node_modules/adler-32": {
            "version": "1.3.1",
            "resolved": "https://registry.npmjs.org/adler-32/-/adler-32-1.3.1.tgz",
            "integrity": "sha512-ynZ4w/nUUv5rrsR8UUGoe1VC9hZj6V5hU9Qw1HlMDJGEJw5S7TfTErWTjMys6M7vr0YWcPqs3qAr4ss0nDfP+A==",
            "engines": {
                "node": ">=0.8"
            }
        },
        "node_modules/ajv": {
            "version": "6.12.6",
            "resolved": "https://registry.npmjs.org/ajv/-/ajv-6.12.6.tgz",
            "integrity": "sha512-j3fVLgvTo527anyYyJOGTYJbG+vnnQYvE0m5mmkc1TK+nxAppkCLMIL0aZ4dblVCNoGShhm+kzE4ZUykBoMg4g==",
            "dev": true,
            "dependencies": {
                "fast-deep-equal": "^3.1.1",
                "fast-json-stable-stringify": "^2.0.0",
                "json-schema-traverse": "^0.4.1",
                "uri-js": "^4.2.2"
            },
            "funding": {
                "type": "github",
                "url": "https://github.com/sponsors/epoberezkin"
            }
        },
        "node_modules/ansi-regex": {
            "version": "5.0.1",
            "resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-5.0.1.tgz",
            "integrity": "sha512-quJQXlTSUGL2LH9SUXo8VwsY4soanhgo6LNSm84E1LBcE8s3O0wpdiRzyR9z/ZZJMlMWv37qOOb9pdJlMUEKFQ==",
            "dev": true,
            "engines": {
                "node": ">=8"
            }
        },
        "node_modules/ansi-styles": {
            "version": "4.3.0",
            "resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-4.3.0.tgz",
            "integrity": "sha512-zbB9rCJAT1rbjiVDb2hqKFHNYLxgtk8NURxZ3IZwD3F6NtxbXZQCnnSi1Lkx+IDohdPlFp222wVALIheZJQSEg==",
            "dev": true,
            "dependencies": {
                "color-convert": "^2.0.1"
            },
            "engines": {
                "node": ">=8"
            },
            "funding": {
                "url": "https://github.com/chalk/ansi-styles?sponsor=1"
            }
        },
        "node_modules/any-promise": {
            "version": "1.3.0",
            "resolved": "https://registry.npmjs.org/any-promise/-/any-promise-1.3.0.tgz",
            "integrity": "sha512-7UvmKalWRt1wgjL1RrGxoSJW/0QZFIegpeGvZG9kjp8vrRu55XTHbwnqq2GpXm9uLbcuhxm3IqX9OB4MZR1b2A==",
            "dev": true
        },
        "node_modules/anymatch": {
            "version": "3.1.3",
            "resolved": "https://registry.npmjs.org/anymatch/-/anymatch-3.1.3.tgz",
            "integrity": "sha512-KMReFUr0B4t+D+OBkjR3KYqvocp2XaSzO55UcB6mgQMd3KbcE+mWTyvVV7D/zsdEbNnV6acZUutkiHQXvTr1Rw==",
            "dev": true,
            "dependencies": {
                "normalize-path": "^3.0.0",
                "picomatch": "^2.0.4"
            },
            "engines": {
                "node": ">= 8"
            }
        },
        "node_modules/arg": {
            "version": "5.0.2",
            "resolved": "https://registry.npmjs.org/arg/-/arg-5.0.2.tgz",
            "integrity": "sha512-PYjyFOLKQ9y57JvQ6QLo8dAgNqswh8M1RMJYdQduT6xbWSgK36P/Z/v+p888pM69jMMfS8Xd8F6I1kQ/I9HUGg==",
            "dev": true
        },
        "node_modules/argparse": {
            "version": "2.0.1",
            "resolved": "https://registry.npmjs.org/argparse/-/argparse-2.0.1.tgz",
            "integrity": "sha512-8+9WqebbFzpX9OR+Wa6O29asIogeRMzcGtAINdpMHHyAg10f05aSFVBbcEqGf/PXw1EjAZ+q2/bEBg3DvurK3Q==",
            "dev": true
        },
        "node_modules/aria-hidden": {
            "version": "1.2.6",
            "resolved": "https://registry.npmjs.org/aria-hidden/-/aria-hidden-1.2.6.tgz",
            "integrity": "sha512-ik3ZgC9dY/lYVVM++OISsaYDeg1tb0VtP5uL3ouh1koGOaUMDPpbFIei4JkFimWUFPn90sbMNMXQAIVOlnYKJA==",
            "dependencies": {
                "tslib": "^2.0.0"
            },
            "engines": {
                "node": ">=10"
            }
        },
        "node_modules/aria-query": {
            "version": "5.3.2",
            "resolved": "https://registry.npmjs.org/aria-query/-/aria-query-5.3.2.tgz",
            "integrity": "sha512-COROpnaoap1E2F000S62r6A60uHZnmlvomhfyT2DlTcrY1OrBKn2UhH7qn5wTC9zMvD0AY7csdPSNwKP+7WiQw==",
            "dev": true,
            "engines": {
                "node": ">= 0.4"
            }
        },
        "node_modules/array-buffer-byte-length": {
            "version": "1.0.2",
            "resolved": "https://registry.npmjs.org/array-buffer-byte-length/-/array-buffer-byte-length-1.0.2.tgz",
            "integrity": "sha512-LHE+8BuR7RYGDKvnrmcuSq3tDcKv9OFEXQt/HpbZhY7V6h0zlUXutnAD82GiFx9rdieCMjkvtcsPqBwgUl1Iiw==",
            "dev": true,
            "dependencies": {
                "call-bound": "^1.0.3",
                "is-array-buffer": "^3.0.5"
            },
            "engines": {
                "node": ">= 0.4"
            },
            "funding": {
                "url": "https://github.com/sponsors/ljharb"
            }
        },
        "node_modules/array-includes": {
            "version": "3.1.9",
            "resolved": "https://registry.npmjs.org/array-includes/-/array-includes-3.1.9.tgz",
            "integrity": "sha512-FmeCCAenzH0KH381SPT5FZmiA/TmpndpcaShhfgEN9eCVjnFBqq3l1xrI42y8+PPLI6hypzou4GXw00WHmPBLQ==",
            "dev": true,
            "dependencies": {
                "call-bind": "^1.0.8",
                "call-bound": "^1.0.4",
                "define-properties": "^1.2.1",
                "es-abstract": "^1.24.0",
                "es-object-atoms": "^1.1.1",
                "get-intrinsic": "^1.3.0",
                "is-string": "^1.1.1",
                "math-intrinsics": "^1.1.0"
            },
            "engines": {
                "node": ">= 0.4"
            },
            "funding": {
                "url": "https://github.com/sponsors/ljharb"
            }
        },
        "node_modules/array-union": {
            "version": "2.1.0",
            "resolved": "https://registry.npmjs.org/array-union/-/array-union-2.1.0.tgz",
            "integrity": "sha512-HGyxoOTYUyCM6stUe6EJgnd4EoewAI7zMdfqO+kGjnlZmBDz/cR5pf8r/cR4Wq60sL/p0IkcjUEEPwS3GFrIyw==",
            "dev": true,
            "engines": {
                "node": ">=8"
            }
        },
        "node_modules/array.prototype.findlast": {
            "version": "1.2.5",
            "resolved": "https://registry.npmjs.org/array.prototype.findlast/-/array.prototype.findlast-1.2.5.tgz",
            "integrity": "sha512-CVvd6FHg1Z3POpBLxO6E6zr+rSKEQ9L6rZHAaY7lLfhKsWYUBBOuMs0e9o24oopj6H+geRCX0YJ+TJLBK2eHyQ==",
            "dev": true,
            "dependencies": {
                "call-bind": "^1.0.7",
                "define-properties": "^1.2.1",
                "es-abstract": "^1.23.2",
                "es-errors": "^1.3.0",
                "es-object-atoms": "^1.0.0",
                "es-shim-unscopables": "^1.0.2"
            },
            "engines": {
                "node": ">= 0.4"
            },
            "funding": {
                "url": "https://github.com/sponsors/ljharb"
            }
        },
        "node_modules/array.prototype.findlastindex": {
            "version": "1.2.6",
            "resolved": "https://registry.npmjs.org/array.prototype.findlastindex/-/array.prototype.findlastindex-1.2.6.tgz",
            "integrity": "sha512-F/TKATkzseUExPlfvmwQKGITM3DGTK+vkAsCZoDc5daVygbJBnjEUCbgkAvVFsgfXfX4YIqZ/27G3k3tdXrTxQ==",
            "dev": true,
            "dependencies": {
                "call-bind": "^1.0.8",
                "call-bound": "^1.0.4",
                "define-properties": "^1.2.1",
                "es-abstract": "^1.23.9",
                "es-errors": "^1.3.0",
                "es-object-atoms": "^1.1.1",
                "es-shim-unscopables": "^1.1.0"
            },
            "engines": {
                "node": ">= 0.4"
            },
            "funding": {
                "url": "https://github.com/sponsors/ljharb"
            }
        },
        "node_modules/array.prototype.flat": {
            "version": "1.3.3",
            "resolved": "https://registry.npmjs.org/array.prototype.flat/-/array.prototype.flat-1.3.3.tgz",
            "integrity": "sha512-rwG/ja1neyLqCuGZ5YYrznA62D4mZXg0i1cIskIUKSiqF3Cje9/wXAls9B9s1Wa2fomMsIv8czB8jZcPmxCXFg==",
            "dev": true,
            "dependencies": {
                "call-bind": "^1.0.8",
                "define-properties": "^1.2.1",
                "es-abstract": "^1.23.5",
                "es-shim-unscopables": "^1.0.2"
            },
            "engines": {
                "node": ">= 0.4"
            },
            "funding": {
                "url": "https://github.com/sponsors/ljharb"
            }
        },
        "node_modules/array.prototype.flatmap": {
            "version": "1.3.3",
            "resolved": "https://registry.npmjs.org/array.prototype.flatmap/-/array.prototype.flatmap-1.3.3.tgz",
            "integrity": "sha512-Y7Wt51eKJSyi80hFrJCePGGNo5ktJCslFuboqJsbf57CCPcm5zztluPlc4/aD8sWsKvlwatezpV4U1efk8kpjg==",
            "dev": true,
            "dependencies": {
                "call-bind": "^1.0.8",
                "define-properties": "^1.2.1",
                "es-abstract": "^1.23.5",
                "es-shim-unscopables": "^1.0.2"
            },
            "engines": {
                "node": ">= 0.4"
            },
            "funding": {
                "url": "https://github.com/sponsors/ljharb"
            }
        },
        "node_modules/array.prototype.tosorted": {
            "version": "1.1.4",
            "resolved": "https://registry.npmjs.org/array.prototype.tosorted/-/array.prototype.tosorted-1.1.4.tgz",
            "integrity": "sha512-p6Fx8B7b7ZhL/gmUsAy0D15WhvDccw3mnGNbZpi3pmeJdxtWsj2jEaI4Y6oo3XiHfzuSgPwKc04MYt6KgvC/wA==",
            "dev": true,
            "dependencies": {
                "call-bind": "^1.0.7",
                "define-properties": "^1.2.1",
                "es-abstract": "^1.23.3",
                "es-errors": "^1.3.0",
                "es-shim-unscopables": "^1.0.2"
            },
            "engines": {
                "node": ">= 0.4"
            }
        },
        "node_modules/arraybuffer.prototype.slice": {
            "version": "1.0.4",
            "resolved": "https://registry.npmjs.org/arraybuffer.prototype.slice/-/arraybuffer.prototype.slice-1.0.4.tgz",
            "integrity": "sha512-BNoCY6SXXPQ7gF2opIP4GBE+Xw7U+pHMYKuzjgCN3GwiaIR09UUeKfheyIry77QtrCBlC0KK0q5/TER/tYh3PQ==",
            "dev": true,
            "dependencies": {
                "array-buffer-byte-length": "^1.0.1",
                "call-bind": "^1.0.8",
                "define-properties": "^1.2.1",
                "es-abstract": "^1.23.5",
                "es-errors": "^1.3.0",
                "get-intrinsic": "^1.2.6",
                "is-array-buffer": "^3.0.4"
            },
            "engines": {
                "node": ">= 0.4"
            },
            "funding": {
                "url": "https://github.com/sponsors/ljharb"
            }
        },
        "node_modules/ast-types-flow": {
            "version": "0.0.8",
            "resolved": "https://registry.npmjs.org/ast-types-flow/-/ast-types-flow-0.0.8.tgz",
            "integrity": "sha512-OH/2E5Fg20h2aPrbe+QL8JZQFko0YZaF+j4mnQ7BGhfavO7OpSLa8a0y9sBwomHdSbkhTS8TQNayBfnW5DwbvQ==",
            "dev": true
        },
        "node_modules/async-function": {
            "version": "1.0.0",
            "resolved": "https://registry.npmjs.org/async-function/-/async-function-1.0.0.tgz",
            "integrity": "sha512-hsU18Ae8CDTR6Kgu9DYf0EbCr/a5iGL0rytQDobUcdpYOKokk8LEjVphnXkDkgpi0wYVsqrXuP0bZxJaTqdgoA==",
            "dev": true,
            "engines": {
                "node": ">= 0.4"
            }
        },
        "node_modules/attr-accept": {
            "version": "2.2.5",
            "resolved": "https://registry.npmjs.org/attr-accept/-/attr-accept-2.2.5.tgz",
            "integrity": "sha512-0bDNnY/u6pPwHDMoF0FieU354oBi0a8rD9FcsLwzcGWbc8KS8KPIi7y+s13OlVY+gMWc/9xEMUgNE6Qm8ZllYQ==",
            "engines": {
                "node": ">=4"
            }
        },
        "node_modules/autoprefixer": {
            "version": "10.4.21",
            "resolved": "https://registry.npmjs.org/autoprefixer/-/autoprefixer-10.4.21.tgz",
            "integrity": "sha512-O+A6LWV5LDHSJD3LjHYoNi4VLsj/Whi7k6zG12xTYaU4cQ8oxQGckXNX8cRHK5yOZ/ppVHe0ZBXGzSV9jXdVbQ==",
            "dev": true,
            "funding": [
                {
                    "type": "opencollective",
                    "url": "https://opencollective.com/postcss/"
                },
                {
                    "type": "tidelift",
                    "url": "https://tidelift.com/funding/github/npm/autoprefixer"
                },
                {
                    "type": "github",
                    "url": "https://github.com/sponsors/ai"
                }
            ],
            "dependencies": {
                "browserslist": "^4.24.4",
                "caniuse-lite": "^1.0.30001702",
                "fraction.js": "^4.3.7",
                "normalize-range": "^0.1.2",
                "picocolors": "^1.1.1",
                "postcss-value-parser": "^4.2.0"
            },
            "bin": {
                "autoprefixer": "bin/autoprefixer"
            },
            "engines": {
                "node": "^10 || ^12 || >=14"
            },
            "peerDependencies": {
                "postcss": "^8.1.0"
            }
        },
        "node_modules/available-typed-arrays": {
            "version": "1.0.7",
            "resolved": "https://registry.npmjs.org/available-typed-arrays/-/available-typed-arrays-1.0.7.tgz",
            "integrity": "sha512-wvUjBtSGN7+7SjNpq/9M2Tg350UZD3q62IFZLbRAR1bSMlCo1ZaeW+BJ+D090e4hIIZLBcTDWe4Mh4jvUDajzQ==",
            "dev": true,
            "dependencies": {
                "possible-typed-array-names": "^1.0.0"
            },
            "engines": {
                "node": ">= 0.4"
            },
            "funding": {
                "url": "https://github.com/sponsors/ljharb"
            }
        },
        "node_modules/axe-core": {
            "version": "4.10.3",
            "resolved": "https://registry.npmjs.org/axe-core/-/axe-core-4.10.3.tgz",
            "integrity": "sha512-Xm7bpRXnDSX2YE2YFfBk2FnF0ep6tmG7xPh8iHee8MIcrgq762Nkce856dYtJYLkuIoYZvGfTs/PbZhideTcEg==",
            "dev": true,
            "engines": {
                "node": ">=4"
            }
        },
        "node_modules/axobject-query": {
            "version": "4.1.0",
            "resolved": "https://registry.npmjs.org/axobject-query/-/axobject-query-4.1.0.tgz",
            "integrity": "sha512-qIj0G9wZbMGNLjLmg1PT6v2mE9AH2zlnADJD/2tC6E00hgmhUOfEB6greHPAfLRSufHqROIUTkw6E+M3lH0PTQ==",
            "dev": true,
            "engines": {
                "node": ">= 0.4"
            }
        },
        "node_modules/balanced-match": {
            "version": "1.0.2",
            "resolved": "https://registry.npmjs.org/balanced-match/-/balanced-match-1.0.2.tgz",
            "integrity": "sha512-3oSeUO0TMV67hN1AmbXsK4yaqU7tjiHlbxRDZOpH0KW9+CeX4bRAaX0Anxt0tx2MrpRpWwQaPwIlISEJhYU5Pw==",
            "dev": true
        },
        "node_modules/bcryptjs": {
            "version": "3.0.2",
            "resolved": "https://registry.npmjs.org/bcryptjs/-/bcryptjs-3.0.2.tgz",
            "integrity": "sha512-k38b3XOZKv60C4E2hVsXTolJWfkGRMbILBIe2IBITXciy5bOsTKot5kDrf3ZfufQtQOUN5mXceUEpU1rTl9Uog==",
            "bin": {
                "bcrypt": "bin/bcrypt"
            }
        },
        "node_modules/binary-extensions": {
            "version": "2.3.0",
            "resolved": "https://registry.npmjs.org/binary-extensions/-/binary-extensions-2.3.0.tgz",
            "integrity": "sha512-Ceh+7ox5qe7LJuLHoY0feh3pHuUDHAcRUeyL2VYghZwfpkNIy/+8Ocg0a3UuSoYzavmylwuLWQOf3hl0jjMMIw==",
            "dev": true,
            "engines": {
                "node": ">=8"
            },
            "funding": {
                "url": "https://github.com/sponsors/sindresorhus"
            }
        },
        "node_modules/brace-expansion": {
            "version": "1.1.12",
            "resolved": "https://registry.npmjs.org/brace-expansion/-/brace-expansion-1.1.12.tgz",
            "integrity": "sha512-9T9UjW3r0UW5c1Q7GTwllptXwhvYmEzFhzMfZ9H7FQWt+uZePjZPjBP/W1ZEyZ1twGWom5/56TF4lPcqjnDHcg==",
            "dev": true,
            "dependencies": {
                "balanced-match": "^1.0.0",
                "concat-map": "0.0.1"
            }
        },
        "node_modules/braces": {
            "version": "3.0.3",
            "resolved": "https://registry.npmjs.org/braces/-/braces-3.0.3.tgz",
            "integrity": "sha512-yQbXgO/OSZVD2IsiLlro+7Hf6Q18EJrKSEsdoMzKePKXct3gvD8oLcOQdIzGupr5Fj+EDe8gO/lxc1BzfMpxvA==",
            "dev": true,
            "dependencies": {
                "fill-range": "^7.1.1"
            },
            "engines": {
                "node": ">=8"
            }
        },
        "node_modules/browserslist": {
            "version": "4.25.4",
            "resolved": "https://registry.npmjs.org/browserslist/-/browserslist-4.25.4.tgz",
            "integrity": "sha512-4jYpcjabC606xJ3kw2QwGEZKX0Aw7sgQdZCvIK9dhVSPh76BKo+C+btT1RRofH7B+8iNpEbgGNVWiLki5q93yg==",
            "dev": true,
            "funding": [
                {
                    "type": "opencollective",
                    "url": "https://opencollective.com/browserslist"
                },
                {
                    "type": "tidelift",
                    "url": "https://tidelift.com/funding/github/npm/browserslist"
                },
                {
                    "type": "github",
                    "url": "https://github.com/sponsors/ai"
                }
            ],
            "dependencies": {
                "caniuse-lite": "^1.0.30001737",
                "electron-to-chromium": "^1.5.211",
                "node-releases": "^2.0.19",
                "update-browserslist-db": "^1.1.3"
            },
            "bin": {
                "browserslist": "cli.js"
            },
            "engines": {
                "node": "^6 || ^7 || ^8 || ^9 || ^10 || ^11 || ^12 || >=13.7"
            }
        },
        "node_modules/busboy": {
            "version": "1.6.0",
            "resolved": "https://registry.npmjs.org/busboy/-/busboy-1.6.0.tgz",
            "integrity": "sha512-8SFQbg/0hQ9xy3UNTB0YEnsNBbWfhf7RtnzpL7TkBiTBRfrQ9Fxcnz7VJsleJpyp6rVLvXiuORqjlHi5q+PYuA==",
            "dependencies": {
                "streamsearch": "^1.1.0"
            },
            "engines": {
                "node": ">=10.16.0"
            }
        },
        "node_modules/call-bind": {
            "version": "1.0.8",
            "resolved": "https://registry.npmjs.org/call-bind/-/call-bind-1.0.8.tgz",
            "integrity": "sha512-oKlSFMcMwpUg2ednkhQ454wfWiU/ul3CkJe/PEHcTKuiX6RpbehUiFMXu13HalGZxfUwCQzZG747YXBn1im9ww==",
            "dev": true,
            "dependencies": {
                "call-bind-apply-helpers": "^1.0.0",
                "es-define-property": "^1.0.0",
                "get-intrinsic": "^1.2.4",
                "set-function-length": "^1.2.2"
            },
            "engines": {
                "node": ">= 0.4"
            },
            "funding": {
                "url": "https://github.com/sponsors/ljharb"
            }
        },
        "node_modules/call-bind-apply-helpers": {
            "version": "1.0.2",
            "resolved": "https://registry.npmjs.org/call-bind-apply-helpers/-/call-bind-apply-helpers-1.0.2.tgz",
            "integrity": "sha512-Sp1ablJ0ivDkSzjcaJdxEunN5/XvksFJ2sMBFfq6x0ryhQV/2b/KwFe21cMpmHtPOSij8K99/wSfoEuTObmuMQ==",
            "dev": true,
            "dependencies": {
                "es-errors": "^1.3.0",
                "function-bind": "^1.1.2"
            },
            "engines": {
                "node": ">= 0.4"
            }
        },
        "node_modules/call-bound": {
            "version": "1.0.4",
            "resolved": "https://registry.npmjs.org/call-bound/-/call-bound-1.0.4.tgz",
            "integrity": "sha512-+ys997U96po4Kx/ABpBCqhA9EuxJaQWDQg7295H4hBphv3IZg0boBKuwYpt4YXp6MZ5AmZQnU/tyMTlRpaSejg==",
            "dev": true,
            "dependencies": {
                "call-bind-apply-helpers": "^1.0.2",
                "get-intrinsic": "^1.3.0"
            },
            "engines": {
                "node": ">= 0.4"
            },
            "funding": {
                "url": "https://github.com/sponsors/ljharb"
            }
        },
        "node_modules/callsites": {
            "version": "3.1.0",
            "resolved": "https://registry.npmjs.org/callsites/-/callsites-3.1.0.tgz",
            "integrity": "sha512-P8BjAsXvZS+VIDUI11hHCQEv74YT67YUi5JJFNWIqL235sBmjX4+qx9Muvls5ivyNENctx46xQLQ3aTuE7ssaQ==",
            "dev": true,
            "engines": {
                "node": ">=6"
            }
        },
        "node_modules/camelcase-css": {
            "version": "2.0.1",
            "resolved": "https://registry.npmjs.org/camelcase-css/-/camelcase-css-2.0.1.tgz",
            "integrity": "sha512-QOSvevhslijgYwRx6Rv7zKdMF8lbRmx+uQGx2+vDc+KI/eBnsy9kit5aj23AgGu3pa4t9AgwbnXWqS+iOY+2aA==",
            "dev": true,
            "engines": {
                "node": ">= 6"
            }
        },
        "node_modules/caniuse-lite": {
            "version": "1.0.30001741",
            "resolved": "https://registry.npmjs.org/caniuse-lite/-/caniuse-lite-1.0.30001741.tgz",
            "integrity": "sha512-QGUGitqsc8ARjLdgAfxETDhRbJ0REsP6O3I96TAth/mVjh2cYzN2u+3AzPP3aVSm2FehEItaJw1xd+IGBXWeSw==",
            "funding": [
                {
                    "type": "opencollective",
                    "url": "https://opencollective.com/browserslist"
                },
                {
                    "type": "tidelift",
                    "url": "https://tidelift.com/funding/github/npm/caniuse-lite"
                },
                {
                    "type": "github",
                    "url": "https://github.com/sponsors/ai"
                }
            ]
        },
        "node_modules/cfb": {
            "version": "1.2.2",
            "resolved": "https://registry.npmjs.org/cfb/-/cfb-1.2.2.tgz",
            "integrity": "sha512-KfdUZsSOw19/ObEWasvBP/Ac4reZvAGauZhs6S/gqNhXhI7cKwvlH7ulj+dOEYnca4bm4SGo8C1bTAQvnTjgQA==",
            "dependencies": {
                "adler-32": "~1.3.0",
                "crc-32": "~1.2.0"
            },
            "engines": {
                "node": ">=0.8"
            }
        },
        "node_modules/chalk": {
            "version": "4.1.2",
            "resolved": "https://registry.npmjs.org/chalk/-/chalk-4.1.2.tgz",
            "integrity": "sha512-oKnbhFyRIXpUuez8iBMmyEa4nbj4IOQyuhc/wy9kY7/WVPcwIO9VA668Pu8RkO7+0G76SLROeyw9CpQ061i4mA==",
            "dev": true,
            "dependencies": {
                "ansi-styles": "^4.1.0",
                "supports-color": "^7.1.0"
            },
            "engines": {
                "node": ">=10"
            },
            "funding": {
                "url": "https://github.com/chalk/chalk?sponsor=1"
            }
        },
        "node_modules/chokidar": {
            "version": "3.6.0",
            "resolved": "https://registry.npmjs.org/chokidar/-/chokidar-3.6.0.tgz",
            "integrity": "sha512-7VT13fmjotKpGipCW9JEQAusEPE+Ei8nl6/g4FBAmIm0GOOLMua9NDDo/DWp0ZAxCr3cPq5ZpBqmPAQgDda2Pw==",
            "dev": true,
            "dependencies": {
                "anymatch": "~3.1.2",
                "braces": "~3.0.2",
                "glob-parent": "~5.1.2",
                "is-binary-path": "~2.1.0",
                "is-glob": "~4.0.1",
                "normalize-path": "~3.0.0",
                "readdirp": "~3.6.0"
            },
            "engines": {
                "node": ">= 8.10.0"
            },
            "funding": {
                "url": "https://paulmillr.com/funding/"
            },
            "optionalDependencies": {
                "fsevents": "~2.3.2"
            }
        },
        "node_modules/chokidar/node_modules/glob-parent": {
            "version": "5.1.2",
            "resolved": "https://registry.npmjs.org/glob-parent/-/glob-parent-5.1.2.tgz",
            "integrity": "sha512-AOIgSQCepiJYwP3ARnGx+5VnTu2HBYdzbGP45eLw1vr3zB3vZLeyed1sC9hnbcOc9/SrMyM5RPQrkGz4aS9Zow==",
            "dev": true,
            "dependencies": {
                "is-glob": "^4.0.1"
            },
            "engines": {
                "node": ">= 6"
            }
        },
        "node_modules/class-variance-authority": {
            "version": "0.7.1",
            "resolved": "https://registry.npmjs.org/class-variance-authority/-/class-variance-authority-0.7.1.tgz",
            "integrity": "sha512-Ka+9Trutv7G8M6WT6SeiRWz792K5qEqIGEGzXKhAE6xOWAY6pPH8U+9IY3oCMv6kqTmLsv7Xh/2w2RigkePMsg==",
            "dependencies": {
                "clsx": "^2.1.1"
            },
            "funding": {
                "url": "https://polar.sh/cva"
            }
        },
        "node_modules/client-only": {
            "version": "0.0.1",
            "resolved": "https://registry.npmjs.org/client-only/-/client-only-0.0.1.tgz",
            "integrity": "sha512-IV3Ou0jSMzZrd3pZ48nLkT9DA7Ag1pnPzaiQhpW7c3RbcqqzvzzVu+L8gfqMp/8IM2MQtSiqaCxrrcfu8I8rMA=="
        },
        "node_modules/clsx": {
            "version": "2.1.1",
            "resolved": "https://registry.npmjs.org/clsx/-/clsx-2.1.1.tgz",
            "integrity": "sha512-eYm0QWBtUrBWZWG0d386OGAw16Z995PiOVo2B7bjWSbHedGl5e0ZWaq65kOGgUSNesEIDkB9ISbTg/JK9dhCZA==",
            "engines": {
                "node": ">=6"
            }
        },
        "node_modules/codepage": {
            "version": "1.15.0",
            "resolved": "https://registry.npmjs.org/codepage/-/codepage-1.15.0.tgz",
            "integrity": "sha512-3g6NUTPd/YtuuGrhMnOMRjFc+LJw/bnMp3+0r/Wcz3IXUuCosKRJvMphm5+Q+bvTVGcJJuRvVLuYba+WojaFaA==",
            "engines": {
                "node": ">=0.8"
            }
        },
        "node_modules/color-convert": {
            "version": "2.0.1",
            "resolved": "https://registry.npmjs.org/color-convert/-/color-convert-2.0.1.tgz",
            "integrity": "sha512-RRECPsj7iu/xb5oKYcsFHSppFNnsj/52OVTRKb4zP5onXwVF3zVmmToNcOfGC+CRDpfK/U584fMg38ZHCaElKQ==",
            "dev": true,
            "dependencies": {
                "color-name": "~1.1.4"
            },
            "engines": {
                "node": ">=7.0.0"
            }
        },
        "node_modules/color-name": {
            "version": "1.1.4",
            "resolved": "https://registry.npmjs.org/color-name/-/color-name-1.1.4.tgz",
            "integrity": "sha512-dOy+3AuW3a2wNbZHIuMZpTcgjGuLU/uBL/ubcZF9OXbDo8ff4O8yVp5Bf0efS8uEoYo5q4Fx7dY9OgQGXgAsQA==",
            "dev": true
        },
        "node_modules/commander": {
            "version": "4.1.1",
            "resolved": "https://registry.npmjs.org/commander/-/commander-4.1.1.tgz",
            "integrity": "sha512-NOKm8xhkzAjzFx8B2v5OAHT+u5pRQc2UCa2Vq9jYL/31o2wi9mxBA7LIFs3sV5VSC49z6pEhfbMULvShKj26WA==",
            "dev": true,
            "engines": {
                "node": ">= 6"
            }
        },
        "node_modules/concat-map": {
            "version": "0.0.1",
            "resolved": "https://registry.npmjs.org/concat-map/-/concat-map-0.0.1.tgz",
            "integrity": "sha512-/Srv4dswyQNBfohGpz9o6Yb3Gz3SrUDqBH5rTuhGR7ahtlbYKnVxw2bCFMRljaA7EXHaXZ8wsHdodFvbkhKmqg==",
            "dev": true
        },
        "node_modules/crc-32": {
            "version": "1.2.2",
            "resolved": "https://registry.npmjs.org/crc-32/-/crc-32-1.2.2.tgz",
            "integrity": "sha512-ROmzCKrTnOwybPcJApAA6WBWij23HVfGVNKqqrZpuyZOHqK2CwHSvpGuyt/UNNvaIjEd8X5IFGp4Mh+Ie1IHJQ==",
            "bin": {
                "crc32": "bin/crc32.njs"
            },
            "engines": {
                "node": ">=0.8"
            }
        },
        "node_modules/cross-spawn": {
            "version": "7.0.6",
            "resolved": "https://registry.npmjs.org/cross-spawn/-/cross-spawn-7.0.6.tgz",
            "integrity": "sha512-uV2QOWP2nWzsy2aMp8aRibhi9dlzF5Hgh5SHaB9OiTGEyDTiJJyx0uy51QXdyWbtAHNua4XJzUKca3OzKUd3vA==",
            "dev": true,
            "dependencies": {
                "path-key": "^3.1.0",
                "shebang-command": "^2.0.0",
                "which": "^2.0.1"
            },
            "engines": {
                "node": ">= 8"
            }
        },
        "node_modules/cssesc": {
            "version": "3.0.0",
            "resolved": "https://registry.npmjs.org/cssesc/-/cssesc-3.0.0.tgz",
            "integrity": "sha512-/Tb/JcjK111nNScGob5MNtsntNM1aCNUDipB/TkwZFhyDrrE47SOx/18wF2bbjgc3ZzCSKW1T5nt5EbFoAz/Vg==",
            "dev": true,
            "bin": {
                "cssesc": "bin/cssesc"
            },
            "engines": {
                "node": ">=4"
            }
        },
        "node_modules/csstype": {
            "version": "3.1.3",
            "resolved": "https://registry.npmjs.org/csstype/-/csstype-3.1.3.tgz",
            "integrity": "sha512-M1uQkMl8rQK/szD0LNhtqxIPLpimGm8sOBwU7lLnCpSbTyY3yeU1Vc7l4KT5zT4s/yOxHH5O7tIuuLOCnLADRw=="
        },
        "node_modules/d3-array": {
            "version": "3.2.4",
            "resolved": "https://registry.npmjs.org/d3-array/-/d3-array-3.2.4.tgz",
            "integrity": "sha512-tdQAmyA18i4J7wprpYq8ClcxZy3SC31QMeByyCFyRt7BVHdREQZ5lpzoe5mFEYZUWe+oq8HBvk9JjpibyEV4Jg==",
            "dependencies": {
                "internmap": "1 - 2"
            },
            "engines": {
                "node": ">=12"
            }
        },
        "node_modules/d3-color": {
            "version": "3.1.0",
            "resolved": "https://registry.npmjs.org/d3-color/-/d3-color-3.1.0.tgz",
            "integrity": "sha512-zg/chbXyeBtMQ1LbD/WSoW2DpC3I0mpmPdW+ynRTj/x2DAWYrIY7qeZIHidozwV24m4iavr15lNwIwLxRmOxhA==",
            "engines": {
                "node": ">=12"
            }
        },
        "node_modules/d3-ease": {
            "version": "3.0.1",
            "resolved": "https://registry.npmjs.org/d3-ease/-/d3-ease-3.0.1.tgz",
            "integrity": "sha512-wR/XK3D3XcLIZwpbvQwQ5fK+8Ykds1ip7A2Txe0yxncXSdq1L9skcG7blcedkOX+ZcgxGAmLX1FrRGbADwzi0w==",
            "engines": {
                "node": ">=12"
            }
        },
        "node_modules/d3-format": {
            "version": "3.1.0",
            "resolved": "https://registry.npmjs.org/d3-format/-/d3-format-3.1.0.tgz",
            "integrity": "sha512-YyUI6AEuY/Wpt8KWLgZHsIU86atmikuoOmCfommt0LYHiQSPjvX2AcFc38PX0CBpr2RCyZhjex+NS/LPOv6YqA==",
            "engines": {
                "node": ">=12"
            }
        },
        "node_modules/d3-interpolate": {
            "version": "3.0.1",
            "resolved": "https://registry.npmjs.org/d3-interpolate/-/d3-interpolate-3.0.1.tgz",
            "integrity": "sha512-3bYs1rOD33uo8aqJfKP3JWPAibgw8Zm2+L9vBKEHJ2Rg+viTR7o5Mmv5mZcieN+FRYaAOWX5SJATX6k1PWz72g==",
            "dependencies": {
                "d3-color": "1 - 3"
            },
            "engines": {
                "node": ">=12"
            }
        },
        "node_modules/d3-path": {
            "version": "3.1.0",
            "resolved": "https://registry.npmjs.org/d3-path/-/d3-path-3.1.0.tgz",
            "integrity": "sha512-p3KP5HCf/bvjBSSKuXid6Zqijx7wIfNW+J/maPs+iwR35at5JCbLUT0LzF1cnjbCHWhqzQTIN2Jpe8pRebIEFQ==",
            "engines": {
                "node": ">=12"
            }
        },
        "node_modules/d3-scale": {
            "version": "4.0.2",
            "resolved": "https://registry.npmjs.org/d3-scale/-/d3-scale-4.0.2.tgz",
            "integrity": "sha512-GZW464g1SH7ag3Y7hXjf8RoUuAFIqklOAq3MRl4OaWabTFJY9PN/E1YklhXLh+OQ3fM9yS2nOkCoS+WLZ6kvxQ==",
            "dependencies": {
                "d3-array": "2.10.0 - 3",
                "d3-format": "1 - 3",
                "d3-interpolate": "1.2.0 - 3",
                "d3-time": "2.1.1 - 3",
                "d3-time-format": "2 - 4"
            },
            "engines": {
                "node": ">=12"
            }
        },
        "node_modules/d3-shape": {
            "version": "3.2.0",
            "resolved": "https://registry.npmjs.org/d3-shape/-/d3-shape-3.2.0.tgz",
            "integrity": "sha512-SaLBuwGm3MOViRq2ABk3eLoxwZELpH6zhl3FbAoJ7Vm1gofKx6El1Ib5z23NUEhF9AsGl7y+dzLe5Cw2AArGTA==",
            "dependencies": {
                "d3-path": "^3.1.0"
            },
            "engines": {
                "node": ">=12"
            }
        },
        "node_modules/d3-time": {
            "version": "3.1.0",
            "resolved": "https://registry.npmjs.org/d3-time/-/d3-time-3.1.0.tgz",
            "integrity": "sha512-VqKjzBLejbSMT4IgbmVgDjpkYrNWUYJnbCGo874u7MMKIWsILRX+OpX/gTk8MqjpT1A/c6HY2dCA77ZN0lkQ2Q==",
            "dependencies": {
                "d3-array": "2 - 3"
            },
            "engines": {
                "node": ">=12"
            }
        },
        "node_modules/d3-time-format": {
            "version": "4.1.0",
            "resolved": "https://registry.npmjs.org/d3-time-format/-/d3-time-format-4.1.0.tgz",
            "integrity": "sha512-dJxPBlzC7NugB2PDLwo9Q8JiTR3M3e4/XANkreKSUxF8vvXKqm1Yfq4Q5dl8budlunRVlUUaDUgFt7eA8D6NLg==",
            "dependencies": {
                "d3-time": "1 - 3"
            },
            "engines": {
                "node": ">=12"
            }
        },
        "node_modules/d3-timer": {
            "version": "3.0.1",
            "resolved": "https://registry.npmjs.org/d3-timer/-/d3-timer-3.0.1.tgz",
            "integrity": "sha512-ndfJ/JxxMd3nw31uyKoY2naivF+r29V+Lc0svZxe1JvvIRmi8hUsrMvdOwgS1o6uBHmiz91geQ0ylPP0aj1VUA==",
            "engines": {
                "node": ">=12"
            }
        },
        "node_modules/damerau-levenshtein": {
            "version": "1.0.8",
            "resolved": "https://registry.npmjs.org/damerau-levenshtein/-/damerau-levenshtein-1.0.8.tgz",
            "integrity": "sha512-sdQSFB7+llfUcQHUQO3+B8ERRj0Oa4w9POWMI/puGtuf7gFywGmkaLCElnudfTiKZV+NvHqL0ifzdrI8Ro7ESA==",
            "dev": true
        },
        "node_modules/data-view-buffer": {
            "version": "1.0.2",
            "resolved": "https://registry.npmjs.org/data-view-buffer/-/data-view-buffer-1.0.2.tgz",
            "integrity": "sha512-EmKO5V3OLXh1rtK2wgXRansaK1/mtVdTUEiEI0W8RkvgT05kfxaH29PliLnpLP73yYO6142Q72QNa8Wx/A5CqQ==",
            "dev": true,
            "dependencies": {
                "call-bound": "^1.0.3",
                "es-errors": "^1.3.0",
                "is-data-view": "^1.0.2"
            },
            "engines": {
                "node": ">= 0.4"
            },
            "funding": {
                "url": "https://github.com/sponsors/ljharb"
            }
        },
        "node_modules/data-view-byte-length": {
            "version": "1.0.2",
            "resolved": "https://registry.npmjs.org/data-view-byte-length/-/data-view-byte-length-1.0.2.tgz",
            "integrity": "sha512-tuhGbE6CfTM9+5ANGf+oQb72Ky/0+s3xKUpHvShfiz2RxMFgFPjsXuRLBVMtvMs15awe45SRb83D6wH4ew6wlQ==",
            "dev": true,
            "dependencies": {
                "call-bound": "^1.0.3",
                "es-errors": "^1.3.0",
                "is-data-view": "^1.0.2"
            },
            "engines": {
                "node": ">= 0.4"
            },
            "funding": {
                "url": "https://github.com/sponsors/inspect-js"
            }
        },
        "node_modules/data-view-byte-offset": {
            "version": "1.0.1",
            "resolved": "https://registry.npmjs.org/data-view-byte-offset/-/data-view-byte-offset-1.0.1.tgz",
            "integrity": "sha512-BS8PfmtDGnrgYdOonGZQdLZslWIeCGFP9tpan0hi1Co2Zr2NKADsvGYA8XxuG/4UWgJ6Cjtv+YJnB6MM69QGlQ==",
            "dev": true,
            "dependencies": {
                "call-bound": "^1.0.2",
                "es-errors": "^1.3.0",
                "is-data-view": "^1.0.1"
            },
            "engines": {
                "node": ">= 0.4"
            },
            "funding": {
                "url": "https://github.com/sponsors/ljharb"
            }
        },
        "node_modules/debug": {
            "version": "4.4.1",
            "resolved": "https://registry.npmjs.org/debug/-/debug-4.4.1.tgz",
            "integrity": "sha512-KcKCqiftBJcZr++7ykoDIEwSa3XWowTfNPo92BYxjXiyYEVrUQh2aLyhxBCwww+heortUFxEJYcRzosstTEBYQ==",
            "dev": true,
            "dependencies": {
                "ms": "^2.1.3"
            },
            "engines": {
                "node": ">=6.0"
            },
            "peerDependenciesMeta": {
                "supports-color": {
                    "optional": true
                }
            }
        },
        "node_modules/decimal.js-light": {
            "version": "2.5.1",
            "resolved": "https://registry.npmjs.org/decimal.js-light/-/decimal.js-light-2.5.1.tgz",
            "integrity": "sha512-qIMFpTMZmny+MMIitAB6D7iVPEorVw6YQRWkvarTkT4tBeSLLiHzcwj6q0MmYSFCiVpiqPJTJEYIrpcPzVEIvg=="
        },
        "node_modules/deep-is": {
            "version": "0.1.4",
            "resolved": "https://registry.npmjs.org/deep-is/-/deep-is-0.1.4.tgz",
            "integrity": "sha512-oIPzksmTg4/MriiaYGO+okXDT7ztn/w3Eptv/+gSIdMdKsJo0u4CfYNFJPy+4SKMuCqGw2wxnA+URMg3t8a/bQ==",
            "dev": true
        },
        "node_modules/define-data-property": {
            "version": "1.1.4",
            "resolved": "https://registry.npmjs.org/define-data-property/-/define-data-property-1.1.4.tgz",
            "integrity": "sha512-rBMvIzlpA8v6E+SJZoo++HAYqsLrkg7MSfIinMPFhmkorw7X+dOXVJQs+QT69zGkzMyfDnIMN2Wid1+NbL3T+A==",
            "dev": true,
            "dependencies": {
                "es-define-property": "^1.0.0",
                "es-errors": "^1.3.0",
                "gopd": "^1.0.1"
            },
            "engines": {
                "node": ">= 0.4"
            },
            "funding": {
                "url": "https://github.com/sponsors/ljharb"
            }
        },
        "node_modules/define-properties": {
            "version": "1.2.1",
            "resolved": "https://registry.npmjs.org/define-properties/-/define-properties-1.2.1.tgz",
            "integrity": "sha512-8QmQKqEASLd5nx0U1B1okLElbUuuttJ/AnYmRXbbbGDWh6uS208EjD4Xqq/I9wK7u0v6O08XhTWnt5XtEbR6Dg==",
            "dev": true,
            "dependencies": {
                "define-data-property": "^1.0.1",
                "has-property-descriptors": "^1.0.0",
                "object-keys": "^1.1.1"
            },
            "engines": {
                "node": ">= 0.4"
            },
            "funding": {
                "url": "https://github.com/sponsors/ljharb"
            }
        },
        "node_modules/detect-node-es": {
            "version": "1.1.0",
            "resolved": "https://registry.npmjs.org/detect-node-es/-/detect-node-es-1.1.0.tgz",
            "integrity": "sha512-ypdmJU/TbBby2Dxibuv7ZLW3Bs1QEmM7nHjEANfohJLvE0XVujisn1qPJcZxg+qDucsr+bP6fLD1rPS3AhJ7EQ=="
        },
        "node_modules/didyoumean": {
            "version": "1.2.2",
            "resolved": "https://registry.npmjs.org/didyoumean/-/didyoumean-1.2.2.tgz",
            "integrity": "sha512-gxtyfqMg7GKyhQmb056K7M3xszy/myH8w+B4RT+QXBQsvAOdc3XymqDDPHx1BgPgsdAA5SIifona89YtRATDzw==",
            "dev": true
        },
        "node_modules/dir-glob": {
            "version": "3.0.1",
            "resolved": "https://registry.npmjs.org/dir-glob/-/dir-glob-3.0.1.tgz",
            "integrity": "sha512-WkrWp9GR4KXfKGYzOLmTuGVi1UWFfws377n9cc55/tb6DuqyF6pcQ5AbiHEshaDpY9v6oaSr2XCDidGmMwdzIA==",
            "dev": true,
            "dependencies": {
                "path-type": "^4.0.0"
            },
            "engines": {
                "node": ">=8"
            }
        },
        "node_modules/dlv": {
            "version": "1.1.3",
            "resolved": "https://registry.npmjs.org/dlv/-/dlv-1.1.3.tgz",
            "integrity": "sha512-+HlytyjlPKnIG8XuRG8WvmBP8xs8P71y+SKKS6ZXWoEgLuePxtDoUEiH7WkdePWrQ5JBpE6aoVqfZfJUQkjXwA==",
            "dev": true
        },
        "node_modules/doctrine": {
            "version": "3.0.0",
            "resolved": "https://registry.npmjs.org/doctrine/-/doctrine-3.0.0.tgz",
            "integrity": "sha512-yS+Q5i3hBf7GBkd4KG8a7eBNNWNGLTaEwwYWUijIYM7zrlYDM0BFXHjjPWlWZ1Rg7UaddZeIDmi9jF3HmqiQ2w==",
            "dev": true,
            "dependencies": {
                "esutils": "^2.0.2"
            },
            "engines": {
                "node": ">=6.0.0"
            }
        },
        "node_modules/dom-helpers": {
            "version": "5.2.1",
            "resolved": "https://registry.npmjs.org/dom-helpers/-/dom-helpers-5.2.1.tgz",
            "integrity": "sha512-nRCa7CK3VTrM2NmGkIy4cbK7IZlgBE/PYMn55rrXefr5xXDP0LdtfPnblFDoVdcAfslJ7or6iqAUnx0CCGIWQA==",
            "dependencies": {
                "@babel/runtime": "^7.8.7",
                "csstype": "^3.0.2"
            }
        },
        "node_modules/dunder-proto": {
            "version": "1.0.1",
            "resolved": "https://registry.npmjs.org/dunder-proto/-/dunder-proto-1.0.1.tgz",
            "integrity": "sha512-KIN/nDJBQRcXw0MLVhZE9iQHmG68qAVIBg9CqmUYjmQIhgij9U5MFvrqkUL5FbtyyzZuOeOt0zdeRe4UY7ct+A==",
            "dev": true,
            "dependencies": {
                "call-bind-apply-helpers": "^1.0.1",
                "es-errors": "^1.3.0",
                "gopd": "^1.2.0"
            },
            "engines": {
                "node": ">= 0.4"
            }
        },
        "node_modules/eastasianwidth": {
            "version": "0.2.0",
            "resolved": "https://registry.npmjs.org/eastasianwidth/-/eastasianwidth-0.2.0.tgz",
            "integrity": "sha512-I88TYZWc9XiYHRQ4/3c5rjjfgkjhLyW2luGIheGERbNQ6OY7yTybanSpDXZa8y7VUP9YmDcYa+eyq4ca7iLqWA==",
            "dev": true
        },
        "node_modules/electron-to-chromium": {
            "version": "1.5.214",
            "resolved": "https://registry.npmjs.org/electron-to-chromium/-/electron-to-chromium-1.5.214.tgz",
            "integrity": "sha512-TpvUNdha+X3ybfU78NoQatKvQEm1oq3lf2QbnmCEdw+Bd9RuIAY+hJTvq1avzHM0f7EJfnH3vbCnbzKzisc/9Q==",
            "dev": true
        },
        "node_modules/emoji-regex": {
            "version": "9.2.2",
            "resolved": "https://registry.npmjs.org/emoji-regex/-/emoji-regex-9.2.2.tgz",
            "integrity": "sha512-L18DaJsXSUk2+42pv8mLs5jJT2hqFkFE4j21wOmgbUqsZ2hL72NsUU785g9RXgo3s0ZNgVl42TiHp3ZtOv/Vyg==",
            "dev": true
        },
        "node_modules/es-abstract": {
            "version": "1.24.0",
            "resolved": "https://registry.npmjs.org/es-abstract/-/es-abstract-1.24.0.tgz",
            "integrity": "sha512-WSzPgsdLtTcQwm4CROfS5ju2Wa1QQcVeT37jFjYzdFz1r9ahadC8B8/a4qxJxM+09F18iumCdRmlr96ZYkQvEg==",
            "dev": true,
            "dependencies": {
                "array-buffer-byte-length": "^1.0.2",
                "arraybuffer.prototype.slice": "^1.0.4",
                "available-typed-arrays": "^1.0.7",
                "call-bind": "^1.0.8",
                "call-bound": "^1.0.4",
                "data-view-buffer": "^1.0.2",
                "data-view-byte-length": "^1.0.2",
                "data-view-byte-offset": "^1.0.1",
                "es-define-property": "^1.0.1",
                "es-errors": "^1.3.0",
                "es-object-atoms": "^1.1.1",
                "es-set-tostringtag": "^2.1.0",
                "es-to-primitive": "^1.3.0",
                "function.prototype.name": "^1.1.8",
                "get-intrinsic": "^1.3.0",
                "get-proto": "^1.0.1",
                "get-symbol-description": "^1.1.0",
                "globalthis": "^1.0.4",
                "gopd": "^1.2.0",
                "has-property-descriptors": "^1.0.2",
                "has-proto": "^1.2.0",
                "has-symbols": "^1.1.0",
                "hasown": "^2.0.2",
                "internal-slot": "^1.1.0",
                "is-array-buffer": "^3.0.5",
                "is-callable": "^1.2.7",
                "is-data-view": "^1.0.2",
                "is-negative-zero": "^2.0.3",
                "is-regex": "^1.2.1",
                "is-set": "^2.0.3",
                "is-shared-array-buffer": "^1.0.4",
                "is-string": "^1.1.1",
                "is-typed-array": "^1.1.15",
                "is-weakref": "^1.1.1",
                "math-intrinsics": "^1.1.0",
                "object-inspect": "^1.13.4",
                "object-keys": "^1.1.1",
                "object.assign": "^4.1.7",
                "own-keys": "^1.0.1",
                "regexp.prototype.flags": "^1.5.4",
                "safe-array-concat": "^1.1.3",
                "safe-push-apply": "^1.0.0",
                "safe-regex-test": "^1.1.0",
                "set-proto": "^1.0.0",
                "stop-iteration-iterator": "^1.1.0",
                "string.prototype.trim": "^1.2.10",
                "string.prototype.trimend": "^1.0.9",
                "string.prototype.trimstart": "^1.0.8",
                "typed-array-buffer": "^1.0.3",
                "typed-array-byte-length": "^1.0.3",
                "typed-array-byte-offset": "^1.0.4",
                "typed-array-length": "^1.0.7",
                "unbox-primitive": "^1.1.0",
                "which-typed-array": "^1.1.19"
            },
            "engines": {
                "node": ">= 0.4"
            },
            "funding": {
                "url": "https://github.com/sponsors/ljharb"
            }
        },
        "node_modules/es-define-property": {
            "version": "1.0.1",
            "resolved": "https://registry.npmjs.org/es-define-property/-/es-define-property-1.0.1.tgz",
            "integrity": "sha512-e3nRfgfUZ4rNGL232gUgX06QNyyez04KdjFrF+LTRoOXmrOgFKDg4BCdsjW8EnT69eqdYGmRpJwiPVYNrCaW3g==",
            "dev": true,
            "engines": {
                "node": ">= 0.4"
            }
        },
        "node_modules/es-errors": {
            "version": "1.3.0",
            "resolved": "https://registry.npmjs.org/es-errors/-/es-errors-1.3.0.tgz",
            "integrity": "sha512-Zf5H2Kxt2xjTvbJvP2ZWLEICxA6j+hAmMzIlypy4xcBg1vKVnx89Wy0GbS+kf5cwCVFFzdCFh2XSCFNULS6csw==",
            "dev": true,
            "engines": {
                "node": ">= 0.4"
            }
        },
        "node_modules/es-iterator-helpers": {
            "version": "1.2.1",
            "resolved": "https://registry.npmjs.org/es-iterator-helpers/-/es-iterator-helpers-1.2.1.tgz",
            "integrity": "sha512-uDn+FE1yrDzyC0pCo961B2IHbdM8y/ACZsKD4dG6WqrjV53BADjwa7D+1aom2rsNVfLyDgU/eigvlJGJ08OQ4w==",
            "dev": true,
            "dependencies": {
                "call-bind": "^1.0.8",
                "call-bound": "^1.0.3",
                "define-properties": "^1.2.1",
                "es-abstract": "^1.23.6",
                "es-errors": "^1.3.0",
                "es-set-tostringtag": "^2.0.3",
                "function-bind": "^1.1.2",
                "get-intrinsic": "^1.2.6",
                "globalthis": "^1.0.4",
                "gopd": "^1.2.0",
                "has-property-descriptors": "^1.0.2",
                "has-proto": "^1.2.0",
                "has-symbols": "^1.1.0",
                "internal-slot": "^1.1.0",
                "iterator.prototype": "^1.1.4",
                "safe-array-concat": "^1.1.3"
            },
            "engines": {
                "node": ">= 0.4"
            }
        },
        "node_modules/es-object-atoms": {
            "version": "1.1.1",
            "resolved": "https://registry.npmjs.org/es-object-atoms/-/es-object-atoms-1.1.1.tgz",
            "integrity": "sha512-FGgH2h8zKNim9ljj7dankFPcICIK9Cp5bm+c2gQSYePhpaG5+esrLODihIorn+Pe6FGJzWhXQotPv73jTaldXA==",
            "dev": true,
            "dependencies": {
                "es-errors": "^1.3.0"
            },
            "engines": {
                "node": ">= 0.4"
            }
        },
        "node_modules/es-set-tostringtag": {
            "version": "2.1.0",
            "resolved": "https://registry.npmjs.org/es-set-tostringtag/-/es-set-tostringtag-2.1.0.tgz",
            "integrity": "sha512-j6vWzfrGVfyXxge+O0x5sh6cvxAog0a/4Rdd2K36zCMV5eJ+/+tOAngRO8cODMNWbVRdVlmGZQL2YS3yR8bIUA==",
            "dev": true,
            "dependencies": {
                "es-errors": "^1.3.0",
                "get-intrinsic": "^1.2.6",
                "has-tostringtag": "^1.0.2",
                "hasown": "^2.0.2"
            },
            "engines": {
                "node": ">= 0.4"
            }
        },
        "node_modules/es-shim-unscopables": {
            "version": "1.1.0",
            "resolved": "https://registry.npmjs.org/es-shim-unscopables/-/es-shim-unscopables-1.1.0.tgz",
            "integrity": "sha512-d9T8ucsEhh8Bi1woXCf+TIKDIROLG5WCkxg8geBCbvk22kzwC5G2OnXVMO6FUsvQlgUUXQ2itephWDLqDzbeCw==",
            "dev": true,
            "dependencies": {
                "hasown": "^2.0.2"
            },
            "engines": {
                "node": ">= 0.4"
            }
        },
        "node_modules/es-to-primitive": {
            "version": "1.3.0",
            "resolved": "https://registry.npmjs.org/es-to-primitive/-/es-to-primitive-1.3.0.tgz",
            "integrity": "sha512-w+5mJ3GuFL+NjVtJlvydShqE1eN3h3PbI7/5LAsYJP/2qtuMXjfL2LpHSRqo4b4eSF5K/DH1JXKUAHSB2UW50g==",
            "dev": true,
            "dependencies": {
                "is-callable": "^1.2.7",
                "is-date-object": "^1.0.5",
                "is-symbol": "^1.0.4"
            },
            "engines": {
                "node": ">= 0.4"
            },
            "funding": {
                "url": "https://github.com/sponsors/ljharb"
            }
        },
        "node_modules/escalade": {
            "version": "3.2.0",
            "resolved": "https://registry.npmjs.org/escalade/-/escalade-3.2.0.tgz",
            "integrity": "sha512-WUj2qlxaQtO4g6Pq5c29GTcWGDyd8itL8zTlipgECz3JesAiiOKotd8JU6otB3PACgG6xkJUyVhboMS+bje/jA==",
            "dev": true,
            "engines": {
                "node": ">=6"
            }
        },
        "node_modules/escape-string-regexp": {
            "version": "4.0.0",
            "resolved": "https://registry.npmjs.org/escape-string-regexp/-/escape-string-regexp-4.0.0.tgz",
            "integrity": "sha512-TtpcNJ3XAzx3Gq8sWRzJaVajRs0uVxA2YAkdb1jm2YkPz4G6egUFAyA3n5vtEIZefPk5Wa4UXbKuS5fKkJWdgA==",
            "dev": true,
            "engines": {
                "node": ">=10"
            },
            "funding": {
                "url": "https://github.com/sponsors/sindresorhus"
            }
        },
        "node_modules/eslint": {
            "version": "8.57.1",
            "resolved": "https://registry.npmjs.org/eslint/-/eslint-8.57.1.tgz",
            "integrity": "sha512-ypowyDxpVSYpkXr9WPv2PAZCtNip1Mv5KTW0SCurXv/9iOpcrH9PaqUElksqEB6pChqHGDRCFTyrZlGhnLNGiA==",
            "deprecated": "This version is no longer supported. Please see https://eslint.org/version-support for other options.",
            "dev": true,
            "dependencies": {
                "@eslint-community/eslint-utils": "^4.2.0",
                "@eslint-community/regexpp": "^4.6.1",
                "@eslint/eslintrc": "^2.1.4",
                "@eslint/js": "8.57.1",
                "@humanwhocodes/config-array": "^0.13.0",
                "@humanwhocodes/module-importer": "^1.0.1",
                "@nodelib/fs.walk": "^1.2.8",
                "@ungap/structured-clone": "^1.2.0",
                "ajv": "^6.12.4",
                "chalk": "^4.0.0",
                "cross-spawn": "^7.0.2",
                "debug": "^4.3.2",
                "doctrine": "^3.0.0",
                "escape-string-regexp": "^4.0.0",
                "eslint-scope": "^7.2.2",
                "eslint-visitor-keys": "^3.4.3",
                "espree": "^9.6.1",
                "esquery": "^1.4.2",
                "esutils": "^2.0.2",
                "fast-deep-equal": "^3.1.3",
                "file-entry-cache": "^6.0.1",
                "find-up": "^5.0.0",
                "glob-parent": "^6.0.2",
                "globals": "^13.19.0",
                "graphemer": "^1.4.0",
                "ignore": "^5.2.0",
                "imurmurhash": "^0.1.4",
                "is-glob": "^4.0.0",
                "is-path-inside": "^3.0.3",
                "js-yaml": "^4.1.0",
                "json-stable-stringify-without-jsonify": "^1.0.1",
                "levn": "^0.4.1",
                "lodash.merge": "^4.6.2",
                "minimatch": "^3.1.2",
                "natural-compare": "^1.4.0",
                "optionator": "^0.9.3",
                "strip-ansi": "^6.0.1",
                "text-table": "^0.2.0"
            },
            "bin": {
                "eslint": "bin/eslint.js"
            },
            "engines": {
                "node": "^12.22.0 || ^14.17.0 || >=16.0.0"
            },
            "funding": {
                "url": "https://opencollective.com/eslint"
            }
        },
        "node_modules/eslint-config-next": {
            "version": "14.0.0",
            "resolved": "https://registry.npmjs.org/eslint-config-next/-/eslint-config-next-14.0.0.tgz",
            "integrity": "sha512-jtXeE+/pGQ3h9n11QyyuPN50kO13GO5XvjU5ZRq6W+XTpOMjyobWmK2s7aowy0FtzA49krJzYzEU9s1RMwoJ6g==",
            "dev": true,
            "dependencies": {
                "@next/eslint-plugin-next": "14.0.0",
                "@rushstack/eslint-patch": "^1.3.3",
                "@typescript-eslint/parser": "^5.4.2 || ^6.0.0",
                "eslint-import-resolver-node": "^0.3.6",
                "eslint-import-resolver-typescript": "^3.5.2",
                "eslint-plugin-import": "^2.28.1",
                "eslint-plugin-jsx-a11y": "^6.7.1",
                "eslint-plugin-react": "^7.33.2",
                "eslint-plugin-react-hooks": "^4.5.0 || 5.0.0-canary-7118f5dd7-20230705"
            },
            "peerDependencies": {
                "eslint": "^7.23.0 || ^8.0.0",
                "typescript": ">=3.3.1"
            },
            "peerDependenciesMeta": {
                "typescript": {
                    "optional": true
                }
            }
        },
        "node_modules/eslint-import-resolver-node": {
            "version": "0.3.9",
            "resolved": "https://registry.npmjs.org/eslint-import-resolver-node/-/eslint-import-resolver-node-0.3.9.tgz",
            "integrity": "sha512-WFj2isz22JahUv+B788TlO3N6zL3nNJGU8CcZbPZvVEkBPaJdCV4vy5wyghty5ROFbCRnm132v8BScu5/1BQ8g==",
            "dev": true,
            "dependencies": {
                "debug": "^3.2.7",
                "is-core-module": "^2.13.0",
                "resolve": "^1.22.4"
            }
        },
        "node_modules/eslint-import-resolver-node/node_modules/debug": {
            "version": "3.2.7",
            "resolved": "https://registry.npmjs.org/debug/-/debug-3.2.7.tgz",
            "integrity": "sha512-CFjzYYAi4ThfiQvizrFQevTTXHtnCqWfe7x1AhgEscTz6ZbLbfoLRLPugTQyBth6f8ZERVUSyWHFD/7Wu4t1XQ==",
            "dev": true,
            "dependencies": {
                "ms": "^2.1.1"
            }
        },
        "node_modules/eslint-import-resolver-typescript": {
            "version": "3.10.1",
            "resolved": "https://registry.npmjs.org/eslint-import-resolver-typescript/-/eslint-import-resolver-typescript-3.10.1.tgz",
            "integrity": "sha512-A1rHYb06zjMGAxdLSkN2fXPBwuSaQ0iO5M/hdyS0Ajj1VBaRp0sPD3dn1FhME3c/JluGFbwSxyCfqdSbtQLAHQ==",
            "dev": true,
            "dependencies": {
                "@nolyfill/is-core-module": "1.0.39",
                "debug": "^4.4.0",
                "get-tsconfig": "^4.10.0",
                "is-bun-module": "^2.0.0",
                "stable-hash": "^0.0.5",
                "tinyglobby": "^0.2.13",
                "unrs-resolver": "^1.6.2"
            },
            "engines": {
                "node": "^14.18.0 || >=16.0.0"
            },
            "funding": {
                "url": "https://opencollective.com/eslint-import-resolver-typescript"
            },
            "peerDependencies": {
                "eslint": "*",
                "eslint-plugin-import": "*",
                "eslint-plugin-import-x": "*"
            },
            "peerDependenciesMeta": {
                "eslint-plugin-import": {
                    "optional": true
                },
                "eslint-plugin-import-x": {
                    "optional": true
                }
            }
        },
        "node_modules/eslint-module-utils": {
            "version": "2.12.1",
            "resolved": "https://registry.npmjs.org/eslint-module-utils/-/eslint-module-utils-2.12.1.tgz",
            "integrity": "sha512-L8jSWTze7K2mTg0vos/RuLRS5soomksDPoJLXIslC7c8Wmut3bx7CPpJijDcBZtxQ5lrbUdM+s0OlNbz0DCDNw==",
            "dev": true,
            "dependencies": {
                "debug": "^3.2.7"
            },
            "engines": {
                "node": ">=4"
            },
            "peerDependenciesMeta": {
                "eslint": {
                    "optional": true
                }
            }
        },
        "node_modules/eslint-module-utils/node_modules/debug": {
            "version": "3.2.7",
            "resolved": "https://registry.npmjs.org/debug/-/debug-3.2.7.tgz",
            "integrity": "sha512-CFjzYYAi4ThfiQvizrFQevTTXHtnCqWfe7x1AhgEscTz6ZbLbfoLRLPugTQyBth6f8ZERVUSyWHFD/7Wu4t1XQ==",
            "dev": true,
            "dependencies": {
                "ms": "^2.1.1"
            }
        },
        "node_modules/eslint-plugin-import": {
            "version": "2.32.0",
            "resolved": "https://registry.npmjs.org/eslint-plugin-import/-/eslint-plugin-import-2.32.0.tgz",
            "integrity": "sha512-whOE1HFo/qJDyX4SnXzP4N6zOWn79WhnCUY/iDR0mPfQZO8wcYE4JClzI2oZrhBnnMUCBCHZhO6VQyoBU95mZA==",
            "dev": true,
            "dependencies": {
                "@rtsao/scc": "^1.1.0",
                "array-includes": "^3.1.9",
                "array.prototype.findlastindex": "^1.2.6",
                "array.prototype.flat": "^1.3.3",
                "array.prototype.flatmap": "^1.3.3",
                "debug": "^3.2.7",
                "doctrine": "^2.1.0",
                "eslint-import-resolver-node": "^0.3.9",
                "eslint-module-utils": "^2.12.1",
                "hasown": "^2.0.2",
                "is-core-module": "^2.16.1",
                "is-glob": "^4.0.3",
                "minimatch": "^3.1.2",
                "object.fromentries": "^2.0.8",
                "object.groupby": "^1.0.3",
                "object.values": "^1.2.1",
                "semver": "^6.3.1",
                "string.prototype.trimend": "^1.0.9",
                "tsconfig-paths": "^3.15.0"
            },
            "engines": {
                "node": ">=4"
            },
            "peerDependencies": {
                "eslint": "^2 || ^3 || ^4 || ^5 || ^6 || ^7.2.0 || ^8 || ^9"
            }
        },
        "node_modules/eslint-plugin-import/node_modules/debug": {
            "version": "3.2.7",
            "resolved": "https://registry.npmjs.org/debug/-/debug-3.2.7.tgz",
            "integrity": "sha512-CFjzYYAi4ThfiQvizrFQevTTXHtnCqWfe7x1AhgEscTz6ZbLbfoLRLPugTQyBth6f8ZERVUSyWHFD/7Wu4t1XQ==",
            "dev": true,
            "dependencies": {
                "ms": "^2.1.1"
            }
        },
        "node_modules/eslint-plugin-import/node_modules/doctrine": {
            "version": "2.1.0",
            "resolved": "https://registry.npmjs.org/doctrine/-/doctrine-2.1.0.tgz",
            "integrity": "sha512-35mSku4ZXK0vfCuHEDAwt55dg2jNajHZ1odvF+8SSr82EsZY4QmXfuWso8oEd8zRhVObSN18aM0CjSdoBX7zIw==",
            "dev": true,
            "dependencies": {
                "esutils": "^2.0.2"
            },
            "engines": {
                "node": ">=0.10.0"
            }
        },
        "node_modules/eslint-plugin-import/node_modules/semver": {
            "version": "6.3.1",
            "resolved": "https://registry.npmjs.org/semver/-/semver-6.3.1.tgz",
            "integrity": "sha512-BR7VvDCVHO+q2xBEWskxS6DJE1qRnb7DxzUrogb71CWoSficBxYsiAGd+Kl0mmq/MprG9yArRkyrQxTO6XjMzA==",
            "dev": true,
            "bin": {
                "semver": "bin/semver.js"
            }
        },
        "node_modules/eslint-plugin-jsx-a11y": {
            "version": "6.10.2",
            "resolved": "https://registry.npmjs.org/eslint-plugin-jsx-a11y/-/eslint-plugin-jsx-a11y-6.10.2.tgz",
            "integrity": "sha512-scB3nz4WmG75pV8+3eRUQOHZlNSUhFNq37xnpgRkCCELU3XMvXAxLk1eqWWyE22Ki4Q01Fnsw9BA3cJHDPgn2Q==",
            "dev": true,
            "dependencies": {
                "aria-query": "^5.3.2",
                "array-includes": "^3.1.8",
                "array.prototype.flatmap": "^1.3.2",
                "ast-types-flow": "^0.0.8",
                "axe-core": "^4.10.0",
                "axobject-query": "^4.1.0",
                "damerau-levenshtein": "^1.0.8",
                "emoji-regex": "^9.2.2",
                "hasown": "^2.0.2",
                "jsx-ast-utils": "^3.3.5",
                "language-tags": "^1.0.9",
                "minimatch": "^3.1.2",
                "object.fromentries": "^2.0.8",
                "safe-regex-test": "^1.0.3",
                "string.prototype.includes": "^2.0.1"
            },
            "engines": {
                "node": ">=4.0"
            },
            "peerDependencies": {
                "eslint": "^3 || ^4 || ^5 || ^6 || ^7 || ^8 || ^9"
            }
        },
        "node_modules/eslint-plugin-react": {
            "version": "7.37.5",
            "resolved": "https://registry.npmjs.org/eslint-plugin-react/-/eslint-plugin-react-7.37.5.tgz",
            "integrity": "sha512-Qteup0SqU15kdocexFNAJMvCJEfa2xUKNV4CC1xsVMrIIqEy3SQ/rqyxCWNzfrd3/ldy6HMlD2e0JDVpDg2qIA==",
            "dev": true,
            "dependencies": {
                "array-includes": "^3.1.8",
                "array.prototype.findlast": "^1.2.5",
                "array.prototype.flatmap": "^1.3.3",
                "array.prototype.tosorted": "^1.1.4",
                "doctrine": "^2.1.0",
                "es-iterator-helpers": "^1.2.1",
                "estraverse": "^5.3.0",
                "hasown": "^2.0.2",
                "jsx-ast-utils": "^2.4.1 || ^3.0.0",
                "minimatch": "^3.1.2",
                "object.entries": "^1.1.9",
                "object.fromentries": "^2.0.8",
                "object.values": "^1.2.1",
                "prop-types": "^15.8.1",
                "resolve": "^2.0.0-next.5",
                "semver": "^6.3.1",
                "string.prototype.matchall": "^4.0.12",
                "string.prototype.repeat": "^1.0.0"
            },
            "engines": {
                "node": ">=4"
            },
            "peerDependencies": {
                "eslint": "^3 || ^4 || ^5 || ^6 || ^7 || ^8 || ^9.7"
            }
        },
        "node_modules/eslint-plugin-react-hooks": {
            "version": "5.0.0-canary-7118f5dd7-20230705",
            "resolved": "https://registry.npmjs.org/eslint-plugin-react-hooks/-/eslint-plugin-react-hooks-5.0.0-canary-7118f5dd7-20230705.tgz",
            "integrity": "sha512-AZYbMo/NW9chdL7vk6HQzQhT+PvTAEVqWk9ziruUoW2kAOcN5qNyelv70e0F1VNQAbvutOC9oc+xfWycI9FxDw==",
            "dev": true,
            "engines": {
                "node": ">=10"
            },
            "peerDependencies": {
                "eslint": "^3.0.0 || ^4.0.0 || ^5.0.0 || ^6.0.0 || ^7.0.0 || ^8.0.0-0"
            }
        },
        "node_modules/eslint-plugin-react/node_modules/doctrine": {
            "version": "2.1.0",
            "resolved": "https://registry.npmjs.org/doctrine/-/doctrine-2.1.0.tgz",
            "integrity": "sha512-35mSku4ZXK0vfCuHEDAwt55dg2jNajHZ1odvF+8SSr82EsZY4QmXfuWso8oEd8zRhVObSN18aM0CjSdoBX7zIw==",
            "dev": true,
            "dependencies": {
                "esutils": "^2.0.2"
            },
            "engines": {
                "node": ">=0.10.0"
            }
        },
        "node_modules/eslint-plugin-react/node_modules/resolve": {
            "version": "2.0.0-next.5",
            "resolved": "https://registry.npmjs.org/resolve/-/resolve-2.0.0-next.5.tgz",
            "integrity": "sha512-U7WjGVG9sH8tvjW5SmGbQuui75FiyjAX72HX15DwBBwF9dNiQZRQAg9nnPhYy+TUnE0+VcrttuvNI8oSxZcocA==",
            "dev": true,
            "dependencies": {
                "is-core-module": "^2.13.0",
                "path-parse": "^1.0.7",
                "supports-preserve-symlinks-flag": "^1.0.0"
            },
            "bin": {
                "resolve": "bin/resolve"
            },
            "funding": {
                "url": "https://github.com/sponsors/ljharb"
            }
        },
        "node_modules/eslint-plugin-react/node_modules/semver": {
            "version": "6.3.1",
            "resolved": "https://registry.npmjs.org/semver/-/semver-6.3.1.tgz",
            "integrity": "sha512-BR7VvDCVHO+q2xBEWskxS6DJE1qRnb7DxzUrogb71CWoSficBxYsiAGd+Kl0mmq/MprG9yArRkyrQxTO6XjMzA==",
            "dev": true,
            "bin": {
                "semver": "bin/semver.js"
            }
        },
        "node_modules/eslint-scope": {
            "version": "7.2.2",
            "resolved": "https://registry.npmjs.org/eslint-scope/-/eslint-scope-7.2.2.tgz",
            "integrity": "sha512-dOt21O7lTMhDM+X9mB4GX+DZrZtCUJPL/wlcTqxyrx5IvO0IYtILdtrQGQp+8n5S0gwSVmOf9NQrjMOgfQZlIg==",
            "dev": true,
            "dependencies": {
                "esrecurse": "^4.3.0",
                "estraverse": "^5.2.0"
            },
            "engines": {
                "node": "^12.22.0 || ^14.17.0 || >=16.0.0"
            },
            "funding": {
                "url": "https://opencollective.com/eslint"
            }
        },
        "node_modules/eslint-visitor-keys": {
            "version": "3.4.3",
            "resolved": "https://registry.npmjs.org/eslint-visitor-keys/-/eslint-visitor-keys-3.4.3.tgz",
            "integrity": "sha512-wpc+LXeiyiisxPlEkUzU6svyS1frIO3Mgxj1fdy7Pm8Ygzguax2N3Fa/D/ag1WqbOprdI+uY6wMUl8/a2G+iag==",
            "dev": true,
            "engines": {
                "node": "^12.22.0 || ^14.17.0 || >=16.0.0"
            },
            "funding": {
                "url": "https://opencollective.com/eslint"
            }
        },
        "node_modules/espree": {
            "version": "9.6.1",
            "resolved": "https://registry.npmjs.org/espree/-/espree-9.6.1.tgz",
            "integrity": "sha512-oruZaFkjorTpF32kDSI5/75ViwGeZginGGy2NoOSg3Q9bnwlnmDm4HLnkl0RE3n+njDXR037aY1+x58Z/zFdwQ==",
            "dev": true,
            "dependencies": {
                "acorn": "^8.9.0",
                "acorn-jsx": "^5.3.2",
                "eslint-visitor-keys": "^3.4.1"
            },
            "engines": {
                "node": "^12.22.0 || ^14.17.0 || >=16.0.0"
            },
            "funding": {
                "url": "https://opencollective.com/eslint"
            }
        },
        "node_modules/esquery": {
            "version": "1.6.0",
            "resolved": "https://registry.npmjs.org/esquery/-/esquery-1.6.0.tgz",
            "integrity": "sha512-ca9pw9fomFcKPvFLXhBKUK90ZvGibiGOvRJNbjljY7s7uq/5YO4BOzcYtJqExdx99rF6aAcnRxHmcUHcz6sQsg==",
            "dev": true,
            "dependencies": {
                "estraverse": "^5.1.0"
            },
            "engines": {
                "node": ">=0.10"
            }
        },
        "node_modules/esrecurse": {
            "version": "4.3.0",
            "resolved": "https://registry.npmjs.org/esrecurse/-/esrecurse-4.3.0.tgz",
            "integrity": "sha512-KmfKL3b6G+RXvP8N1vr3Tq1kL/oCFgn2NYXEtqP8/L3pKapUA4G8cFVaoF3SU323CD4XypR/ffioHmkti6/Tag==",
            "dev": true,
            "dependencies": {
                "estraverse": "^5.2.0"
            },
            "engines": {
                "node": ">=4.0"
            }
        },
        "node_modules/estraverse": {
            "version": "5.3.0",
            "resolved": "https://registry.npmjs.org/estraverse/-/estraverse-5.3.0.tgz",
            "integrity": "sha512-MMdARuVEQziNTeJD8DgMqmhwR11BRQ/cBP+pLtYdSTnf3MIO8fFeiINEbX36ZdNlfU/7A9f3gUw49B3oQsvwBA==",
            "dev": true,
            "engines": {
                "node": ">=4.0"
            }
        },
        "node_modules/esutils": {
            "version": "2.0.3",
            "resolved": "https://registry.npmjs.org/esutils/-/esutils-2.0.3.tgz",
            "integrity": "sha512-kVscqXk4OCp68SZ0dkgEKVi6/8ij300KBWTJq32P/dYeWTSwK41WyTxalN1eRmA5Z9UU/LX9D7FWSmV9SAYx6g==",
            "dev": true,
            "engines": {
                "node": ">=0.10.0"
            }
        },
        "node_modules/eventemitter3": {
            "version": "4.0.7",
            "resolved": "https://registry.npmjs.org/eventemitter3/-/eventemitter3-4.0.7.tgz",
            "integrity": "sha512-8guHBZCwKnFhYdHr2ysuRWErTwhoN2X8XELRlrRwpmfeY2jjuUN4taQMsULKUVo1K4DvZl+0pgfyoysHxvmvEw=="
        },
        "node_modules/fast-deep-equal": {
            "version": "3.1.3",
            "resolved": "https://registry.npmjs.org/fast-deep-equal/-/fast-deep-equal-3.1.3.tgz",
            "integrity": "sha512-f3qQ9oQy9j2AhBe/H9VC91wLmKBCCU/gDOnKNAYG5hswO7BLKj09Hc5HYNz9cGI++xlpDCIgDaitVs03ATR84Q==",
            "dev": true
        },
        "node_modules/fast-equals": {
            "version": "5.2.2",
            "resolved": "https://registry.npmjs.org/fast-equals/-/fast-equals-5.2.2.tgz",
            "integrity": "sha512-V7/RktU11J3I36Nwq2JnZEM7tNm17eBJz+u25qdxBZeCKiX6BkVSZQjwWIr+IobgnZy+ag73tTZgZi7tr0LrBw==",
            "engines": {
                "node": ">=6.0.0"
            }
        },
        "node_modules/fast-glob": {
            "version": "3.3.3",
            "resolved": "https://registry.npmjs.org/fast-glob/-/fast-glob-3.3.3.tgz",
            "integrity": "sha512-7MptL8U0cqcFdzIzwOTHoilX9x5BrNqye7Z/LuC7kCMRio1EMSyqRK3BEAUD7sXRq4iT4AzTVuZdhgQ2TCvYLg==",
            "dev": true,
            "dependencies": {
                "@nodelib/fs.stat": "^2.0.2",
                "@nodelib/fs.walk": "^1.2.3",
                "glob-parent": "^5.1.2",
                "merge2": "^1.3.0",
                "micromatch": "^4.0.8"
            },
            "engines": {
                "node": ">=8.6.0"
            }
        },
        "node_modules/fast-glob/node_modules/glob-parent": {
            "version": "5.1.2",
            "resolved": "https://registry.npmjs.org/glob-parent/-/glob-parent-5.1.2.tgz",
            "integrity": "sha512-AOIgSQCepiJYwP3ARnGx+5VnTu2HBYdzbGP45eLw1vr3zB3vZLeyed1sC9hnbcOc9/SrMyM5RPQrkGz4aS9Zow==",
            "dev": true,
            "dependencies": {
                "is-glob": "^4.0.1"
            },
            "engines": {
                "node": ">= 6"
            }
        },
        "node_modules/fast-json-stable-stringify": {
            "version": "2.1.0",
            "resolved": "https://registry.npmjs.org/fast-json-stable-stringify/-/fast-json-stable-stringify-2.1.0.tgz",
            "integrity": "sha512-lhd/wF+Lk98HZoTCtlVraHtfh5XYijIjalXck7saUtuanSDyLMxnHhSXEDJqHxD7msR8D0uCmqlkwjCV8xvwHw==",
            "dev": true
        },
        "node_modules/fast-levenshtein": {
            "version": "2.0.6",
            "resolved": "https://registry.npmjs.org/fast-levenshtein/-/fast-levenshtein-2.0.6.tgz",
            "integrity": "sha512-DCXu6Ifhqcks7TZKY3Hxp3y6qphY5SJZmrWMDrKcERSOXWQdMhU9Ig/PYrzyw/ul9jOIyh0N4M0tbC5hodg8dw==",
            "dev": true
        },
        "node_modules/fastq": {
            "version": "1.19.1",
            "resolved": "https://registry.npmjs.org/fastq/-/fastq-1.19.1.tgz",
            "integrity": "sha512-GwLTyxkCXjXbxqIhTsMI2Nui8huMPtnxg7krajPJAjnEG/iiOS7i+zCtWGZR9G0NBKbXKh6X9m9UIsYX/N6vvQ==",
            "dev": true,
            "dependencies": {
                "reusify": "^1.0.4"
            }
        },
        "node_modules/file-entry-cache": {
            "version": "6.0.1",
            "resolved": "https://registry.npmjs.org/file-entry-cache/-/file-entry-cache-6.0.1.tgz",
            "integrity": "sha512-7Gps/XWymbLk2QLYK4NzpMOrYjMhdIxXuIvy2QBsLE6ljuodKvdkWs/cpyJJ3CVIVpH0Oi1Hvg1ovbMzLdFBBg==",
            "dev": true,
            "dependencies": {
                "flat-cache": "^3.0.4"
            },
            "engines": {
                "node": "^10.12.0 || >=12.0.0"
            }
        },
        "node_modules/file-selector": {
            "version": "2.1.2",
            "resolved": "https://registry.npmjs.org/file-selector/-/file-selector-2.1.2.tgz",
            "integrity": "sha512-QgXo+mXTe8ljeqUFaX3QVHc5osSItJ/Km+xpocx0aSqWGMSCf6qYs/VnzZgS864Pjn5iceMRFigeAV7AfTlaig==",
            "dependencies": {
                "tslib": "^2.7.0"
            },
            "engines": {
                "node": ">= 12"
            }
        },
        "node_modules/fill-range": {
            "version": "7.1.1",
            "resolved": "https://registry.npmjs.org/fill-range/-/fill-range-7.1.1.tgz",
            "integrity": "sha512-YsGpe3WHLK8ZYi4tWDg2Jy3ebRz2rXowDxnld4bkQB00cc/1Zw9AWnC0i9ztDJitivtQvaI9KaLyKrc+hBW0yg==",
            "dev": true,
            "dependencies": {
                "to-regex-range": "^5.0.1"
            },
            "engines": {
                "node": ">=8"
            }
        },
        "node_modules/find-up": {
            "version": "5.0.0",
            "resolved": "https://registry.npmjs.org/find-up/-/find-up-5.0.0.tgz",
            "integrity": "sha512-78/PXT1wlLLDgTzDs7sjq9hzz0vXD+zn+7wypEe4fXQxCmdmqfGsEPQxmiCSQI3ajFV91bVSsvNtrJRiW6nGng==",
            "dev": true,
            "dependencies": {
                "locate-path": "^6.0.0",
                "path-exists": "^4.0.0"
            },
            "engines": {
                "node": ">=10"
            },
            "funding": {
                "url": "https://github.com/sponsors/sindresorhus"
            }
        },
        "node_modules/flat-cache": {
            "version": "3.2.0",
            "resolved": "https://registry.npmjs.org/flat-cache/-/flat-cache-3.2.0.tgz",
            "integrity": "sha512-CYcENa+FtcUKLmhhqyctpclsq7QF38pKjZHsGNiSQF5r4FtoKDWabFDl3hzaEQMvT1LHEysw5twgLvpYYb4vbw==",
            "dev": true,
            "dependencies": {
                "flatted": "^3.2.9",
                "keyv": "^4.5.3",
                "rimraf": "^3.0.2"
            },
            "engines": {
                "node": "^10.12.0 || >=12.0.0"
            }
        },
        "node_modules/flatted": {
            "version": "3.3.3",
            "resolved": "https://registry.npmjs.org/flatted/-/flatted-3.3.3.tgz",
            "integrity": "sha512-GX+ysw4PBCz0PzosHDepZGANEuFCMLrnRTiEy9McGjmkCQYwRq4A/X786G/fjM/+OjsWSU1ZrY5qyARZmO/uwg==",
            "dev": true
        },
        "node_modules/for-each": {
            "version": "0.3.5",
            "resolved": "https://registry.npmjs.org/for-each/-/for-each-0.3.5.tgz",
            "integrity": "sha512-dKx12eRCVIzqCxFGplyFKJMPvLEWgmNtUrpTiJIR5u97zEhRG8ySrtboPHZXx7daLxQVrl643cTzbab2tkQjxg==",
            "dev": true,
            "dependencies": {
                "is-callable": "^1.2.7"
            },
            "engines": {
                "node": ">= 0.4"
            },
            "funding": {
                "url": "https://github.com/sponsors/ljharb"
            }
        },
        "node_modules/foreground-child": {
            "version": "3.3.1",
            "resolved": "https://registry.npmjs.org/foreground-child/-/foreground-child-3.3.1.tgz",
            "integrity": "sha512-gIXjKqtFuWEgzFRJA9WCQeSJLZDjgJUOMCMzxtvFq/37KojM1BFGufqsCy0r4qSQmYLsZYMeyRqzIWOMup03sw==",
            "dev": true,
            "dependencies": {
                "cross-spawn": "^7.0.6",
                "signal-exit": "^4.0.1"
            },
            "engines": {
                "node": ">=14"
            },
            "funding": {
                "url": "https://github.com/sponsors/isaacs"
            }
        },
        "node_modules/frac": {
            "version": "1.1.2",
            "resolved": "https://registry.npmjs.org/frac/-/frac-1.1.2.tgz",
            "integrity": "sha512-w/XBfkibaTl3YDqASwfDUqkna4Z2p9cFSr1aHDt0WoMTECnRfBOv2WArlZILlqgWlmdIlALXGpM2AOhEk5W3IA==",
            "engines": {
                "node": ">=0.8"
            }
        },
        "node_modules/fraction.js": {
            "version": "4.3.7",
            "resolved": "https://registry.npmjs.org/fraction.js/-/fraction.js-4.3.7.tgz",
            "integrity": "sha512-ZsDfxO51wGAXREY55a7la9LScWpwv9RxIrYABrlvOFBlH/ShPnrtsXeuUIfXKKOVicNxQ+o8JTbJvjS4M89yew==",
            "dev": true,
            "engines": {
                "node": "*"
            },
            "funding": {
                "type": "patreon",
                "url": "https://github.com/sponsors/rawify"
            }
        },
        "node_modules/fs.realpath": {
            "version": "1.0.0",
            "resolved": "https://registry.npmjs.org/fs.realpath/-/fs.realpath-1.0.0.tgz",
            "integrity": "sha512-OO0pH2lK6a0hZnAdau5ItzHPI6pUlvI7jMVnxUQRtw4owF2wk8lOSabtGDCTP4Ggrg2MbGnWO9X8K1t4+fGMDw==",
            "dev": true
        },
        "node_modules/fsevents": {
            "version": "2.3.3",
            "resolved": "https://registry.npmjs.org/fsevents/-/fsevents-2.3.3.tgz",
            "integrity": "sha512-5xoDfX+fL7faATnagmWPpbFtwh/R77WmMMqqHGS65C3vvB0YHrgF+B1YmZ3441tMj5n63k0212XNoJwzlhffQw==",
            "dev": true,
            "hasInstallScript": true,
            "optional": true,
            "os": [
                "darwin"
            ],
            "engines": {
                "node": "^8.16.0 || ^10.6.0 || >=11.0.0"
            }
        },
        "node_modules/function-bind": {
            "version": "1.1.2",
            "resolved": "https://registry.npmjs.org/function-bind/-/function-bind-1.1.2.tgz",
            "integrity": "sha512-7XHNxH7qX9xG5mIwxkhumTox/MIRNcOgDrxWsMt2pAr23WHp6MrRlN7FBSFpCpr+oVO0F744iUgR82nJMfG2SA==",
            "dev": true,
            "funding": {
                "url": "https://github.com/sponsors/ljharb"
            }
        },
        "node_modules/function.prototype.name": {
            "version": "1.1.8",
            "resolved": "https://registry.npmjs.org/function.prototype.name/-/function.prototype.name-1.1.8.tgz",
            "integrity": "sha512-e5iwyodOHhbMr/yNrc7fDYG4qlbIvI5gajyzPnb5TCwyhjApznQh1BMFou9b30SevY43gCJKXycoCBjMbsuW0Q==",
            "dev": true,
            "dependencies": {
                "call-bind": "^1.0.8",
                "call-bound": "^1.0.3",
                "define-properties": "^1.2.1",
                "functions-have-names": "^1.2.3",
                "hasown": "^2.0.2",
                "is-callable": "^1.2.7"
            },
            "engines": {
                "node": ">= 0.4"
            },
            "funding": {
                "url": "https://github.com/sponsors/ljharb"
            }
        },
        "node_modules/functions-have-names": {
            "version": "1.2.3",
            "resolved": "https://registry.npmjs.org/functions-have-names/-/functions-have-names-1.2.3.tgz",
            "integrity": "sha512-xckBUXyTIqT97tq2x2AMb+g163b5JFysYk0x4qxNFwbfQkmNZoiRHb6sPzI9/QV33WeuvVYBUIiD4NzNIyqaRQ==",
            "dev": true,
            "funding": {
                "url": "https://github.com/sponsors/ljharb"
            }
        },
        "node_modules/get-intrinsic": {
            "version": "1.3.0",
            "resolved": "https://registry.npmjs.org/get-intrinsic/-/get-intrinsic-1.3.0.tgz",
            "integrity": "sha512-9fSjSaos/fRIVIp+xSJlE6lfwhES7LNtKaCBIamHsjr2na1BiABJPo0mOjjz8GJDURarmCPGqaiVg5mfjb98CQ==",
            "dev": true,
            "dependencies": {
                "call-bind-apply-helpers": "^1.0.2",
                "es-define-property": "^1.0.1",
                "es-errors": "^1.3.0",
                "es-object-atoms": "^1.1.1",
                "function-bind": "^1.1.2",
                "get-proto": "^1.0.1",
                "gopd": "^1.2.0",
                "has-symbols": "^1.1.0",
                "hasown": "^2.0.2",
                "math-intrinsics": "^1.1.0"
            },
            "engines": {
                "node": ">= 0.4"
            },
            "funding": {
                "url": "https://github.com/sponsors/ljharb"
            }
        },
        "node_modules/get-nonce": {
            "version": "1.0.1",
            "resolved": "https://registry.npmjs.org/get-nonce/-/get-nonce-1.0.1.tgz",
            "integrity": "sha512-FJhYRoDaiatfEkUK8HKlicmu/3SGFD51q3itKDGoSTysQJBnfOcxU5GxnhE1E6soB76MbT0MBtnKJuXyAx+96Q==",
            "engines": {
                "node": ">=6"
            }
        },
        "node_modules/get-proto": {
            "version": "1.0.1",
            "resolved": "https://registry.npmjs.org/get-proto/-/get-proto-1.0.1.tgz",
            "integrity": "sha512-sTSfBjoXBp89JvIKIefqw7U2CCebsc74kiY6awiGogKtoSGbgjYE/G/+l9sF3MWFPNc9IcoOC4ODfKHfxFmp0g==",
            "dev": true,
            "dependencies": {
                "dunder-proto": "^1.0.1",
                "es-object-atoms": "^1.0.0"
            },
            "engines": {
                "node": ">= 0.4"
            }
        },
        "node_modules/get-symbol-description": {
            "version": "1.1.0",
            "resolved": "https://registry.npmjs.org/get-symbol-description/-/get-symbol-description-1.1.0.tgz",
            "integrity": "sha512-w9UMqWwJxHNOvoNzSJ2oPF5wvYcvP7jUvYzhp67yEhTi17ZDBBC1z9pTdGuzjD+EFIqLSYRweZjqfiPzQ06Ebg==",
            "dev": true,
            "dependencies": {
                "call-bound": "^1.0.3",
                "es-errors": "^1.3.0",
                "get-intrinsic": "^1.2.6"
            },
            "engines": {
                "node": ">= 0.4"
            },
            "funding": {
                "url": "https://github.com/sponsors/ljharb"
            }
        },
        "node_modules/get-tsconfig": {
            "version": "4.10.1",
            "resolved": "https://registry.npmjs.org/get-tsconfig/-/get-tsconfig-4.10.1.tgz",
            "integrity": "sha512-auHyJ4AgMz7vgS8Hp3N6HXSmlMdUyhSUrfBF16w153rxtLIEOE+HGqaBppczZvnHLqQJfiHotCYpNhl0lUROFQ==",
            "dev": true,
            "dependencies": {
                "resolve-pkg-maps": "^1.0.0"
            },
            "funding": {
                "url": "https://github.com/privatenumber/get-tsconfig?sponsor=1"
            }
        },
        "node_modules/glob": {
            "version": "7.1.7",
            "resolved": "https://registry.npmjs.org/glob/-/glob-7.1.7.tgz",
            "integrity": "sha512-OvD9ENzPLbegENnYP5UUfJIirTg4+XwMWGaQfQTY0JenxNvvIKP3U3/tAQSPIu/lHxXYSZmpXlUHeqAIdKzBLQ==",
            "deprecated": "Glob versions prior to v9 are no longer supported",
            "dev": true,
            "dependencies": {
                "fs.realpath": "^1.0.0",
                "inflight": "^1.0.4",
                "inherits": "2",
                "minimatch": "^3.0.4",
                "once": "^1.3.0",
                "path-is-absolute": "^1.0.0"
            },
            "engines": {
                "node": "*"
            },
            "funding": {
                "url": "https://github.com/sponsors/isaacs"
            }
        },
        "node_modules/glob-parent": {
            "version": "6.0.2",
            "resolved": "https://registry.npmjs.org/glob-parent/-/glob-parent-6.0.2.tgz",
            "integrity": "sha512-XxwI8EOhVQgWp6iDL+3b0r86f4d6AX6zSU55HfB4ydCEuXLXc5FcYeOu+nnGftS4TEju/11rt4KJPTMgbfmv4A==",
            "dev": true,
            "dependencies": {
                "is-glob": "^4.0.3"
            },
            "engines": {
                "node": ">=10.13.0"
            }
        },
        "node_modules/glob-to-regexp": {
            "version": "0.4.1",
            "resolved": "https://registry.npmjs.org/glob-to-regexp/-/glob-to-regexp-0.4.1.tgz",
            "integrity": "sha512-lkX1HJXwyMcprw/5YUZc2s7DrpAiHB21/V+E1rHUrVNokkvB6bqMzT0VfV6/86ZNabt1k14YOIaT7nDvOX3Iiw=="
        },
        "node_modules/globals": {
            "version": "13.24.0",
            "resolved": "https://registry.npmjs.org/globals/-/globals-13.24.0.tgz",
            "integrity": "sha512-AhO5QUcj8llrbG09iWhPU2B204J1xnPeL8kQmVorSsy+Sjj1sk8gIyh6cUocGmH4L0UuhAJy+hJMRA4mgA4mFQ==",
            "dev": true,
            "dependencies": {
                "type-fest": "^0.20.2"
            },
            "engines": {
                "node": ">=8"
            },
            "funding": {
                "url": "https://github.com/sponsors/sindresorhus"
            }
        },
        "node_modules/globalthis": {
            "version": "1.0.4",
            "resolved": "https://registry.npmjs.org/globalthis/-/globalthis-1.0.4.tgz",
            "integrity": "sha512-DpLKbNU4WylpxJykQujfCcwYWiV/Jhm50Goo0wrVILAv5jOr9d+H+UR3PhSCD2rCCEIg0uc+G+muBTwD54JhDQ==",
            "dev": true,
            "dependencies": {
                "define-properties": "^1.2.1",
                "gopd": "^1.0.1"
            },
            "engines": {
                "node": ">= 0.4"
            },
            "funding": {
                "url": "https://github.com/sponsors/ljharb"
            }
        },
        "node_modules/globby": {
            "version": "11.1.0",
            "resolved": "https://registry.npmjs.org/globby/-/globby-11.1.0.tgz",
            "integrity": "sha512-jhIXaOzy1sb8IyocaruWSn1TjmnBVs8Ayhcy83rmxNJ8q2uWKCAj3CnJY+KpGSXCueAPc0i05kVvVKtP1t9S3g==",
            "dev": true,
            "dependencies": {
                "array-union": "^2.1.0",
                "dir-glob": "^3.0.1",
                "fast-glob": "^3.2.9",
                "ignore": "^5.2.0",
                "merge2": "^1.4.1",
                "slash": "^3.0.0"
            },
            "engines": {
                "node": ">=10"
            },
            "funding": {
                "url": "https://github.com/sponsors/sindresorhus"
            }
        },
        "node_modules/gopd": {
            "version": "1.2.0",
            "resolved": "https://registry.npmjs.org/gopd/-/gopd-1.2.0.tgz",
            "integrity": "sha512-ZUKRh6/kUFoAiTAtTYPZJ3hw9wNxx+BIBOijnlG9PnrJsCcSjs1wyyD6vJpaYtgnzDrKYRSqf3OO6Rfa93xsRg==",
            "dev": true,
            "engines": {
                "node": ">= 0.4"
            },
            "funding": {
                "url": "https://github.com/sponsors/ljharb"
            }
        },
        "node_modules/graceful-fs": {
            "version": "4.2.11",
            "resolved": "https://registry.npmjs.org/graceful-fs/-/graceful-fs-4.2.11.tgz",
            "integrity": "sha512-RbJ5/jmFcNNCcDV5o9eTnBLJ/HszWV0P73bc+Ff4nS/rJj+YaS6IGyiOL0VoBYX+l1Wrl3k63h/KrH+nhJ0XvQ=="
        },
        "node_modules/graphemer": {
            "version": "1.4.0",
            "resolved": "https://registry.npmjs.org/graphemer/-/graphemer-1.4.0.tgz",
            "integrity": "sha512-EtKwoO6kxCL9WO5xipiHTZlSzBm7WLT627TqC/uVRd0HKmq8NXyebnNYxDoBi7wt8eTWrUrKXCOVaFq9x1kgag==",
            "dev": true
        },
        "node_modules/has-bigints": {
            "version": "1.1.0",
            "resolved": "https://registry.npmjs.org/has-bigints/-/has-bigints-1.1.0.tgz",
            "integrity": "sha512-R3pbpkcIqv2Pm3dUwgjclDRVmWpTJW2DcMzcIhEXEx1oh/CEMObMm3KLmRJOdvhM7o4uQBnwr8pzRK2sJWIqfg==",
            "dev": true,
            "engines": {
                "node": ">= 0.4"
            },
            "funding": {
                "url": "https://github.com/sponsors/ljharb"
            }
        },
        "node_modules/has-flag": {
            "version": "4.0.0",
            "resolved": "https://registry.npmjs.org/has-flag/-/has-flag-4.0.0.tgz",
            "integrity": "sha512-EykJT/Q1KjTWctppgIAgfSO0tKVuZUjhgMr17kqTumMl6Afv3EISleU7qZUzoXDFTAHTDC4NOoG/ZxU3EvlMPQ==",
            "dev": true,
            "engines": {
                "node": ">=8"
            }
        },
        "node_modules/has-property-descriptors": {
            "version": "1.0.2",
            "resolved": "https://registry.npmjs.org/has-property-descriptors/-/has-property-descriptors-1.0.2.tgz",
            "integrity": "sha512-55JNKuIW+vq4Ke1BjOTjM2YctQIvCT7GFzHwmfZPGo5wnrgkid0YQtnAleFSqumZm4az3n2BS+erby5ipJdgrg==",
            "dev": true,
            "dependencies": {
                "es-define-property": "^1.0.0"
            },
            "funding": {
                "url": "https://github.com/sponsors/ljharb"
            }
        },
        "node_modules/has-proto": {
            "version": "1.2.0",
            "resolved": "https://registry.npmjs.org/has-proto/-/has-proto-1.2.0.tgz",
            "integrity": "sha512-KIL7eQPfHQRC8+XluaIw7BHUwwqL19bQn4hzNgdr+1wXoU0KKj6rufu47lhY7KbJR2C6T6+PfyN0Ea7wkSS+qQ==",
            "dev": true,
            "dependencies": {
                "dunder-proto": "^1.0.0"
            },
            "engines": {
                "node": ">= 0.4"
            },
            "funding": {
                "url": "https://github.com/sponsors/ljharb"
            }
        },
        "node_modules/has-symbols": {
            "version": "1.1.0",
            "resolved": "https://registry.npmjs.org/has-symbols/-/has-symbols-1.1.0.tgz",
            "integrity": "sha512-1cDNdwJ2Jaohmb3sg4OmKaMBwuC48sYni5HUw2DvsC8LjGTLK9h+eb1X6RyuOHe4hT0ULCW68iomhjUoKUqlPQ==",
            "dev": true,
            "engines": {
                "node": ">= 0.4"
            },
            "funding": {
                "url": "https://github.com/sponsors/ljharb"
            }
        },
        "node_modules/has-tostringtag": {
            "version": "1.0.2",
            "resolved": "https://registry.npmjs.org/has-tostringtag/-/has-tostringtag-1.0.2.tgz",
            "integrity": "sha512-NqADB8VjPFLM2V0VvHUewwwsw0ZWBaIdgo+ieHtK3hasLz4qeCRjYcqfB6AQrBggRKppKF8L52/VqdVsO47Dlw==",
            "dev": true,
            "dependencies": {
                "has-symbols": "^1.0.3"
            },
            "engines": {
                "node": ">= 0.4"
            },
            "funding": {
                "url": "https://github.com/sponsors/ljharb"
            }
        },
        "node_modules/hasown": {
            "version": "2.0.2",
            "resolved": "https://registry.npmjs.org/hasown/-/hasown-2.0.2.tgz",
            "integrity": "sha512-0hJU9SCPvmMzIBdZFqNPXWa6dqh7WdH0cII9y+CyS8rG3nL48Bclra9HmKhVVUHyPWNH5Y7xDwAB7bfgSjkUMQ==",
            "dev": true,
            "dependencies": {
                "function-bind": "^1.1.2"
            },
            "engines": {
                "node": ">= 0.4"
            }
        },
        "node_modules/ignore": {
            "version": "5.3.2",
            "resolved": "https://registry.npmjs.org/ignore/-/ignore-5.3.2.tgz",
            "integrity": "sha512-hsBTNUqQTDwkWtcdYI2i06Y/nUBEsNEDJKjWdigLvegy8kDuJAS8uRlpkkcQpyEXL0Z/pjDy5HBmMjRCJ2gq+g==",
            "dev": true,
            "engines": {
                "node": ">= 4"
            }
        },
        "node_modules/import-fresh": {
            "version": "3.3.1",
            "resolved": "https://registry.npmjs.org/import-fresh/-/import-fresh-3.3.1.tgz",
            "integrity": "sha512-TR3KfrTZTYLPB6jUjfx6MF9WcWrHL9su5TObK4ZkYgBdWKPOFoSoQIdEuTuR82pmtxH2spWG9h6etwfr1pLBqQ==",
            "dev": true,
            "dependencies": {
                "parent-module": "^1.0.0",
                "resolve-from": "^4.0.0"
            },
            "engines": {
                "node": ">=6"
            },
            "funding": {
                "url": "https://github.com/sponsors/sindresorhus"
            }
        },
        "node_modules/imurmurhash": {
            "version": "0.1.4",
            "resolved": "https://registry.npmjs.org/imurmurhash/-/imurmurhash-0.1.4.tgz",
            "integrity": "sha512-JmXMZ6wuvDmLiHEml9ykzqO6lwFbof0GG4IkcGaENdCRDDmMVnny7s5HsIgHCbaq0w2MyPhDqkhTUgS2LU2PHA==",
            "dev": true,
            "engines": {
                "node": ">=0.8.19"
            }
        },
        "node_modules/inflight": {
            "version": "1.0.6",
            "resolved": "https://registry.npmjs.org/inflight/-/inflight-1.0.6.tgz",
            "integrity": "sha512-k92I/b08q4wvFscXCLvqfsHCrjrF7yiXsQuIVvVE7N82W3+aqpzuUdBbfhWcy/FZR3/4IgflMgKLOsvPDrGCJA==",
            "deprecated": "This module is not supported, and leaks memory. Do not use it. Check out lru-cache if you want a good and tested way to coalesce async requests by a key value, which is much more comprehensive and powerful.",
            "dev": true,
            "dependencies": {
                "once": "^1.3.0",
                "wrappy": "1"
            }
        },
        "node_modules/inherits": {
            "version": "2.0.4",
            "resolved": "https://registry.npmjs.org/inherits/-/inherits-2.0.4.tgz",
            "integrity": "sha512-k/vGaX4/Yla3WzyMCvTQOXYeIHvqOKtnqBduzTHpzpQZzAskKMhZ2K+EnBiSM9zGSoIFeMpXKxa4dYeZIQqewQ==",
            "dev": true
        },
        "node_modules/install": {
            "version": "0.13.0",
            "resolved": "https://registry.npmjs.org/install/-/install-0.13.0.tgz",
            "integrity": "sha512-zDml/jzr2PKU9I8J/xyZBQn8rPCAY//UOYNmR01XwNwyfhEWObo2SWfSl1+0tm1u6PhxLwDnfsT/6jB7OUxqFA==",
            "engines": {
                "node": ">= 0.10"
            }
        },
        "node_modules/internal-slot": {
            "version": "1.1.0",
            "resolved": "https://registry.npmjs.org/internal-slot/-/internal-slot-1.1.0.tgz",
            "integrity": "sha512-4gd7VpWNQNB4UKKCFFVcp1AVv+FMOgs9NKzjHKusc8jTMhd5eL1NqQqOpE0KzMds804/yHlglp3uxgluOqAPLw==",
            "dev": true,
            "dependencies": {
                "es-errors": "^1.3.0",
                "hasown": "^2.0.2",
                "side-channel": "^1.1.0"
            },
            "engines": {
                "node": ">= 0.4"
            }
        },
        "node_modules/internmap": {
            "version": "2.0.3",
            "resolved": "https://registry.npmjs.org/internmap/-/internmap-2.0.3.tgz",
            "integrity": "sha512-5Hh7Y1wQbvY5ooGgPbDaL5iYLAPzMTUrjMulskHLH6wnv/A+1q5rgEaiuqEjB+oxGXIVZs1FF+R/KPN3ZSQYYg==",
            "engines": {
                "node": ">=12"
            }
        },
        "node_modules/is-array-buffer": {
            "version": "3.0.5",
            "resolved": "https://registry.npmjs.org/is-array-buffer/-/is-array-buffer-3.0.5.tgz",
            "integrity": "sha512-DDfANUiiG2wC1qawP66qlTugJeL5HyzMpfr8lLK+jMQirGzNod0B12cFB/9q838Ru27sBwfw78/rdoU7RERz6A==",
            "dev": true,
            "dependencies": {
                "call-bind": "^1.0.8",
                "call-bound": "^1.0.3",
                "get-intrinsic": "^1.2.6"
            },
            "engines": {
                "node": ">= 0.4"
            },
            "funding": {
                "url": "https://github.com/sponsors/ljharb"
            }
        },
        "node_modules/is-async-function": {
            "version": "2.1.1",
            "resolved": "https://registry.npmjs.org/is-async-function/-/is-async-function-2.1.1.tgz",
            "integrity": "sha512-9dgM/cZBnNvjzaMYHVoxxfPj2QXt22Ev7SuuPrs+xav0ukGB0S6d4ydZdEiM48kLx5kDV+QBPrpVnFyefL8kkQ==",
            "dev": true,
            "dependencies": {
                "async-function": "^1.0.0",
                "call-bound": "^1.0.3",
                "get-proto": "^1.0.1",
                "has-tostringtag": "^1.0.2",
                "safe-regex-test": "^1.1.0"
            },
            "engines": {
                "node": ">= 0.4"
            },
            "funding": {
                "url": "https://github.com/sponsors/ljharb"
            }
        },
        "node_modules/is-bigint": {
            "version": "1.1.0",
            "resolved": "https://registry.npmjs.org/is-bigint/-/is-bigint-1.1.0.tgz",
            "integrity": "sha512-n4ZT37wG78iz03xPRKJrHTdZbe3IicyucEtdRsV5yglwc3GyUfbAfpSeD0FJ41NbUNSt5wbhqfp1fS+BgnvDFQ==",
            "dev": true,
            "dependencies": {
                "has-bigints": "^1.0.2"
            },
            "engines": {
                "node": ">= 0.4"
            },
            "funding": {
                "url": "https://github.com/sponsors/ljharb"
            }
        },
        "node_modules/is-binary-path": {
            "version": "2.1.0",
            "resolved": "https://registry.npmjs.org/is-binary-path/-/is-binary-path-2.1.0.tgz",
            "integrity": "sha512-ZMERYes6pDydyuGidse7OsHxtbI7WVeUEozgR/g7rd0xUimYNlvZRE/K2MgZTjWy725IfelLeVcEM97mmtRGXw==",
            "dev": true,
            "dependencies": {
                "binary-extensions": "^2.0.0"
            },
            "engines": {
                "node": ">=8"
            }
        },
        "node_modules/is-boolean-object": {
            "version": "1.2.2",
            "resolved": "https://registry.npmjs.org/is-boolean-object/-/is-boolean-object-1.2.2.tgz",
            "integrity": "sha512-wa56o2/ElJMYqjCjGkXri7it5FbebW5usLw/nPmCMs5DeZ7eziSYZhSmPRn0txqeW4LnAmQQU7FgqLpsEFKM4A==",
            "dev": true,
            "dependencies": {
                "call-bound": "^1.0.3",
                "has-tostringtag": "^1.0.2"
            },
            "engines": {
                "node": ">= 0.4"
            },
            "funding": {
                "url": "https://github.com/sponsors/ljharb"
            }
        },
        "node_modules/is-bun-module": {
            "version": "2.0.0",
            "resolved": "https://registry.npmjs.org/is-bun-module/-/is-bun-module-2.0.0.tgz",
            "integrity": "sha512-gNCGbnnnnFAUGKeZ9PdbyeGYJqewpmc2aKHUEMO5nQPWU9lOmv7jcmQIv+qHD8fXW6W7qfuCwX4rY9LNRjXrkQ==",
            "dev": true,
            "dependencies": {
                "semver": "^7.7.1"
            }
        },
        "node_modules/is-callable": {
            "version": "1.2.7",
            "resolved": "https://registry.npmjs.org/is-callable/-/is-callable-1.2.7.tgz",
            "integrity": "sha512-1BC0BVFhS/p0qtw6enp8e+8OD0UrK0oFLztSjNzhcKA3WDuJxxAPXzPuPtKkjEY9UUoEWlX/8fgKeu2S8i9JTA==",
            "dev": true,
            "engines": {
                "node": ">= 0.4"
            },
            "funding": {
                "url": "https://github.com/sponsors/ljharb"
            }
        },
        "node_modules/is-core-module": {
            "version": "2.16.1",
            "resolved": "https://registry.npmjs.org/is-core-module/-/is-core-module-2.16.1.tgz",
            "integrity": "sha512-UfoeMA6fIJ8wTYFEUjelnaGI67v6+N7qXJEvQuIGa99l4xsCruSYOVSQ0uPANn4dAzm8lkYPaKLrrijLq7x23w==",
            "dev": true,
            "dependencies": {
                "hasown": "^2.0.2"
            },
            "engines": {
                "node": ">= 0.4"
            },
            "funding": {
                "url": "https://github.com/sponsors/ljharb"
            }
        },
        "node_modules/is-data-view": {
            "version": "1.0.2",
            "resolved": "https://registry.npmjs.org/is-data-view/-/is-data-view-1.0.2.tgz",
            "integrity": "sha512-RKtWF8pGmS87i2D6gqQu/l7EYRlVdfzemCJN/P3UOs//x1QE7mfhvzHIApBTRf7axvT6DMGwSwBXYCT0nfB9xw==",
            "dev": true,
            "dependencies": {
                "call-bound": "^1.0.2",
                "get-intrinsic": "^1.2.6",
                "is-typed-array": "^1.1.13"
            },
            "engines": {
                "node": ">= 0.4"
            },
            "funding": {
                "url": "https://github.com/sponsors/ljharb"
            }
        },
        "node_modules/is-date-object": {
            "version": "1.1.0",
            "resolved": "https://registry.npmjs.org/is-date-object/-/is-date-object-1.1.0.tgz",
            "integrity": "sha512-PwwhEakHVKTdRNVOw+/Gyh0+MzlCl4R6qKvkhuvLtPMggI1WAHt9sOwZxQLSGpUaDnrdyDsomoRgNnCfKNSXXg==",
            "dev": true,
            "dependencies": {
                "call-bound": "^1.0.2",
                "has-tostringtag": "^1.0.2"
            },
            "engines": {
                "node": ">= 0.4"
            },
            "funding": {
                "url": "https://github.com/sponsors/ljharb"
            }
        },
        "node_modules/is-extglob": {
            "version": "2.1.1",
            "resolved": "https://registry.npmjs.org/is-extglob/-/is-extglob-2.1.1.tgz",
            "integrity": "sha512-SbKbANkN603Vi4jEZv49LeVJMn4yGwsbzZworEoyEiutsN3nJYdbO36zfhGJ6QEDpOZIFkDtnq5JRxmvl3jsoQ==",
            "dev": true,
            "engines": {
                "node": ">=0.10.0"
            }
        },
        "node_modules/is-finalizationregistry": {
            "version": "1.1.1",
            "resolved": "https://registry.npmjs.org/is-finalizationregistry/-/is-finalizationregistry-1.1.1.tgz",
            "integrity": "sha512-1pC6N8qWJbWoPtEjgcL2xyhQOP491EQjeUo3qTKcmV8YSDDJrOepfG8pcC7h/QgnQHYSv0mJ3Z/ZWxmatVrysg==",
            "dev": true,
            "dependencies": {
                "call-bound": "^1.0.3"
            },
            "engines": {
                "node": ">= 0.4"
            },
            "funding": {
                "url": "https://github.com/sponsors/ljharb"
            }
        },
        "node_modules/is-fullwidth-code-point": {
            "version": "3.0.0",
            "resolved": "https://registry.npmjs.org/is-fullwidth-code-point/-/is-fullwidth-code-point-3.0.0.tgz",
            "integrity": "sha512-zymm5+u+sCsSWyD9qNaejV3DFvhCKclKdizYaJUuHA83RLjb7nSuGnddCHGv0hk+KY7BMAlsWeK4Ueg6EV6XQg==",
            "dev": true,
            "engines": {
                "node": ">=8"
            }
        },
        "node_modules/is-generator-function": {
            "version": "1.1.0",
            "resolved": "https://registry.npmjs.org/is-generator-function/-/is-generator-function-1.1.0.tgz",
            "integrity": "sha512-nPUB5km40q9e8UfN/Zc24eLlzdSf9OfKByBw9CIdw4H1giPMeA0OIJvbchsCu4npfI2QcMVBsGEBHKZ7wLTWmQ==",
            "dev": true,
            "dependencies": {
                "call-bound": "^1.0.3",
                "get-proto": "^1.0.0",
                "has-tostringtag": "^1.0.2",
                "safe-regex-test": "^1.1.0"
            },
            "engines": {
                "node": ">= 0.4"
            },
            "funding": {
                "url": "https://github.com/sponsors/ljharb"
            }
        },
        "node_modules/is-glob": {
            "version": "4.0.3",
            "resolved": "https://registry.npmjs.org/is-glob/-/is-glob-4.0.3.tgz",
            "integrity": "sha512-xelSayHH36ZgE7ZWhli7pW34hNbNl8Ojv5KVmkJD4hBdD3th8Tfk9vYasLM+mXWOZhFkgZfxhLSnrwRr4elSSg==",
            "dev": true,
            "dependencies": {
                "is-extglob": "^2.1.1"
            },
            "engines": {
                "node": ">=0.10.0"
            }
        },
        "node_modules/is-map": {
            "version": "2.0.3",
            "resolved": "https://registry.npmjs.org/is-map/-/is-map-2.0.3.tgz",
            "integrity": "sha512-1Qed0/Hr2m+YqxnM09CjA2d/i6YZNfF6R2oRAOj36eUdS6qIV/huPJNSEpKbupewFs+ZsJlxsjjPbc0/afW6Lw==",
            "dev": true,
            "engines": {
                "node": ">= 0.4"
            },
            "funding": {
                "url": "https://github.com/sponsors/ljharb"
            }
        },
        "node_modules/is-negative-zero": {
            "version": "2.0.3",
            "resolved": "https://registry.npmjs.org/is-negative-zero/-/is-negative-zero-2.0.3.tgz",
            "integrity": "sha512-5KoIu2Ngpyek75jXodFvnafB6DJgr3u8uuK0LEZJjrU19DrMD3EVERaR8sjz8CCGgpZvxPl9SuE1GMVPFHx1mw==",
            "dev": true,
            "engines": {
                "node": ">= 0.4"
            },
            "funding": {
                "url": "https://github.com/sponsors/ljharb"
            }
        },
        "node_modules/is-number": {
            "version": "7.0.0",
            "resolved": "https://registry.npmjs.org/is-number/-/is-number-7.0.0.tgz",
            "integrity": "sha512-41Cifkg6e8TylSpdtTpeLVMqvSBEVzTttHvERD741+pnZ8ANv0004MRL43QKPDlK9cGvNp6NZWZUBlbGXYxxng==",
            "dev": true,
            "engines": {
                "node": ">=0.12.0"
            }
        },
        "node_modules/is-number-object": {
            "version": "1.1.1",
            "resolved": "https://registry.npmjs.org/is-number-object/-/is-number-object-1.1.1.tgz",
            "integrity": "sha512-lZhclumE1G6VYD8VHe35wFaIif+CTy5SJIi5+3y4psDgWu4wPDoBhF8NxUOinEc7pHgiTsT6MaBb92rKhhD+Xw==",
            "dev": true,
            "dependencies": {
                "call-bound": "^1.0.3",
                "has-tostringtag": "^1.0.2"
            },
            "engines": {
                "node": ">= 0.4"
            },
            "funding": {
                "url": "https://github.com/sponsors/ljharb"
            }
        },
        "node_modules/is-path-inside": {
            "version": "3.0.3",
            "resolved": "https://registry.npmjs.org/is-path-inside/-/is-path-inside-3.0.3.tgz",
            "integrity": "sha512-Fd4gABb+ycGAmKou8eMftCupSir5lRxqf4aD/vd0cD2qc4HL07OjCeuHMr8Ro4CoMaeCKDB0/ECBOVWjTwUvPQ==",
            "dev": true,
            "engines": {
                "node": ">=8"
            }
        },
        "node_modules/is-regex": {
            "version": "1.2.1",
            "resolved": "https://registry.npmjs.org/is-regex/-/is-regex-1.2.1.tgz",
            "integrity": "sha512-MjYsKHO5O7mCsmRGxWcLWheFqN9DJ/2TmngvjKXihe6efViPqc274+Fx/4fYj/r03+ESvBdTXK0V6tA3rgez1g==",
            "dev": true,
            "dependencies": {
                "call-bound": "^1.0.2",
                "gopd": "^1.2.0",
                "has-tostringtag": "^1.0.2",
                "hasown": "^2.0.2"
            },
            "engines": {
                "node": ">= 0.4"
            },
            "funding": {
                "url": "https://github.com/sponsors/ljharb"
            }
        },
        "node_modules/is-set": {
            "version": "2.0.3",
            "resolved": "https://registry.npmjs.org/is-set/-/is-set-2.0.3.tgz",
            "integrity": "sha512-iPAjerrse27/ygGLxw+EBR9agv9Y6uLeYVJMu+QNCoouJ1/1ri0mGrcWpfCqFZuzzx3WjtwxG098X+n4OuRkPg==",
            "dev": true,
            "engines": {
                "node": ">= 0.4"
            },
            "funding": {
                "url": "https://github.com/sponsors/ljharb"
            }
        },
        "node_modules/is-shared-array-buffer": {
            "version": "1.0.4",
            "resolved": "https://registry.npmjs.org/is-shared-array-buffer/-/is-shared-array-buffer-1.0.4.tgz",
            "integrity": "sha512-ISWac8drv4ZGfwKl5slpHG9OwPNty4jOWPRIhBpxOoD+hqITiwuipOQ2bNthAzwA3B4fIjO4Nln74N0S9byq8A==",
            "dev": true,
            "dependencies": {
                "call-bound": "^1.0.3"
            },
            "engines": {
                "node": ">= 0.4"
            },
            "funding": {
                "url": "https://github.com/sponsors/ljharb"
            }
        },
        "node_modules/is-string": {
            "version": "1.1.1",
            "resolved": "https://registry.npmjs.org/is-string/-/is-string-1.1.1.tgz",
            "integrity": "sha512-BtEeSsoaQjlSPBemMQIrY1MY0uM6vnS1g5fmufYOtnxLGUZM2178PKbhsk7Ffv58IX+ZtcvoGwccYsh0PglkAA==",
            "dev": true,
            "dependencies": {
                "call-bound": "^1.0.3",
                "has-tostringtag": "^1.0.2"
            },
            "engines": {
                "node": ">= 0.4"
            },
            "funding": {
                "url": "https://github.com/sponsors/ljharb"
            }
        },
        "node_modules/is-symbol": {
            "version": "1.1.1",
            "resolved": "https://registry.npmjs.org/is-symbol/-/is-symbol-1.1.1.tgz",
            "integrity": "sha512-9gGx6GTtCQM73BgmHQXfDmLtfjjTUDSyoxTCbp5WtoixAhfgsDirWIcVQ/IHpvI5Vgd5i/J5F7B9cN/WlVbC/w==",
            "dev": true,
            "dependencies": {
                "call-bound": "^1.0.2",
                "has-symbols": "^1.1.0",
                "safe-regex-test": "^1.1.0"
            },
            "engines": {
                "node": ">= 0.4"
            },
            "funding": {
                "url": "https://github.com/sponsors/ljharb"
            }
        },
        "node_modules/is-typed-array": {
            "version": "1.1.15",
            "resolved": "https://registry.npmjs.org/is-typed-array/-/is-typed-array-1.1.15.tgz",
            "integrity": "sha512-p3EcsicXjit7SaskXHs1hA91QxgTw46Fv6EFKKGS5DRFLD8yKnohjF3hxoju94b/OcMZoQukzpPpBE9uLVKzgQ==",
            "dev": true,
            "dependencies": {
                "which-typed-array": "^1.1.16"
            },
            "engines": {
                "node": ">= 0.4"
            },
            "funding": {
                "url": "https://github.com/sponsors/ljharb"
            }
        },
        "node_modules/is-weakmap": {
            "version": "2.0.2",
            "resolved": "https://registry.npmjs.org/is-weakmap/-/is-weakmap-2.0.2.tgz",
            "integrity": "sha512-K5pXYOm9wqY1RgjpL3YTkF39tni1XajUIkawTLUo9EZEVUFga5gSQJF8nNS7ZwJQ02y+1YCNYcMh+HIf1ZqE+w==",
            "dev": true,
            "engines": {
                "node": ">= 0.4"
            },
            "funding": {
                "url": "https://github.com/sponsors/ljharb"
            }
        },
        "node_modules/is-weakref": {
            "version": "1.1.1",
            "resolved": "https://registry.npmjs.org/is-weakref/-/is-weakref-1.1.1.tgz",
            "integrity": "sha512-6i9mGWSlqzNMEqpCp93KwRS1uUOodk2OJ6b+sq7ZPDSy2WuI5NFIxp/254TytR8ftefexkWn5xNiHUNpPOfSew==",
            "dev": true,
            "dependencies": {
                "call-bound": "^1.0.3"
            },
            "engines": {
                "node": ">= 0.4"
            },
            "funding": {
                "url": "https://github.com/sponsors/ljharb"
            }
        },
        "node_modules/is-weakset": {
            "version": "2.0.4",
            "resolved": "https://registry.npmjs.org/is-weakset/-/is-weakset-2.0.4.tgz",
            "integrity": "sha512-mfcwb6IzQyOKTs84CQMrOwW4gQcaTOAWJ0zzJCl2WSPDrWk/OzDaImWFH3djXhb24g4eudZfLRozAvPGw4d9hQ==",
            "dev": true,
            "dependencies": {
                "call-bound": "^1.0.3",
                "get-intrinsic": "^1.2.6"
            },
            "engines": {
                "node": ">= 0.4"
            },
            "funding": {
                "url": "https://github.com/sponsors/ljharb"
            }
        },
        "node_modules/isarray": {
            "version": "2.0.5",
            "resolved": "https://registry.npmjs.org/isarray/-/isarray-2.0.5.tgz",
            "integrity": "sha512-xHjhDr3cNBK0BzdUJSPXZntQUx/mwMS5Rw4A7lPJ90XGAO6ISP/ePDNuo0vhqOZU+UD5JoodwCAAoZQd3FeAKw==",
            "dev": true
        },
        "node_modules/isexe": {
            "version": "2.0.0",
            "resolved": "https://registry.npmjs.org/isexe/-/isexe-2.0.0.tgz",
            "integrity": "sha512-RHxMLp9lnKHGHRng9QFhRCMbYAcVpn69smSGcq3f36xjgVVWThj4qqLbTLlq7Ssj8B+fIQ1EuCEGI2lKsyQeIw==",
            "dev": true
        },
        "node_modules/iterator.prototype": {
            "version": "1.1.5",
            "resolved": "https://registry.npmjs.org/iterator.prototype/-/iterator.prototype-1.1.5.tgz",
            "integrity": "sha512-H0dkQoCa3b2VEeKQBOxFph+JAbcrQdE7KC0UkqwpLmv2EC4P41QXP+rqo9wYodACiG5/WM5s9oDApTU8utwj9g==",
            "dev": true,
            "dependencies": {
                "define-data-property": "^1.1.4",
                "es-object-atoms": "^1.0.0",
                "get-intrinsic": "^1.2.6",
                "get-proto": "^1.0.0",
                "has-symbols": "^1.1.0",
                "set-function-name": "^2.0.2"
            },
            "engines": {
                "node": ">= 0.4"
            }
        },
        "node_modules/jackspeak": {
            "version": "3.4.3",
            "resolved": "https://registry.npmjs.org/jackspeak/-/jackspeak-3.4.3.tgz",
            "integrity": "sha512-OGlZQpz2yfahA/Rd1Y8Cd9SIEsqvXkLVoSw/cgwhnhFMDbsQFeZYoJJ7bIZBS9BcamUW96asq/npPWugM+RQBw==",
            "dev": true,
            "dependencies": {
                "@isaacs/cliui": "^8.0.2"
            },
            "funding": {
                "url": "https://github.com/sponsors/isaacs"
            },
            "optionalDependencies": {
                "@pkgjs/parseargs": "^0.11.0"
            }
        },
        "node_modules/jiti": {
            "version": "1.21.7",
            "resolved": "https://registry.npmjs.org/jiti/-/jiti-1.21.7.tgz",
            "integrity": "sha512-/imKNG4EbWNrVjoNC/1H5/9GFy+tqjGBHCaSsN+P2RnPqjsLmv6UD3Ej+Kj8nBWaRAwyk7kK5ZUc+OEatnTR3A==",
            "dev": true,
            "bin": {
                "jiti": "bin/jiti.js"
            }
        },
        "node_modules/js-tokens": {
            "version": "4.0.0",
            "resolved": "https://registry.npmjs.org/js-tokens/-/js-tokens-4.0.0.tgz",
            "integrity": "sha512-RdJUflcE3cUzKiMqQgsCu06FPu9UdIJO0beYbPhHN4k6apgJtifcoCtT9bcxOpYBtpD2kCM6Sbzg4CausW/PKQ=="
        },
        "node_modules/js-yaml": {
            "version": "4.1.0",
            "resolved": "https://registry.npmjs.org/js-yaml/-/js-yaml-4.1.0.tgz",
            "integrity": "sha512-wpxZs9NoxZaJESJGIZTyDEaYpl0FKSA+FB9aJiyemKhMwkxQg63h4T1KJgUGHpTqPDNRcmmYLugrRjJlBtWvRA==",
            "dev": true,
            "dependencies": {
                "argparse": "^2.0.1"
            },
            "bin": {
                "js-yaml": "bin/js-yaml.js"
            }
        },
        "node_modules/json-buffer": {
            "version": "3.0.1",
            "resolved": "https://registry.npmjs.org/json-buffer/-/json-buffer-3.0.1.tgz",
            "integrity": "sha512-4bV5BfR2mqfQTJm+V5tPPdf+ZpuhiIvTuAB5g8kcrXOZpTT/QwwVRWBywX1ozr6lEuPdbHxwaJlm9G6mI2sfSQ==",
            "dev": true
        },
        "node_modules/json-schema-traverse": {
            "version": "0.4.1",
            "resolved": "https://registry.npmjs.org/json-schema-traverse/-/json-schema-traverse-0.4.1.tgz",
            "integrity": "sha512-xbbCH5dCYU5T8LcEhhuh7HJ88HXuW3qsI3Y0zOZFKfZEHcpWiHU/Jxzk629Brsab/mMiHQti9wMP+845RPe3Vg==",
            "dev": true
        },
        "node_modules/json-stable-stringify-without-jsonify": {
            "version": "1.0.1",
            "resolved": "https://registry.npmjs.org/json-stable-stringify-without-jsonify/-/json-stable-stringify-without-jsonify-1.0.1.tgz",
            "integrity": "sha512-Bdboy+l7tA3OGW6FjyFHWkP5LuByj1Tk33Ljyq0axyzdk9//JSi2u3fP1QSmd1KNwq6VOKYGlAu87CisVir6Pw==",
            "dev": true
        },
        "node_modules/json5": {
            "version": "1.0.2",
            "resolved": "https://registry.npmjs.org/json5/-/json5-1.0.2.tgz",
            "integrity": "sha512-g1MWMLBiz8FKi1e4w0UyVL3w+iJceWAFBAaBnnGKOpNa5f8TLktkbre1+s6oICydWAm+HRUGTmI+//xv2hvXYA==",
            "dev": true,
            "dependencies": {
                "minimist": "^1.2.0"
            },
            "bin": {
                "json5": "lib/cli.js"
            }
        },
        "node_modules/jsx-ast-utils": {
            "version": "3.3.5",
            "resolved": "https://registry.npmjs.org/jsx-ast-utils/-/jsx-ast-utils-3.3.5.tgz",
            "integrity": "sha512-ZZow9HBI5O6EPgSJLUb8n2NKgmVWTwCvHGwFuJlMjvLFqlGG6pjirPhtdsseaLZjSibD8eegzmYpUZwoIlj2cQ==",
            "dev": true,
            "dependencies": {
                "array-includes": "^3.1.6",
                "array.prototype.flat": "^1.3.1",
                "object.assign": "^4.1.4",
                "object.values": "^1.1.6"
            },
            "engines": {
                "node": ">=4.0"
            }
        },
        "node_modules/keyv": {
            "version": "4.5.4",
            "resolved": "https://registry.npmjs.org/keyv/-/keyv-4.5.4.tgz",
            "integrity": "sha512-oxVHkHR/EJf2CNXnWxRLW6mg7JyCCUcG0DtEGmL2ctUo1PNTin1PUil+r/+4r5MpVgC/fn1kjsx7mjSujKqIpw==",
            "dev": true,
            "dependencies": {
                "json-buffer": "3.0.1"
            }
        },
        "node_modules/language-subtag-registry": {
            "version": "0.3.23",
            "resolved": "https://registry.npmjs.org/language-subtag-registry/-/language-subtag-registry-0.3.23.tgz",
            "integrity": "sha512-0K65Lea881pHotoGEa5gDlMxt3pctLi2RplBb7Ezh4rRdLEOtgi7n4EwK9lamnUCkKBqaeKRVebTq6BAxSkpXQ==",
            "dev": true
        },
        "node_modules/language-tags": {
            "version": "1.0.9",
            "resolved": "https://registry.npmjs.org/language-tags/-/language-tags-1.0.9.tgz",
            "integrity": "sha512-MbjN408fEndfiQXbFQ1vnd+1NoLDsnQW41410oQBXiyXDMYH5z505juWa4KUE1LqxRC7DgOgZDbKLxHIwm27hA==",
            "dev": true,
            "dependencies": {
                "language-subtag-registry": "^0.3.20"
            },
            "engines": {
                "node": ">=0.10"
            }
        },
        "node_modules/levn": {
            "version": "0.4.1",
            "resolved": "https://registry.npmjs.org/levn/-/levn-0.4.1.tgz",
            "integrity": "sha512-+bT2uH4E5LGE7h/n3evcS/sQlJXCpIp6ym8OWJ5eV6+67Dsql/LaaT7qJBAt2rzfoa/5QBGBhxDix1dMt2kQKQ==",
            "dev": true,
            "dependencies": {
                "prelude-ls": "^1.2.1",
                "type-check": "~0.4.0"
            },
            "engines": {
                "node": ">= 0.8.0"
            }
        },
        "node_modules/lilconfig": {
            "version": "3.1.3",
            "resolved": "https://registry.npmjs.org/lilconfig/-/lilconfig-3.1.3.tgz",
            "integrity": "sha512-/vlFKAoH5Cgt3Ie+JLhRbwOsCQePABiU3tJ1egGvyQ+33R/vcwM2Zl2QR/LzjsBeItPt3oSVXapn+m4nQDvpzw==",
            "dev": true,
            "engines": {
                "node": ">=14"
            },
            "funding": {
                "url": "https://github.com/sponsors/antonk52"
            }
        },
        "node_modules/lines-and-columns": {
            "version": "1.2.4",
            "resolved": "https://registry.npmjs.org/lines-and-columns/-/lines-and-columns-1.2.4.tgz",
            "integrity": "sha512-7ylylesZQ/PV29jhEDl3Ufjo6ZX7gCqJr5F7PKrqc93v7fzSymt1BpwEU8nAUXs8qzzvqhbjhK5QZg6Mt/HkBg==",
            "dev": true
        },
        "node_modules/locate-path": {
            "version": "6.0.0",
            "resolved": "https://registry.npmjs.org/locate-path/-/locate-path-6.0.0.tgz",
            "integrity": "sha512-iPZK6eYjbxRu3uB4/WZ3EsEIMJFMqAoopl3R+zuq0UjcAm/MO6KCweDgPfP3elTztoKP3KtnVHxTn2NHBSDVUw==",
            "dev": true,
            "dependencies": {
                "p-locate": "^5.0.0"
            },
            "engines": {
                "node": ">=10"
            },
            "funding": {
                "url": "https://github.com/sponsors/sindresorhus"
            }
        },
        "node_modules/lodash": {
            "version": "4.17.21",
            "resolved": "https://registry.npmjs.org/lodash/-/lodash-4.17.21.tgz",
            "integrity": "sha512-v2kDEe57lecTulaDIuNTPy3Ry4gLGJ6Z1O3vE1krgXZNrsQ+LFTGHVxVjcXPs17LhbZVGedAJv8XZ1tvj5FvSg=="
        },
        "node_modules/lodash.merge": {
            "version": "4.6.2",
            "resolved": "https://registry.npmjs.org/lodash.merge/-/lodash.merge-4.6.2.tgz",
            "integrity": "sha512-0KpjqXRVvrYyCsX1swR/XTK0va6VQkQM6MNo7PqW77ByjAhoARA8EfrP1N4+KlKj8YS0ZUCtRT/YUuhyYDujIQ==",
            "dev": true
        },
        "node_modules/loose-envify": {
            "version": "1.4.0",
            "resolved": "https://registry.npmjs.org/loose-envify/-/loose-envify-1.4.0.tgz",
            "integrity": "sha512-lyuxPGr/Wfhrlem2CL/UcnUc1zcqKAImBDzukY7Y5F/yQiNdko6+fRLevlw1HgMySw7f611UIY408EtxRSoK3Q==",
            "dependencies": {
                "js-tokens": "^3.0.0 || ^4.0.0"
            },
            "bin": {
                "loose-envify": "cli.js"
            }
        },
        "node_modules/lru-cache": {
            "version": "10.4.3",
            "resolved": "https://registry.npmjs.org/lru-cache/-/lru-cache-10.4.3.tgz",
            "integrity": "sha512-JNAzZcXrCt42VGLuYz0zfAzDfAvJWW6AfYlDBQyDV5DClI2m5sAmK+OIO7s59XfsRsWHp02jAJrRadPRGTt6SQ==",
            "dev": true
        },
        "node_modules/lucide-react": {
            "version": "0.294.0",
            "resolved": "https://registry.npmjs.org/lucide-react/-/lucide-react-0.294.0.tgz",
            "integrity": "sha512-V7o0/VECSGbLHn3/1O67FUgBwWB+hmzshrgDVRJQhMh8uj5D3HBuIvhuAmQTtlupILSplwIZg5FTc4tTKMA2SA==",
            "peerDependencies": {
                "react": "^16.5.1 || ^17.0.0 || ^18.0.0"
            }
        },
        "node_modules/math-intrinsics": {
            "version": "1.1.0",
            "resolved": "https://registry.npmjs.org/math-intrinsics/-/math-intrinsics-1.1.0.tgz",
            "integrity": "sha512-/IXtbwEk5HTPyEwyKX6hGkYXxM9nbj64B+ilVJnC/R6B0pH5G4V3b0pVbL7DBj4tkhBAppbQUlf6F6Xl9LHu1g==",
            "dev": true,
            "engines": {
                "node": ">= 0.4"
            }
        },
        "node_modules/merge2": {
            "version": "1.4.1",
            "resolved": "https://registry.npmjs.org/merge2/-/merge2-1.4.1.tgz",
            "integrity": "sha512-8q7VEgMJW4J8tcfVPy8g09NcQwZdbwFEqhe/WZkoIzjn/3TGDwtOCYtXGxA3O8tPzpczCCDgv+P2P5y00ZJOOg==",
            "dev": true,
            "engines": {
                "node": ">= 8"
            }
        },
        "node_modules/micromatch": {
            "version": "4.0.8",
            "resolved": "https://registry.npmjs.org/micromatch/-/micromatch-4.0.8.tgz",
            "integrity": "sha512-PXwfBhYu0hBCPw8Dn0E+WDYb7af3dSLVWKi3HGv84IdF4TyFoC0ysxFd0Goxw7nSv4T/PzEJQxsYsEiFCKo2BA==",
            "dev": true,
            "dependencies": {
                "braces": "^3.0.3",
                "picomatch": "^2.3.1"
            },
            "engines": {
                "node": ">=8.6"
            }
        },
        "node_modules/minimatch": {
            "version": "3.1.2",
            "resolved": "https://registry.npmjs.org/minimatch/-/minimatch-3.1.2.tgz",
            "integrity": "sha512-J7p63hRiAjw1NDEww1W7i37+ByIrOWO5XQQAzZ3VOcL0PNybwpfmV/N05zFAzwQ9USyEcX6t3UO+K5aqBQOIHw==",
            "dev": true,
            "dependencies": {
                "brace-expansion": "^1.1.7"
            },
            "engines": {
                "node": "*"
            }
        },
        "node_modules/minimist": {
            "version": "1.2.8",
            "resolved": "https://registry.npmjs.org/minimist/-/minimist-1.2.8.tgz",
            "integrity": "sha512-2yyAR8qBkN3YuheJanUpWC5U3bb5osDywNB8RzDVlDwDHbocAJveqqj1u8+SVD7jkWT4yvsHCpWqqWqAxb0zCA==",
            "dev": true,
            "funding": {
                "url": "https://github.com/sponsors/ljharb"
            }
        },
        "node_modules/minipass": {
            "version": "7.1.2",
            "resolved": "https://registry.npmjs.org/minipass/-/minipass-7.1.2.tgz",
            "integrity": "sha512-qOOzS1cBTWYF4BH8fVePDBOO9iptMnGUEZwNc/cMWnTV2nVLZ7VoNWEPHkYczZA0pdoA7dl6e7FL659nX9S2aw==",
            "dev": true,
            "engines": {
                "node": ">=16 || 14 >=14.17"
            }
        },
        "node_modules/ms": {
            "version": "2.1.3",
            "resolved": "https://registry.npmjs.org/ms/-/ms-2.1.3.tgz",
            "integrity": "sha512-6FlzubTLZG3J2a/NVCAleEhjzq5oxgHyaCU9yYXvcLsvoVaHJq/s5xXI6/XXP6tz7R9xAOtHnSO/tXtF3WRTlA==",
            "dev": true
        },
        "node_modules/mz": {
            "version": "2.7.0",
            "resolved": "https://registry.npmjs.org/mz/-/mz-2.7.0.tgz",
            "integrity": "sha512-z81GNO7nnYMEhrGh9LeymoE4+Yr0Wn5McHIZMK5cfQCl+NDX08sCZgUc9/6MHni9IWuFLm1Z3HTCXu2z9fN62Q==",
            "dev": true,
            "dependencies": {
                "any-promise": "^1.0.0",
                "object-assign": "^4.0.1",
                "thenify-all": "^1.0.0"
            }
        },
        "node_modules/nanoid": {
            "version": "3.3.11",
            "resolved": "https://registry.npmjs.org/nanoid/-/nanoid-3.3.11.tgz",
            "integrity": "sha512-N8SpfPUnUp1bK+PMYW8qSWdl9U+wwNWI4QKxOYDy9JAro3WMX7p2OeVRF9v+347pnakNevPmiHhNmZ2HbFA76w==",
            "funding": [
                {
                    "type": "github",
                    "url": "https://github.com/sponsors/ai"
                }
            ],
            "bin": {
                "nanoid": "bin/nanoid.cjs"
            },
            "engines": {
                "node": "^10 || ^12 || ^13.7 || ^14 || >=15.0.1"
            }
        },
        "node_modules/napi-postinstall": {
            "version": "0.3.3",
            "resolved": "https://registry.npmjs.org/napi-postinstall/-/napi-postinstall-0.3.3.tgz",
            "integrity": "sha512-uTp172LLXSxuSYHv/kou+f6KW3SMppU9ivthaVTXian9sOt3XM/zHYHpRZiLgQoxeWfYUnslNWQHF1+G71xcow==",
            "dev": true,
            "bin": {
                "napi-postinstall": "lib/cli.js"
            },
            "engines": {
                "node": "^12.20.0 || ^14.18.0 || >=16.0.0"
            },
            "funding": {
                "url": "https://opencollective.com/napi-postinstall"
            }
        },
        "node_modules/natural-compare": {
            "version": "1.4.0",
            "resolved": "https://registry.npmjs.org/natural-compare/-/natural-compare-1.4.0.tgz",
            "integrity": "sha512-OWND8ei3VtNC9h7V60qff3SVobHr996CTwgxubgyQYEpg290h9J0buyECNNJexkFm5sOajh5G116RYA1c8ZMSw==",
            "dev": true
        },
        "node_modules/next": {
            "version": "14.0.0",
            "resolved": "https://registry.npmjs.org/next/-/next-14.0.0.tgz",
            "integrity": "sha512-J0jHKBJpB9zd4+c153sair0sz44mbaCHxggs8ryVXSFBuBqJ8XdE9/ozoV85xGh2VnSjahwntBZZgsihL9QznA==",
            "dependencies": {
                "@next/env": "14.0.0",
                "@swc/helpers": "0.5.2",
                "busboy": "1.6.0",
                "caniuse-lite": "^1.0.30001406",
                "postcss": "8.4.31",
                "styled-jsx": "5.1.1",
                "watchpack": "2.4.0"
            },
            "bin": {
                "next": "dist/bin/next"
            },
            "engines": {
                "node": ">=18.17.0"
            },
            "optionalDependencies": {
                "@next/swc-darwin-arm64": "14.0.0",
                "@next/swc-darwin-x64": "14.0.0",
                "@next/swc-linux-arm64-gnu": "14.0.0",
                "@next/swc-linux-arm64-musl": "14.0.0",
                "@next/swc-linux-x64-gnu": "14.0.0",
                "@next/swc-linux-x64-musl": "14.0.0",
                "@next/swc-win32-arm64-msvc": "14.0.0",
                "@next/swc-win32-ia32-msvc": "14.0.0",
                "@next/swc-win32-x64-msvc": "14.0.0"
            },
            "peerDependencies": {
                "@opentelemetry/api": "^1.1.0",
                "react": "^18.2.0",
                "react-dom": "^18.2.0",
                "sass": "^1.3.0"
            },
            "peerDependenciesMeta": {
                "@opentelemetry/api": {
                    "optional": true
                },
                "sass": {
                    "optional": true
                }
            }
        },
        "node_modules/next/node_modules/postcss": {
            "version": "8.4.31",
            "resolved": "https://registry.npmjs.org/postcss/-/postcss-8.4.31.tgz",
            "integrity": "sha512-PS08Iboia9mts/2ygV3eLpY5ghnUcfLV/EXTOW1E2qYxJKGGBUtNjN76FYHnMs36RmARn41bC0AZmn+rR0OVpQ==",
            "funding": [
                {
                    "type": "opencollective",
                    "url": "https://opencollective.com/postcss/"
                },
                {
                    "type": "tidelift",
                    "url": "https://tidelift.com/funding/github/npm/postcss"
                },
                {
                    "type": "github",
                    "url": "https://github.com/sponsors/ai"
                }
            ],
            "dependencies": {
                "nanoid": "^3.3.6",
                "picocolors": "^1.0.0",
                "source-map-js": "^1.0.2"
            },
            "engines": {
                "node": "^10 || ^12 || >=14"
            }
        },
        "node_modules/node-releases": {
            "version": "2.0.20",
            "resolved": "https://registry.npmjs.org/node-releases/-/node-releases-2.0.20.tgz",
            "integrity": "sha512-7gK6zSXEH6neM212JgfYFXe+GmZQM+fia5SsusuBIUgnPheLFBmIPhtFoAQRj8/7wASYQnbDlHPVwY0BefoFgA==",
            "dev": true
        },
        "node_modules/normalize-path": {
            "version": "3.0.0",
            "resolved": "https://registry.npmjs.org/normalize-path/-/normalize-path-3.0.0.tgz",
            "integrity": "sha512-6eZs5Ls3WtCisHWp9S2GUy8dqkpGi4BVSz3GaqiE6ezub0512ESztXUwUB6C6IKbQkY2Pnb/mD4WYojCRwcwLA==",
            "dev": true,
            "engines": {
                "node": ">=0.10.0"
            }
        },
        "node_modules/normalize-range": {
            "version": "0.1.2",
            "resolved": "https://registry.npmjs.org/normalize-range/-/normalize-range-0.1.2.tgz",
            "integrity": "sha512-bdok/XvKII3nUpklnV6P2hxtMNrCboOjAcyBuQnWEhO665FwrSNRxU+AqpsyvO6LgGYPspN+lu5CLtw4jPRKNA==",
            "dev": true,
            "engines": {
                "node": ">=0.10.0"
            }
        },
        "node_modules/npm": {
            "version": "11.6.0",
            "resolved": "https://registry.npmjs.org/npm/-/npm-11.6.0.tgz",
            "integrity": "sha512-d/P7DbvYgYNde9Ehfeq99+13/E7E82PfZPw8uYZASr9sQ3ZhBBCA9cXSJRA1COfJ6jDLJ0K36UJnXQWhCvLXuQ==",
            "bundleDependencies": [
                "@isaacs/string-locale-compare",
                "@npmcli/arborist",
                "@npmcli/config",
                "@npmcli/fs",
                "@npmcli/map-workspaces",
                "@npmcli/package-json",
                "@npmcli/promise-spawn",
                "@npmcli/redact",
                "@npmcli/run-script",
                "@sigstore/tuf",
                "abbrev",
                "archy",
                "cacache",
                "chalk",
                "ci-info",
                "cli-columns",
                "fastest-levenshtein",
                "fs-minipass",
                "glob",
                "graceful-fs",
                "hosted-git-info",
                "ini",
                "init-package-json",
                "is-cidr",
                "json-parse-even-better-errors",
                "libnpmaccess",
                "libnpmdiff",
                "libnpmexec",
                "libnpmfund",
                "libnpmorg",
                "libnpmpack",
                "libnpmpublish",
                "libnpmsearch",
                "libnpmteam",
                "libnpmversion",
                "make-fetch-happen",
                "minimatch",
                "minipass",
                "minipass-pipeline",
                "ms",
                "node-gyp",
                "nopt",
                "normalize-package-data",
                "npm-audit-report",
                "npm-install-checks",
                "npm-package-arg",
                "npm-pick-manifest",
                "npm-profile",
                "npm-registry-fetch",
                "npm-user-validate",
                "p-map",
                "pacote",
                "parse-conflict-json",
                "proc-log",
                "qrcode-terminal",
                "read",
                "semver",
                "spdx-expression-parse",
                "ssri",
                "supports-color",
                "tar",
                "text-table",
                "tiny-relative-date",
                "treeverse",
                "validate-npm-package-name",
                "which"
            ],
            "workspaces": [
                "docs",
                "smoke-tests",
                "mock-globals",
                "mock-registry",
                "workspaces/*"
            ],
            "dependencies": {
                "@isaacs/string-locale-compare": "^1.1.0",
                "@npmcli/arborist": "^9.1.4",
                "@npmcli/config": "^10.4.0",
                "@npmcli/fs": "^4.0.0",
                "@npmcli/map-workspaces": "^4.0.2",
                "@npmcli/package-json": "^6.2.0",
                "@npmcli/promise-spawn": "^8.0.2",
                "@npmcli/redact": "^3.2.2",
                "@npmcli/run-script": "^9.1.0",
                "@sigstore/tuf": "^3.1.1",
                "abbrev": "^3.0.1",
                "archy": "~1.0.0",
                "cacache": "^19.0.1",
                "chalk": "^5.4.1",
                "ci-info": "^4.3.0",
                "cli-columns": "^4.0.0",
                "fastest-levenshtein": "^1.0.16",
                "fs-minipass": "^3.0.3",
                "glob": "^10.4.5",
                "graceful-fs": "^4.2.11",
                "hosted-git-info": "^8.1.0",
                "ini": "^5.0.0",
                "init-package-json": "^8.2.1",
                "is-cidr": "^5.1.1",
                "json-parse-even-better-errors": "^4.0.0",
                "libnpmaccess": "^10.0.1",
                "libnpmdiff": "^8.0.7",
                "libnpmexec": "^10.1.6",
                "libnpmfund": "^7.0.7",
                "libnpmorg": "^8.0.0",
                "libnpmpack": "^9.0.7",
                "libnpmpublish": "^11.1.0",
                "libnpmsearch": "^9.0.0",
                "libnpmteam": "^8.0.1",
                "libnpmversion": "^8.0.1",
                "make-fetch-happen": "^14.0.3",
                "minimatch": "^9.0.5",
                "minipass": "^7.1.1",
                "minipass-pipeline": "^1.2.4",
                "ms": "^2.1.2",
                "node-gyp": "^11.2.0",
                "nopt": "^8.1.0",
                "normalize-package-data": "^7.0.1",
                "npm-audit-report": "^6.0.0",
                "npm-install-checks": "^7.1.1",
                "npm-package-arg": "^12.0.2",
                "npm-pick-manifest": "^10.0.0",
                "npm-profile": "^11.0.1",
                "npm-registry-fetch": "^18.0.2",
                "npm-user-validate": "^3.0.0",
                "p-map": "^7.0.3",
                "pacote": "^21.0.0",
                "parse-conflict-json": "^4.0.0",
                "proc-log": "^5.0.0",
                "qrcode-terminal": "^0.12.0",
                "read": "^4.1.0",
                "semver": "^7.7.2",
                "spdx-expression-parse": "^4.0.0",
                "ssri": "^12.0.0",
                "supports-color": "^10.0.0",
                "tar": "^6.2.1",
                "text-table": "~0.2.0",
                "tiny-relative-date": "^1.3.0",
                "treeverse": "^3.0.0",
                "validate-npm-package-name": "^6.0.2",
                "which": "^5.0.0"
            },
            "bin": {
                "npm": "bin/npm-cli.js",
                "npx": "bin/npx-cli.js"
            },
            "engines": {
                "node": "^20.17.0 || >=22.9.0"
            }
        },
        "node_modules/npm/node_modules/@isaacs/cliui": {
            "version": "8.0.2",
            "inBundle": true,
            "license": "ISC",
            "dependencies": {
                "string-width": "^5.1.2",
                "string-width-cjs": "npm:string-width@^4.2.0",
                "strip-ansi": "^7.0.1",
                "strip-ansi-cjs": "npm:strip-ansi@^6.0.1",
                "wrap-ansi": "^8.1.0",
                "wrap-ansi-cjs": "npm:wrap-ansi@^7.0.0"
            },
            "engines": {
                "node": ">=12"
            }
        },
        "node_modules/npm/node_modules/@isaacs/cliui/node_modules/ansi-regex": {
            "version": "6.1.0",
            "inBundle": true,
            "license": "MIT",
            "engines": {
                "node": ">=12"
            },
            "funding": {
                "url": "https://github.com/chalk/ansi-regex?sponsor=1"
            }
        },
        "node_modules/npm/node_modules/@isaacs/cliui/node_modules/emoji-regex": {
            "version": "9.2.2",
            "inBundle": true,
            "license": "MIT"
        },
        "node_modules/npm/node_modules/@isaacs/cliui/node_modules/string-width": {
            "version": "5.1.2",
            "inBundle": true,
            "license": "MIT",
            "dependencies": {
                "eastasianwidth": "^0.2.0",
                "emoji-regex": "^9.2.2",
                "strip-ansi": "^7.0.1"
            },
            "engines": {
                "node": ">=12"
            },
            "funding": {
                "url": "https://github.com/sponsors/sindresorhus"
            }
        },
        "node_modules/npm/node_modules/@isaacs/cliui/node_modules/strip-ansi": {
            "version": "7.1.0",
            "inBundle": true,
            "license": "MIT",
            "dependencies": {
                "ansi-regex": "^6.0.1"
            },
            "engines": {
                "node": ">=12"
            },
            "funding": {
                "url": "https://github.com/chalk/strip-ansi?sponsor=1"
            }
        },
        "node_modules/npm/node_modules/@isaacs/fs-minipass": {
            "version": "4.0.1",
            "inBundle": true,
            "license": "ISC",
            "dependencies": {
                "minipass": "^7.0.4"
            },
            "engines": {
                "node": ">=18.0.0"
            }
        },
        "node_modules/npm/node_modules/@isaacs/string-locale-compare": {
            "version": "1.1.0",
            "inBundle": true,
            "license": "ISC"
        },
        "node_modules/npm/node_modules/@npmcli/agent": {
            "version": "3.0.0",
            "inBundle": true,
            "license": "ISC",
            "dependencies": {
                "agent-base": "^7.1.0",
                "http-proxy-agent": "^7.0.0",
                "https-proxy-agent": "^7.0.1",
                "lru-cache": "^10.0.1",
                "socks-proxy-agent": "^8.0.3"
            },
            "engines": {
                "node": "^18.17.0 || >=20.5.0"
            }
        },
        "node_modules/npm/node_modules/@npmcli/arborist": {
            "version": "9.1.4",
            "inBundle": true,
            "license": "ISC",
            "dependencies": {
                "@isaacs/string-locale-compare": "^1.1.0",
                "@npmcli/fs": "^4.0.0",
                "@npmcli/installed-package-contents": "^3.0.0",
                "@npmcli/map-workspaces": "^4.0.1",
                "@npmcli/metavuln-calculator": "^9.0.0",
                "@npmcli/name-from-folder": "^3.0.0",
                "@npmcli/node-gyp": "^4.0.0",
                "@npmcli/package-json": "^6.0.1",
                "@npmcli/query": "^4.0.0",
                "@npmcli/redact": "^3.0.0",
                "@npmcli/run-script": "^9.0.1",
                "bin-links": "^5.0.0",
                "cacache": "^19.0.1",
                "common-ancestor-path": "^1.0.1",
                "hosted-git-info": "^8.0.0",
                "json-stringify-nice": "^1.1.4",
                "lru-cache": "^10.2.2",
                "minimatch": "^9.0.4",
                "nopt": "^8.0.0",
                "npm-install-checks": "^7.1.0",
                "npm-package-arg": "^12.0.0",
                "npm-pick-manifest": "^10.0.0",
                "npm-registry-fetch": "^18.0.1",
                "pacote": "^21.0.0",
                "parse-conflict-json": "^4.0.0",
                "proc-log": "^5.0.0",
                "proggy": "^3.0.0",
                "promise-all-reject-late": "^1.0.0",
                "promise-call-limit": "^3.0.1",
                "read-package-json-fast": "^4.0.0",
                "semver": "^7.3.7",
                "ssri": "^12.0.0",
                "treeverse": "^3.0.0",
                "walk-up-path": "^4.0.0"
            },
            "bin": {
                "arborist": "bin/index.js"
            },
            "engines": {
                "node": "^20.17.0 || >=22.9.0"
            }
        },
        "node_modules/npm/node_modules/@npmcli/config": {
            "version": "10.4.0",
            "inBundle": true,
            "license": "ISC",
            "dependencies": {
                "@npmcli/map-workspaces": "^4.0.1",
                "@npmcli/package-json": "^6.0.1",
                "ci-info": "^4.0.0",
                "ini": "^5.0.0",
                "nopt": "^8.1.0",
                "proc-log": "^5.0.0",
                "semver": "^7.3.5",
                "walk-up-path": "^4.0.0"
            },
            "engines": {
                "node": "^20.17.0 || >=22.9.0"
            }
        },
        "node_modules/npm/node_modules/@npmcli/fs": {
            "version": "4.0.0",
            "inBundle": true,
            "license": "ISC",
            "dependencies": {
                "semver": "^7.3.5"
            },
            "engines": {
                "node": "^18.17.0 || >=20.5.0"
            }
        },
        "node_modules/npm/node_modules/@npmcli/git": {
            "version": "6.0.3",
            "inBundle": true,
            "license": "ISC",
            "dependencies": {
                "@npmcli/promise-spawn": "^8.0.0",
                "ini": "^5.0.0",
                "lru-cache": "^10.0.1",
                "npm-pick-manifest": "^10.0.0",
                "proc-log": "^5.0.0",
                "promise-retry": "^2.0.1",
                "semver": "^7.3.5",
                "which": "^5.0.0"
            },
            "engines": {
                "node": "^18.17.0 || >=20.5.0"
            }
        },
        "node_modules/npm/node_modules/@npmcli/installed-package-contents": {
            "version": "3.0.0",
            "inBundle": true,
            "license": "ISC",
            "dependencies": {
                "npm-bundled": "^4.0.0",
                "npm-normalize-package-bin": "^4.0.0"
            },
            "bin": {
                "installed-package-contents": "bin/index.js"
            },
            "engines": {
                "node": "^18.17.0 || >=20.5.0"
            }
        },
        "node_modules/npm/node_modules/@npmcli/map-workspaces": {
            "version": "4.0.2",
            "inBundle": true,
            "license": "ISC",
            "dependencies": {
                "@npmcli/name-from-folder": "^3.0.0",
                "@npmcli/package-json": "^6.0.0",
                "glob": "^10.2.2",
                "minimatch": "^9.0.0"
            },
            "engines": {
                "node": "^18.17.0 || >=20.5.0"
            }
        },
        "node_modules/npm/node_modules/@npmcli/metavuln-calculator": {
            "version": "9.0.1",
            "inBundle": true,
            "license": "ISC",
            "dependencies": {
                "cacache": "^19.0.0",
                "json-parse-even-better-errors": "^4.0.0",
                "pacote": "^21.0.0",
                "proc-log": "^5.0.0",
                "semver": "^7.3.5"
            },
            "engines": {
                "node": "^20.17.0 || >=22.9.0"
            }
        },
        "node_modules/npm/node_modules/@npmcli/name-from-folder": {
            "version": "3.0.0",
            "inBundle": true,
            "license": "ISC",
            "engines": {
                "node": "^18.17.0 || >=20.5.0"
            }
        },
        "node_modules/npm/node_modules/@npmcli/node-gyp": {
            "version": "4.0.0",
            "inBundle": true,
            "license": "ISC",
            "engines": {
                "node": "^18.17.0 || >=20.5.0"
            }
        },
        "node_modules/npm/node_modules/@npmcli/package-json": {
            "version": "6.2.0",
            "inBundle": true,
            "license": "ISC",
            "dependencies": {
                "@npmcli/git": "^6.0.0",
                "glob": "^10.2.2",
                "hosted-git-info": "^8.0.0",
                "json-parse-even-better-errors": "^4.0.0",
                "proc-log": "^5.0.0",
                "semver": "^7.5.3",
                "validate-npm-package-license": "^3.0.4"
            },
            "engines": {
                "node": "^18.17.0 || >=20.5.0"
            }
        },
        "node_modules/npm/node_modules/@npmcli/promise-spawn": {
            "version": "8.0.2",
            "inBundle": true,
            "license": "ISC",
            "dependencies": {
                "which": "^5.0.0"
            },
            "engines": {
                "node": "^18.17.0 || >=20.5.0"
            }
        },
        "node_modules/npm/node_modules/@npmcli/query": {
            "version": "4.0.1",
            "inBundle": true,
            "license": "ISC",
            "dependencies": {
                "postcss-selector-parser": "^7.0.0"
            },
            "engines": {
                "node": "^18.17.0 || >=20.5.0"
            }
        },
        "node_modules/npm/node_modules/@npmcli/redact": {
            "version": "3.2.2",
            "inBundle": true,
            "license": "ISC",
            "engines": {
                "node": "^18.17.0 || >=20.5.0"
            }
        },
        "node_modules/npm/node_modules/@npmcli/run-script": {
            "version": "9.1.0",
            "inBundle": true,
            "license": "ISC",
            "dependencies": {
                "@npmcli/node-gyp": "^4.0.0",
                "@npmcli/package-json": "^6.0.0",
                "@npmcli/promise-spawn": "^8.0.0",
                "node-gyp": "^11.0.0",
                "proc-log": "^5.0.0",
                "which": "^5.0.0"
            },
            "engines": {
                "node": "^18.17.0 || >=20.5.0"
            }
        },
        "node_modules/npm/node_modules/@pkgjs/parseargs": {
            "version": "0.11.0",
            "inBundle": true,
            "license": "MIT",
            "optional": true,
            "engines": {
                "node": ">=14"
            }
        },
        "node_modules/npm/node_modules/@sigstore/bundle": {
            "version": "3.1.0",
            "inBundle": true,
            "license": "Apache-2.0",
            "dependencies": {
                "@sigstore/protobuf-specs": "^0.4.0"
            },
            "engines": {
                "node": "^18.17.0 || >=20.5.0"
            }
        },
        "node_modules/npm/node_modules/@sigstore/core": {
            "version": "2.0.0",
            "inBundle": true,
            "license": "Apache-2.0",
            "engines": {
                "node": "^18.17.0 || >=20.5.0"
            }
        },
        "node_modules/npm/node_modules/@sigstore/protobuf-specs": {
            "version": "0.4.3",
            "inBundle": true,
            "license": "Apache-2.0",
            "engines": {
                "node": "^18.17.0 || >=20.5.0"
            }
        },
        "node_modules/npm/node_modules/@sigstore/sign": {
            "version": "3.1.0",
            "inBundle": true,
            "license": "Apache-2.0",
            "dependencies": {
                "@sigstore/bundle": "^3.1.0",
                "@sigstore/core": "^2.0.0",
                "@sigstore/protobuf-specs": "^0.4.0",
                "make-fetch-happen": "^14.0.2",
                "proc-log": "^5.0.0",
                "promise-retry": "^2.0.1"
            },
            "engines": {
                "node": "^18.17.0 || >=20.5.0"
            }
        },
        "node_modules/npm/node_modules/@sigstore/tuf": {
            "version": "3.1.1",
            "inBundle": true,
            "license": "Apache-2.0",
            "dependencies": {
                "@sigstore/protobuf-specs": "^0.4.1",
                "tuf-js": "^3.0.1"
            },
            "engines": {
                "node": "^18.17.0 || >=20.5.0"
            }
        },
        "node_modules/npm/node_modules/@sigstore/verify": {
            "version": "2.1.1",
            "inBundle": true,
            "license": "Apache-2.0",
            "dependencies": {
                "@sigstore/bundle": "^3.1.0",
                "@sigstore/core": "^2.0.0",
                "@sigstore/protobuf-specs": "^0.4.1"
            },
            "engines": {
                "node": "^18.17.0 || >=20.5.0"
            }
        },
        "node_modules/npm/node_modules/@tufjs/canonical-json": {
            "version": "2.0.0",
            "inBundle": true,
            "license": "MIT",
            "engines": {
                "node": "^16.14.0 || >=18.0.0"
            }
        },
        "node_modules/npm/node_modules/@tufjs/models": {
            "version": "3.0.1",
            "inBundle": true,
            "license": "MIT",
            "dependencies": {
                "@tufjs/canonical-json": "2.0.0",
                "minimatch": "^9.0.5"
            },
            "engines": {
                "node": "^18.17.0 || >=20.5.0"
            }
        },
        "node_modules/npm/node_modules/abbrev": {
            "version": "3.0.1",
            "inBundle": true,
            "license": "ISC",
            "engines": {
                "node": "^18.17.0 || >=20.5.0"
            }
        },
        "node_modules/npm/node_modules/agent-base": {
            "version": "7.1.4",
            "inBundle": true,
            "license": "MIT",
            "engines": {
                "node": ">= 14"
            }
        },
        "node_modules/npm/node_modules/ansi-regex": {
            "version": "5.0.1",
            "inBundle": true,
            "license": "MIT",
            "engines": {
                "node": ">=8"
            }
        },
        "node_modules/npm/node_modules/ansi-styles": {
            "version": "6.2.1",
            "inBundle": true,
            "license": "MIT",
            "engines": {
                "node": ">=12"
            },
            "funding": {
                "url": "https://github.com/chalk/ansi-styles?sponsor=1"
            }
        },
        "node_modules/npm/node_modules/aproba": {
            "version": "2.1.0",
            "inBundle": true,
            "license": "ISC"
        },
        "node_modules/npm/node_modules/archy": {
            "version": "1.0.0",
            "inBundle": true,
            "license": "MIT"
        },
        "node_modules/npm/node_modules/balanced-match": {
            "version": "1.0.2",
            "inBundle": true,
            "license": "MIT"
        },
        "node_modules/npm/node_modules/bin-links": {
            "version": "5.0.0",
            "inBundle": true,
            "license": "ISC",
            "dependencies": {
                "cmd-shim": "^7.0.0",
                "npm-normalize-package-bin": "^4.0.0",
                "proc-log": "^5.0.0",
                "read-cmd-shim": "^5.0.0",
                "write-file-atomic": "^6.0.0"
            },
            "engines": {
                "node": "^18.17.0 || >=20.5.0"
            }
        },
        "node_modules/npm/node_modules/binary-extensions": {
            "version": "3.1.0",
            "inBundle": true,
            "license": "MIT",
            "engines": {
                "node": ">=18.20"
            },
            "funding": {
                "url": "https://github.com/sponsors/sindresorhus"
            }
        },
        "node_modules/npm/node_modules/brace-expansion": {
            "version": "2.0.2",
            "inBundle": true,
            "license": "MIT",
            "dependencies": {
                "balanced-match": "^1.0.0"
            }
        },
        "node_modules/npm/node_modules/cacache": {
            "version": "19.0.1",
            "inBundle": true,
            "license": "ISC",
            "dependencies": {
                "@npmcli/fs": "^4.0.0",
                "fs-minipass": "^3.0.0",
                "glob": "^10.2.2",
                "lru-cache": "^10.0.1",
                "minipass": "^7.0.3",
                "minipass-collect": "^2.0.1",
                "minipass-flush": "^1.0.5",
                "minipass-pipeline": "^1.2.4",
                "p-map": "^7.0.2",
                "ssri": "^12.0.0",
                "tar": "^7.4.3",
                "unique-filename": "^4.0.0"
            },
            "engines": {
                "node": "^18.17.0 || >=20.5.0"
            }
        },
        "node_modules/npm/node_modules/cacache/node_modules/chownr": {
            "version": "3.0.0",
            "inBundle": true,
            "license": "BlueOak-1.0.0",
            "engines": {
                "node": ">=18"
            }
        },
        "node_modules/npm/node_modules/cacache/node_modules/minizlib": {
            "version": "3.0.2",
            "inBundle": true,
            "license": "MIT",
            "dependencies": {
                "minipass": "^7.1.2"
            },
            "engines": {
                "node": ">= 18"
            }
        },
        "node_modules/npm/node_modules/cacache/node_modules/mkdirp": {
            "version": "3.0.1",
            "inBundle": true,
            "license": "MIT",
            "bin": {
                "mkdirp": "dist/cjs/src/bin.js"
            },
            "engines": {
                "node": ">=10"
            },
            "funding": {
                "url": "https://github.com/sponsors/isaacs"
            }
        },
        "node_modules/npm/node_modules/cacache/node_modules/tar": {
            "version": "7.4.3",
            "inBundle": true,
            "license": "ISC",
            "dependencies": {
                "@isaacs/fs-minipass": "^4.0.0",
                "chownr": "^3.0.0",
                "minipass": "^7.1.2",
                "minizlib": "^3.0.1",
                "mkdirp": "^3.0.1",
                "yallist": "^5.0.0"
            },
            "engines": {
                "node": ">=18"
            }
        },
        "node_modules/npm/node_modules/cacache/node_modules/yallist": {
            "version": "5.0.0",
            "inBundle": true,
            "license": "BlueOak-1.0.0",
            "engines": {
                "node": ">=18"
            }
        },
        "node_modules/npm/node_modules/chalk": {
            "version": "5.4.1",
            "inBundle": true,
            "license": "MIT",
            "engines": {
                "node": "^12.17.0 || ^14.13 || >=16.0.0"
            },
            "funding": {
                "url": "https://github.com/chalk/chalk?sponsor=1"
            }
        },
        "node_modules/npm/node_modules/chownr": {
            "version": "2.0.0",
            "inBundle": true,
            "license": "ISC",
            "engines": {
                "node": ">=10"
            }
        },
        "node_modules/npm/node_modules/ci-info": {
            "version": "4.3.0",
            "funding": [
                {
                    "type": "github",
                    "url": "https://github.com/sponsors/sibiraj-s"
                }
            ],
            "inBundle": true,
            "license": "MIT",
            "engines": {
                "node": ">=8"
            }
        },
        "node_modules/npm/node_modules/cidr-regex": {
            "version": "4.1.3",
            "inBundle": true,
            "license": "BSD-2-Clause",
            "dependencies": {
                "ip-regex": "^5.0.0"
            },
            "engines": {
                "node": ">=14"
            }
        },
        "node_modules/npm/node_modules/cli-columns": {
            "version": "4.0.0",
            "inBundle": true,
            "license": "MIT",
            "dependencies": {
                "string-width": "^4.2.3",
                "strip-ansi": "^6.0.1"
            },
            "engines": {
                "node": ">= 10"
            }
        },
        "node_modules/npm/node_modules/cmd-shim": {
            "version": "7.0.0",
            "inBundle": true,
            "license": "ISC",
            "engines": {
                "node": "^18.17.0 || >=20.5.0"
            }
        },
        "node_modules/npm/node_modules/color-convert": {
            "version": "2.0.1",
            "inBundle": true,
            "license": "MIT",
            "dependencies": {
                "color-name": "~1.1.4"
            },
            "engines": {
                "node": ">=7.0.0"
            }
        },
        "node_modules/npm/node_modules/color-name": {
            "version": "1.1.4",
            "inBundle": true,
            "license": "MIT"
        },
        "node_modules/npm/node_modules/common-ancestor-path": {
            "version": "1.0.1",
            "inBundle": true,
            "license": "ISC"
        },
        "node_modules/npm/node_modules/cross-spawn": {
            "version": "7.0.6",
            "inBundle": true,
            "license": "MIT",
            "dependencies": {
                "path-key": "^3.1.0",
                "shebang-command": "^2.0.0",
                "which": "^2.0.1"
            },
            "engines": {
                "node": ">= 8"
            }
        },
        "node_modules/npm/node_modules/cross-spawn/node_modules/which": {
            "version": "2.0.2",
            "inBundle": true,
            "license": "ISC",
            "dependencies": {
                "isexe": "^2.0.0"
            },
            "bin": {
                "node-which": "bin/node-which"
            },
            "engines": {
                "node": ">= 8"
            }
        },
        "node_modules/npm/node_modules/cssesc": {
            "version": "3.0.0",
            "inBundle": true,
            "license": "MIT",
            "bin": {
                "cssesc": "bin/cssesc"
            },
            "engines": {
                "node": ">=4"
            }
        },
        "node_modules/npm/node_modules/debug": {
            "version": "4.4.1",
            "inBundle": true,
            "license": "MIT",
            "dependencies": {
                "ms": "^2.1.3"
            },
            "engines": {
                "node": ">=6.0"
            },
            "peerDependenciesMeta": {
                "supports-color": {
                    "optional": true
                }
            }
        },
        "node_modules/npm/node_modules/diff": {
            "version": "7.0.0",
            "inBundle": true,
            "license": "BSD-3-Clause",
            "engines": {
                "node": ">=0.3.1"
            }
        },
        "node_modules/npm/node_modules/eastasianwidth": {
            "version": "0.2.0",
            "inBundle": true,
            "license": "MIT"
        },
        "node_modules/npm/node_modules/emoji-regex": {
            "version": "8.0.0",
            "inBundle": true,
            "license": "MIT"
        },
        "node_modules/npm/node_modules/encoding": {
            "version": "0.1.13",
            "inBundle": true,
            "license": "MIT",
            "optional": true,
            "dependencies": {
                "iconv-lite": "^0.6.2"
            }
        },
        "node_modules/npm/node_modules/env-paths": {
            "version": "2.2.1",
            "inBundle": true,
            "license": "MIT",
            "engines": {
                "node": ">=6"
            }
        },
        "node_modules/npm/node_modules/err-code": {
            "version": "2.0.3",
            "inBundle": true,
            "license": "MIT"
        },
        "node_modules/npm/node_modules/exponential-backoff": {
            "version": "3.1.2",
            "inBundle": true,
            "license": "Apache-2.0"
        },
        "node_modules/npm/node_modules/fastest-levenshtein": {
            "version": "1.0.16",
            "inBundle": true,
            "license": "MIT",
            "engines": {
                "node": ">= 4.9.1"
            }
        },
        "node_modules/npm/node_modules/foreground-child": {
            "version": "3.3.1",
            "inBundle": true,
            "license": "ISC",
            "dependencies": {
                "cross-spawn": "^7.0.6",
                "signal-exit": "^4.0.1"
            },
            "engines": {
                "node": ">=14"
            },
            "funding": {
                "url": "https://github.com/sponsors/isaacs"
            }
        },
        "node_modules/npm/node_modules/fs-minipass": {
            "version": "3.0.3",
            "inBundle": true,
            "license": "ISC",
            "dependencies": {
                "minipass": "^7.0.3"
            },
            "engines": {
                "node": "^14.17.0 || ^16.13.0 || >=18.0.0"
            }
        },
        "node_modules/npm/node_modules/glob": {
            "version": "10.4.5",
            "inBundle": true,
            "license": "ISC",
            "dependencies": {
                "foreground-child": "^3.1.0",
                "jackspeak": "^3.1.2",
                "minimatch": "^9.0.4",
                "minipass": "^7.1.2",
                "package-json-from-dist": "^1.0.0",
                "path-scurry": "^1.11.1"
            },
            "bin": {
                "glob": "dist/esm/bin.mjs"
            },
            "funding": {
                "url": "https://github.com/sponsors/isaacs"
            }
        },
        "node_modules/npm/node_modules/graceful-fs": {
            "version": "4.2.11",
            "inBundle": true,
            "license": "ISC"
        },
        "node_modules/npm/node_modules/hosted-git-info": {
            "version": "8.1.0",
            "inBundle": true,
            "license": "ISC",
            "dependencies": {
                "lru-cache": "^10.0.1"
            },
            "engines": {
                "node": "^18.17.0 || >=20.5.0"
            }
        },
        "node_modules/npm/node_modules/http-cache-semantics": {
            "version": "4.2.0",
            "inBundle": true,
            "license": "BSD-2-Clause"
        },
        "node_modules/npm/node_modules/http-proxy-agent": {
            "version": "7.0.2",
            "inBundle": true,
            "license": "MIT",
            "dependencies": {
                "agent-base": "^7.1.0",
                "debug": "^4.3.4"
            },
            "engines": {
                "node": ">= 14"
            }
        },
        "node_modules/npm/node_modules/https-proxy-agent": {
            "version": "7.0.6",
            "inBundle": true,
            "license": "MIT",
            "dependencies": {
                "agent-base": "^7.1.2",
                "debug": "4"
            },
            "engines": {
                "node": ">= 14"
            }
        },
        "node_modules/npm/node_modules/iconv-lite": {
            "version": "0.6.3",
            "inBundle": true,
            "license": "MIT",
            "optional": true,
            "dependencies": {
                "safer-buffer": ">= 2.1.2 < 3.0.0"
            },
            "engines": {
                "node": ">=0.10.0"
            }
        },
        "node_modules/npm/node_modules/ignore-walk": {
            "version": "7.0.0",
            "inBundle": true,
            "license": "ISC",
            "dependencies": {
                "minimatch": "^9.0.0"
            },
            "engines": {
                "node": "^18.17.0 || >=20.5.0"
            }
        },
        "node_modules/npm/node_modules/imurmurhash": {
            "version": "0.1.4",
            "inBundle": true,
            "license": "MIT",
            "engines": {
                "node": ">=0.8.19"
            }
        },
        "node_modules/npm/node_modules/ini": {
            "version": "5.0.0",
            "inBundle": true,
            "license": "ISC",
            "engines": {
                "node": "^18.17.0 || >=20.5.0"
            }
        },
        "node_modules/npm/node_modules/init-package-json": {
            "version": "8.2.1",
            "inBundle": true,
            "license": "ISC",
            "dependencies": {
                "@npmcli/package-json": "^6.1.0",
                "npm-package-arg": "^12.0.0",
                "promzard": "^2.0.0",
                "read": "^4.0.0",
                "semver": "^7.3.5",
                "validate-npm-package-license": "^3.0.4",
                "validate-npm-package-name": "^6.0.0"
            },
            "engines": {
                "node": "^20.17.0 || >=22.9.0"
            }
        },
        "node_modules/npm/node_modules/ip-address": {
            "version": "9.0.5",
            "inBundle": true,
            "license": "MIT",
            "dependencies": {
                "jsbn": "1.1.0",
                "sprintf-js": "^1.1.3"
            },
            "engines": {
                "node": ">= 12"
            }
        },
        "node_modules/npm/node_modules/ip-regex": {
            "version": "5.0.0",
            "inBundle": true,
            "license": "MIT",
            "engines": {
                "node": "^12.20.0 || ^14.13.1 || >=16.0.0"
            },
            "funding": {
                "url": "https://github.com/sponsors/sindresorhus"
            }
        },
        "node_modules/npm/node_modules/is-cidr": {
            "version": "5.1.1",
            "inBundle": true,
            "license": "BSD-2-Clause",
            "dependencies": {
                "cidr-regex": "^4.1.1"
            },
            "engines": {
                "node": ">=14"
            }
        },
        "node_modules/npm/node_modules/is-fullwidth-code-point": {
            "version": "3.0.0",
            "inBundle": true,
            "license": "MIT",
            "engines": {
                "node": ">=8"
            }
        },
        "node_modules/npm/node_modules/isexe": {
            "version": "2.0.0",
            "inBundle": true,
            "license": "ISC"
        },
        "node_modules/npm/node_modules/jackspeak": {
            "version": "3.4.3",
            "inBundle": true,
            "license": "BlueOak-1.0.0",
            "dependencies": {
                "@isaacs/cliui": "^8.0.2"
            },
            "funding": {
                "url": "https://github.com/sponsors/isaacs"
            },
            "optionalDependencies": {
                "@pkgjs/parseargs": "^0.11.0"
            }
        },
        "node_modules/npm/node_modules/jsbn": {
            "version": "1.1.0",
            "inBundle": true,
            "license": "MIT"
        },
        "node_modules/npm/node_modules/json-parse-even-better-errors": {
            "version": "4.0.0",
            "inBundle": true,
            "license": "MIT",
            "engines": {
                "node": "^18.17.0 || >=20.5.0"
            }
        },
        "node_modules/npm/node_modules/json-stringify-nice": {
            "version": "1.1.4",
            "inBundle": true,
            "license": "ISC",
            "funding": {
                "url": "https://github.com/sponsors/isaacs"
            }
        },
        "node_modules/npm/node_modules/jsonparse": {
            "version": "1.3.1",
            "engines": [
                "node >= 0.2.0"
            ],
            "inBundle": true,
            "license": "MIT"
        },
        "node_modules/npm/node_modules/just-diff": {
            "version": "6.0.2",
            "inBundle": true,
            "license": "MIT"
        },
        "node_modules/npm/node_modules/just-diff-apply": {
            "version": "5.5.0",
            "inBundle": true,
            "license": "MIT"
        },
        "node_modules/npm/node_modules/libnpmaccess": {
            "version": "10.0.1",
            "inBundle": true,
            "license": "ISC",
            "dependencies": {
                "npm-package-arg": "^12.0.0",
                "npm-registry-fetch": "^18.0.1"
            },
            "engines": {
                "node": "^20.17.0 || >=22.9.0"
            }
        },
        "node_modules/npm/node_modules/libnpmdiff": {
            "version": "8.0.7",
            "inBundle": true,
            "license": "ISC",
            "dependencies": {
                "@npmcli/arborist": "^9.1.4",
                "@npmcli/installed-package-contents": "^3.0.0",
                "binary-extensions": "^3.0.0",
                "diff": "^7.0.0",
                "minimatch": "^9.0.4",
                "npm-package-arg": "^12.0.0",
                "pacote": "^21.0.0",
                "tar": "^6.2.1"
            },
            "engines": {
                "node": "^20.17.0 || >=22.9.0"
            }
        },
        "node_modules/npm/node_modules/libnpmexec": {
            "version": "10.1.6",
            "inBundle": true,
            "license": "ISC",
            "dependencies": {
                "@npmcli/arborist": "^9.1.4",
                "@npmcli/package-json": "^6.1.1",
                "@npmcli/run-script": "^9.0.1",
                "ci-info": "^4.0.0",
                "npm-package-arg": "^12.0.0",
                "pacote": "^21.0.0",
                "proc-log": "^5.0.0",
                "read": "^4.0.0",
                "read-package-json-fast": "^4.0.0",
                "semver": "^7.3.7",
                "walk-up-path": "^4.0.0"
            },
            "engines": {
                "node": "^20.17.0 || >=22.9.0"
            }
        },
        "node_modules/npm/node_modules/libnpmfund": {
            "version": "7.0.7",
            "inBundle": true,
            "license": "ISC",
            "dependencies": {
                "@npmcli/arborist": "^9.1.4"
            },
            "engines": {
                "node": "^20.17.0 || >=22.9.0"
            }
        },
        "node_modules/npm/node_modules/libnpmorg": {
            "version": "8.0.0",
            "inBundle": true,
            "license": "ISC",
            "dependencies": {
                "aproba": "^2.0.0",
                "npm-registry-fetch": "^18.0.1"
            },
            "engines": {
                "node": "^20.17.0 || >=22.9.0"
            }
        },
        "node_modules/npm/node_modules/libnpmpack": {
            "version": "9.0.7",
            "inBundle": true,
            "license": "ISC",
            "dependencies": {
                "@npmcli/arborist": "^9.1.4",
                "@npmcli/run-script": "^9.0.1",
                "npm-package-arg": "^12.0.0",
                "pacote": "^21.0.0"
            },
            "engines": {
                "node": "^20.17.0 || >=22.9.0"
            }
        },
        "node_modules/npm/node_modules/libnpmpublish": {
            "version": "11.1.0",
            "inBundle": true,
            "license": "ISC",
            "dependencies": {
                "@npmcli/package-json": "^6.2.0",
                "ci-info": "^4.0.0",
                "npm-package-arg": "^12.0.0",
                "npm-registry-fetch": "^18.0.1",
                "proc-log": "^5.0.0",
                "semver": "^7.3.7",
                "sigstore": "^3.0.0",
                "ssri": "^12.0.0"
            },
            "engines": {
                "node": "^20.17.0 || >=22.9.0"
            }
        },
        "node_modules/npm/node_modules/libnpmsearch": {
            "version": "9.0.0",
            "inBundle": true,
            "license": "ISC",
            "dependencies": {
                "npm-registry-fetch": "^18.0.1"
            },
            "engines": {
                "node": "^20.17.0 || >=22.9.0"
            }
        },
        "node_modules/npm/node_modules/libnpmteam": {
            "version": "8.0.1",
            "inBundle": true,
            "license": "ISC",
            "dependencies": {
                "aproba": "^2.0.0",
                "npm-registry-fetch": "^18.0.1"
            },
            "engines": {
                "node": "^20.17.0 || >=22.9.0"
            }
        },
        "node_modules/npm/node_modules/libnpmversion": {
            "version": "8.0.1",
            "inBundle": true,
            "license": "ISC",
            "dependencies": {
                "@npmcli/git": "^6.0.1",
                "@npmcli/run-script": "^9.0.1",
                "json-parse-even-better-errors": "^4.0.0",
                "proc-log": "^5.0.0",
                "semver": "^7.3.7"
            },
            "engines": {
                "node": "^20.17.0 || >=22.9.0"
            }
        },
        "node_modules/npm/node_modules/lru-cache": {
            "version": "10.4.3",
            "inBundle": true,
            "license": "ISC"
        },
        "node_modules/npm/node_modules/make-fetch-happen": {
            "version": "14.0.3",
            "inBundle": true,
            "license": "ISC",
            "dependencies": {
                "@npmcli/agent": "^3.0.0",
                "cacache": "^19.0.1",
                "http-cache-semantics": "^4.1.1",
                "minipass": "^7.0.2",
                "minipass-fetch": "^4.0.0",
                "minipass-flush": "^1.0.5",
                "minipass-pipeline": "^1.2.4",
                "negotiator": "^1.0.0",
                "proc-log": "^5.0.0",
                "promise-retry": "^2.0.1",
                "ssri": "^12.0.0"
            },
            "engines": {
                "node": "^18.17.0 || >=20.5.0"
            }
        },
        "node_modules/npm/node_modules/make-fetch-happen/node_modules/negotiator": {
            "version": "1.0.0",
            "inBundle": true,
            "license": "MIT",
            "engines": {
                "node": ">= 0.6"
            }
        },
        "node_modules/npm/node_modules/minimatch": {
            "version": "9.0.5",
            "inBundle": true,
            "license": "ISC",
            "dependencies": {
                "brace-expansion": "^2.0.1"
            },
            "engines": {
                "node": ">=16 || 14 >=14.17"
            },
            "funding": {
                "url": "https://github.com/sponsors/isaacs"
            }
        },
        "node_modules/npm/node_modules/minipass": {
            "version": "7.1.2",
            "inBundle": true,
            "license": "ISC",
            "engines": {
                "node": ">=16 || 14 >=14.17"
            }
        },
        "node_modules/npm/node_modules/minipass-collect": {
            "version": "2.0.1",
            "inBundle": true,
            "license": "ISC",
            "dependencies": {
                "minipass": "^7.0.3"
            },
            "engines": {
                "node": ">=16 || 14 >=14.17"
            }
        },
        "node_modules/npm/node_modules/minipass-fetch": {
            "version": "4.0.1",
            "inBundle": true,
            "license": "MIT",
            "dependencies": {
                "minipass": "^7.0.3",
                "minipass-sized": "^1.0.3",
                "minizlib": "^3.0.1"
            },
            "engines": {
                "node": "^18.17.0 || >=20.5.0"
            },
            "optionalDependencies": {
                "encoding": "^0.1.13"
            }
        },
        "node_modules/npm/node_modules/minipass-fetch/node_modules/minizlib": {
            "version": "3.0.2",
            "inBundle": true,
            "license": "MIT",
            "dependencies": {
                "minipass": "^7.1.2"
            },
            "engines": {
                "node": ">= 18"
            }
        },
        "node_modules/npm/node_modules/minipass-flush": {
            "version": "1.0.5",
            "inBundle": true,
            "license": "ISC",
            "dependencies": {
                "minipass": "^3.0.0"
            },
            "engines": {
                "node": ">= 8"
            }
        },
        "node_modules/npm/node_modules/minipass-flush/node_modules/minipass": {
            "version": "3.3.6",
            "inBundle": true,
            "license": "ISC",
            "dependencies": {
                "yallist": "^4.0.0"
            },
            "engines": {
                "node": ">=8"
            }
        },
        "node_modules/npm/node_modules/minipass-pipeline": {
            "version": "1.2.4",
            "inBundle": true,
            "license": "ISC",
            "dependencies": {
                "minipass": "^3.0.0"
            },
            "engines": {
                "node": ">=8"
            }
        },
        "node_modules/npm/node_modules/minipass-pipeline/node_modules/minipass": {
            "version": "3.3.6",
            "inBundle": true,
            "license": "ISC",
            "dependencies": {
                "yallist": "^4.0.0"
            },
            "engines": {
                "node": ">=8"
            }
        },
        "node_modules/npm/node_modules/minipass-sized": {
            "version": "1.0.3",
            "inBundle": true,
            "license": "ISC",
            "dependencies": {
                "minipass": "^3.0.0"
            },
            "engines": {
                "node": ">=8"
            }
        },
        "node_modules/npm/node_modules/minipass-sized/node_modules/minipass": {
            "version": "3.3.6",
            "inBundle": true,
            "license": "ISC",
            "dependencies": {
                "yallist": "^4.0.0"
            },
            "engines": {
                "node": ">=8"
            }
        },
        "node_modules/npm/node_modules/minizlib": {
            "version": "2.1.2",
            "inBundle": true,
            "license": "MIT",
            "dependencies": {
                "minipass": "^3.0.0",
                "yallist": "^4.0.0"
            },
            "engines": {
                "node": ">= 8"
            }
        },
        "node_modules/npm/node_modules/minizlib/node_modules/minipass": {
            "version": "3.3.6",
            "inBundle": true,
            "license": "ISC",
            "dependencies": {
                "yallist": "^4.0.0"
            },
            "engines": {
                "node": ">=8"
            }
        },
        "node_modules/npm/node_modules/mkdirp": {
            "version": "1.0.4",
            "inBundle": true,
            "license": "MIT",
            "bin": {
                "mkdirp": "bin/cmd.js"
            },
            "engines": {
                "node": ">=10"
            }
        },
        "node_modules/npm/node_modules/ms": {
            "version": "2.1.3",
            "inBundle": true,
            "license": "MIT"
        },
        "node_modules/npm/node_modules/mute-stream": {
            "version": "2.0.0",
            "inBundle": true,
            "license": "ISC",
            "engines": {
                "node": "^18.17.0 || >=20.5.0"
            }
        },
        "node_modules/npm/node_modules/node-gyp": {
            "version": "11.2.0",
            "inBundle": true,
            "license": "MIT",
            "dependencies": {
                "env-paths": "^2.2.0",
                "exponential-backoff": "^3.1.1",
                "graceful-fs": "^4.2.6",
                "make-fetch-happen": "^14.0.3",
                "nopt": "^8.0.0",
                "proc-log": "^5.0.0",
                "semver": "^7.3.5",
                "tar": "^7.4.3",
                "tinyglobby": "^0.2.12",
                "which": "^5.0.0"
            },
            "bin": {
                "node-gyp": "bin/node-gyp.js"
            },
            "engines": {
                "node": "^18.17.0 || >=20.5.0"
            }
        },
        "node_modules/npm/node_modules/node-gyp/node_modules/chownr": {
            "version": "3.0.0",
            "inBundle": true,
            "license": "BlueOak-1.0.0",
            "engines": {
                "node": ">=18"
            }
        },
        "node_modules/npm/node_modules/node-gyp/node_modules/minizlib": {
            "version": "3.0.2",
            "inBundle": true,
            "license": "MIT",
            "dependencies": {
                "minipass": "^7.1.2"
            },
            "engines": {
                "node": ">= 18"
            }
        },
        "node_modules/npm/node_modules/node-gyp/node_modules/mkdirp": {
            "version": "3.0.1",
            "inBundle": true,
            "license": "MIT",
            "bin": {
                "mkdirp": "dist/cjs/src/bin.js"
            },
            "engines": {
                "node": ">=10"
            },
            "funding": {
                "url": "https://github.com/sponsors/isaacs"
            }
        },
        "node_modules/npm/node_modules/node-gyp/node_modules/tar": {
            "version": "7.4.3",
            "inBundle": true,
            "license": "ISC",
            "dependencies": {
                "@isaacs/fs-minipass": "^4.0.0",
                "chownr": "^3.0.0",
                "minipass": "^7.1.2",
                "minizlib": "^3.0.1",
                "mkdirp": "^3.0.1",
                "yallist": "^5.0.0"
            },
            "engines": {
                "node": ">=18"
            }
        },
        "node_modules/npm/node_modules/node-gyp/node_modules/yallist": {
            "version": "5.0.0",
            "inBundle": true,
            "license": "BlueOak-1.0.0",
            "engines": {
                "node": ">=18"
            }
        },
        "node_modules/npm/node_modules/nopt": {
            "version": "8.1.0",
            "inBundle": true,
            "license": "ISC",
            "dependencies": {
                "abbrev": "^3.0.0"
            },
            "bin": {
                "nopt": "bin/nopt.js"
            },
            "engines": {
                "node": "^18.17.0 || >=20.5.0"
            }
        },
        "node_modules/npm/node_modules/normalize-package-data": {
            "version": "7.0.1",
            "inBundle": true,
            "license": "BSD-2-Clause",
            "dependencies": {
                "hosted-git-info": "^8.0.0",
                "semver": "^7.3.5",
                "validate-npm-package-license": "^3.0.4"
            },
            "engines": {
                "node": "^18.17.0 || >=20.5.0"
            }
        },
        "node_modules/npm/node_modules/npm-audit-report": {
            "version": "6.0.0",
            "inBundle": true,
            "license": "ISC",
            "engines": {
                "node": "^18.17.0 || >=20.5.0"
            }
        },
        "node_modules/npm/node_modules/npm-bundled": {
            "version": "4.0.0",
            "inBundle": true,
            "license": "ISC",
            "dependencies": {
                "npm-normalize-package-bin": "^4.0.0"
            },
            "engines": {
                "node": "^18.17.0 || >=20.5.0"
            }
        },
        "node_modules/npm/node_modules/npm-install-checks": {
            "version": "7.1.1",
            "inBundle": true,
            "license": "BSD-2-Clause",
            "dependencies": {
                "semver": "^7.1.1"
            },
            "engines": {
                "node": "^18.17.0 || >=20.5.0"
            }
        },
        "node_modules/npm/node_modules/npm-normalize-package-bin": {
            "version": "4.0.0",
            "inBundle": true,
            "license": "ISC",
            "engines": {
                "node": "^18.17.0 || >=20.5.0"
            }
        },
        "node_modules/npm/node_modules/npm-package-arg": {
            "version": "12.0.2",
            "inBundle": true,
            "license": "ISC",
            "dependencies": {
                "hosted-git-info": "^8.0.0",
                "proc-log": "^5.0.0",
                "semver": "^7.3.5",
                "validate-npm-package-name": "^6.0.0"
            },
            "engines": {
                "node": "^18.17.0 || >=20.5.0"
            }
        },
        "node_modules/npm/node_modules/npm-packlist": {
            "version": "10.0.0",
            "inBundle": true,
            "license": "ISC",
            "dependencies": {
                "ignore-walk": "^7.0.0"
            },
            "engines": {
                "node": "^20.17.0 || >=22.9.0"
            }
        },
        "node_modules/npm/node_modules/npm-pick-manifest": {
            "version": "10.0.0",
            "inBundle": true,
            "license": "ISC",
            "dependencies": {
                "npm-install-checks": "^7.1.0",
                "npm-normalize-package-bin": "^4.0.0",
                "npm-package-arg": "^12.0.0",
                "semver": "^7.3.5"
            },
            "engines": {
                "node": "^18.17.0 || >=20.5.0"
            }
        },
        "node_modules/npm/node_modules/npm-profile": {
            "version": "11.0.1",
            "inBundle": true,
            "license": "ISC",
            "dependencies": {
                "npm-registry-fetch": "^18.0.0",
                "proc-log": "^5.0.0"
            },
            "engines": {
                "node": "^18.17.0 || >=20.5.0"
            }
        },
        "node_modules/npm/node_modules/npm-registry-fetch": {
            "version": "18.0.2",
            "inBundle": true,
            "license": "ISC",
            "dependencies": {
                "@npmcli/redact": "^3.0.0",
                "jsonparse": "^1.3.1",
                "make-fetch-happen": "^14.0.0",
                "minipass": "^7.0.2",
                "minipass-fetch": "^4.0.0",
                "minizlib": "^3.0.1",
                "npm-package-arg": "^12.0.0",
                "proc-log": "^5.0.0"
            },
            "engines": {
                "node": "^18.17.0 || >=20.5.0"
            }
        },
        "node_modules/npm/node_modules/npm-registry-fetch/node_modules/minizlib": {
            "version": "3.0.2",
            "inBundle": true,
            "license": "MIT",
            "dependencies": {
                "minipass": "^7.1.2"
            },
            "engines": {
                "node": ">= 18"
            }
        },
        "node_modules/npm/node_modules/npm-user-validate": {
            "version": "3.0.0",
            "inBundle": true,
            "license": "BSD-2-Clause",
            "engines": {
                "node": "^18.17.0 || >=20.5.0"
            }
        },
        "node_modules/npm/node_modules/p-map": {
            "version": "7.0.3",
            "inBundle": true,
            "license": "MIT",
            "engines": {
                "node": ">=18"
            },
            "funding": {
                "url": "https://github.com/sponsors/sindresorhus"
            }
        },
        "node_modules/npm/node_modules/package-json-from-dist": {
            "version": "1.0.1",
            "inBundle": true,
            "license": "BlueOak-1.0.0"
        },
        "node_modules/npm/node_modules/pacote": {
            "version": "21.0.0",
            "inBundle": true,
            "license": "ISC",
            "dependencies": {
                "@npmcli/git": "^6.0.0",
                "@npmcli/installed-package-contents": "^3.0.0",
                "@npmcli/package-json": "^6.0.0",
                "@npmcli/promise-spawn": "^8.0.0",
                "@npmcli/run-script": "^9.0.0",
                "cacache": "^19.0.0",
                "fs-minipass": "^3.0.0",
                "minipass": "^7.0.2",
                "npm-package-arg": "^12.0.0",
                "npm-packlist": "^10.0.0",
                "npm-pick-manifest": "^10.0.0",
                "npm-registry-fetch": "^18.0.0",
                "proc-log": "^5.0.0",
                "promise-retry": "^2.0.1",
                "sigstore": "^3.0.0",
                "ssri": "^12.0.0",
                "tar": "^6.1.11"
            },
            "bin": {
                "pacote": "bin/index.js"
            },
            "engines": {
                "node": "^20.17.0 || >=22.9.0"
            }
        },
        "node_modules/npm/node_modules/parse-conflict-json": {
            "version": "4.0.0",
            "inBundle": true,
            "license": "ISC",
            "dependencies": {
                "json-parse-even-better-errors": "^4.0.0",
                "just-diff": "^6.0.0",
                "just-diff-apply": "^5.2.0"
            },
            "engines": {
                "node": "^18.17.0 || >=20.5.0"
            }
        },
        "node_modules/npm/node_modules/path-key": {
            "version": "3.1.1",
            "inBundle": true,
            "license": "MIT",
            "engines": {
                "node": ">=8"
            }
        },
        "node_modules/npm/node_modules/path-scurry": {
            "version": "1.11.1",
            "inBundle": true,
            "license": "BlueOak-1.0.0",
            "dependencies": {
                "lru-cache": "^10.2.0",
                "minipass": "^5.0.0 || ^6.0.2 || ^7.0.0"
            },
            "engines": {
                "node": ">=16 || 14 >=14.18"
            },
            "funding": {
                "url": "https://github.com/sponsors/isaacs"
            }
        },
        "node_modules/npm/node_modules/postcss-selector-parser": {
            "version": "7.1.0",
            "inBundle": true,
            "license": "MIT",
            "dependencies": {
                "cssesc": "^3.0.0",
                "util-deprecate": "^1.0.2"
            },
            "engines": {
                "node": ">=4"
            }
        },
        "node_modules/npm/node_modules/proc-log": {
            "version": "5.0.0",
            "inBundle": true,
            "license": "ISC",
            "engines": {
                "node": "^18.17.0 || >=20.5.0"
            }
        },
        "node_modules/npm/node_modules/proggy": {
            "version": "3.0.0",
            "inBundle": true,
            "license": "ISC",
            "engines": {
                "node": "^18.17.0 || >=20.5.0"
            }
        },
        "node_modules/npm/node_modules/promise-all-reject-late": {
            "version": "1.0.1",
            "inBundle": true,
            "license": "ISC",
            "funding": {
                "url": "https://github.com/sponsors/isaacs"
            }
        },
        "node_modules/npm/node_modules/promise-call-limit": {
            "version": "3.0.2",
            "inBundle": true,
            "license": "ISC",
            "funding": {
                "url": "https://github.com/sponsors/isaacs"
            }
        },
        "node_modules/npm/node_modules/promise-retry": {
            "version": "2.0.1",
            "inBundle": true,
            "license": "MIT",
            "dependencies": {
                "err-code": "^2.0.2",
                "retry": "^0.12.0"
            },
            "engines": {
                "node": ">=10"
            }
        },
        "node_modules/npm/node_modules/promzard": {
            "version": "2.0.0",
            "inBundle": true,
            "license": "ISC",
            "dependencies": {
                "read": "^4.0.0"
            },
            "engines": {
                "node": "^18.17.0 || >=20.5.0"
            }
        },
        "node_modules/npm/node_modules/qrcode-terminal": {
            "version": "0.12.0",
            "inBundle": true,
            "bin": {
                "qrcode-terminal": "bin/qrcode-terminal.js"
            }
        },
        "node_modules/npm/node_modules/read": {
            "version": "4.1.0",
            "inBundle": true,
            "license": "ISC",
            "dependencies": {
                "mute-stream": "^2.0.0"
            },
            "engines": {
                "node": "^18.17.0 || >=20.5.0"
            }
        },
        "node_modules/npm/node_modules/read-cmd-shim": {
            "version": "5.0.0",
            "inBundle": true,
            "license": "ISC",
            "engines": {
                "node": "^18.17.0 || >=20.5.0"
            }
        },
        "node_modules/npm/node_modules/read-package-json-fast": {
            "version": "4.0.0",
            "inBundle": true,
            "license": "ISC",
            "dependencies": {
                "json-parse-even-better-errors": "^4.0.0",
                "npm-normalize-package-bin": "^4.0.0"
            },
            "engines": {
                "node": "^18.17.0 || >=20.5.0"
            }
        },
        "node_modules/npm/node_modules/retry": {
            "version": "0.12.0",
            "inBundle": true,
            "license": "MIT",
            "engines": {
                "node": ">= 4"
            }
        },
        "node_modules/npm/node_modules/safer-buffer": {
            "version": "2.1.2",
            "inBundle": true,
            "license": "MIT",
            "optional": true
        },
        "node_modules/npm/node_modules/semver": {
            "version": "7.7.2",
            "inBundle": true,
            "license": "ISC",
            "bin": {
                "semver": "bin/semver.js"
            },
            "engines": {
                "node": ">=10"
            }
        },
        "node_modules/npm/node_modules/shebang-command": {
            "version": "2.0.0",
            "inBundle": true,
            "license": "MIT",
            "dependencies": {
                "shebang-regex": "^3.0.0"
            },
            "engines": {
                "node": ">=8"
            }
        },
        "node_modules/npm/node_modules/shebang-regex": {
            "version": "3.0.0",
            "inBundle": true,
            "license": "MIT",
            "engines": {
                "node": ">=8"
            }
        },
        "node_modules/npm/node_modules/signal-exit": {
            "version": "4.1.0",
            "inBundle": true,
            "license": "ISC",
            "engines": {
                "node": ">=14"
            },
            "funding": {
                "url": "https://github.com/sponsors/isaacs"
            }
        },
        "node_modules/npm/node_modules/sigstore": {
            "version": "3.1.0",
            "inBundle": true,
            "license": "Apache-2.0",
            "dependencies": {
                "@sigstore/bundle": "^3.1.0",
                "@sigstore/core": "^2.0.0",
                "@sigstore/protobuf-specs": "^0.4.0",
                "@sigstore/sign": "^3.1.0",
                "@sigstore/tuf": "^3.1.0",
                "@sigstore/verify": "^2.1.0"
            },
            "engines": {
                "node": "^18.17.0 || >=20.5.0"
            }
        },
        "node_modules/npm/node_modules/smart-buffer": {
            "version": "4.2.0",
            "inBundle": true,
            "license": "MIT",
            "engines": {
                "node": ">= 6.0.0",
                "npm": ">= 3.0.0"
            }
        },
        "node_modules/npm/node_modules/socks": {
            "version": "2.8.6",
            "inBundle": true,
            "license": "MIT",
            "dependencies": {
                "ip-address": "^9.0.5",
                "smart-buffer": "^4.2.0"
            },
            "engines": {
                "node": ">= 10.0.0",
                "npm": ">= 3.0.0"
            }
        },
        "node_modules/npm/node_modules/socks-proxy-agent": {
            "version": "8.0.5",
            "inBundle": true,
            "license": "MIT",
            "dependencies": {
                "agent-base": "^7.1.2",
                "debug": "^4.3.4",
                "socks": "^2.8.3"
            },
            "engines": {
                "node": ">= 14"
            }
        },
        "node_modules/npm/node_modules/spdx-correct": {
            "version": "3.2.0",
            "inBundle": true,
            "license": "Apache-2.0",
            "dependencies": {
                "spdx-expression-parse": "^3.0.0",
                "spdx-license-ids": "^3.0.0"
            }
        },
        "node_modules/npm/node_modules/spdx-correct/node_modules/spdx-expression-parse": {
            "version": "3.0.1",
            "inBundle": true,
            "license": "MIT",
            "dependencies": {
                "spdx-exceptions": "^2.1.0",
                "spdx-license-ids": "^3.0.0"
            }
        },
        "node_modules/npm/node_modules/spdx-exceptions": {
            "version": "2.5.0",
            "inBundle": true,
            "license": "CC-BY-3.0"
        },
        "node_modules/npm/node_modules/spdx-expression-parse": {
            "version": "4.0.0",
            "inBundle": true,
            "license": "MIT",
            "dependencies": {
                "spdx-exceptions": "^2.1.0",
                "spdx-license-ids": "^3.0.0"
            }
        },
        "node_modules/npm/node_modules/spdx-license-ids": {
            "version": "3.0.21",
            "inBundle": true,
            "license": "CC0-1.0"
        },
        "node_modules/npm/node_modules/sprintf-js": {
            "version": "1.1.3",
            "inBundle": true,
            "license": "BSD-3-Clause"
        },
        "node_modules/npm/node_modules/ssri": {
            "version": "12.0.0",
            "inBundle": true,
            "license": "ISC",
            "dependencies": {
                "minipass": "^7.0.3"
            },
            "engines": {
                "node": "^18.17.0 || >=20.5.0"
            }
        },
        "node_modules/npm/node_modules/string-width": {
            "version": "4.2.3",
            "inBundle": true,
            "license": "MIT",
            "dependencies": {
                "emoji-regex": "^8.0.0",
                "is-fullwidth-code-point": "^3.0.0",
                "strip-ansi": "^6.0.1"
            },
            "engines": {
                "node": ">=8"
            }
        },
        "node_modules/npm/node_modules/string-width-cjs": {
            "name": "string-width",
            "version": "4.2.3",
            "inBundle": true,
            "license": "MIT",
            "dependencies": {
                "emoji-regex": "^8.0.0",
                "is-fullwidth-code-point": "^3.0.0",
                "strip-ansi": "^6.0.1"
            },
            "engines": {
                "node": ">=8"
            }
        },
        "node_modules/npm/node_modules/strip-ansi": {
            "version": "6.0.1",
            "inBundle": true,
            "license": "MIT",
            "dependencies": {
                "ansi-regex": "^5.0.1"
            },
            "engines": {
                "node": ">=8"
            }
        },
        "node_modules/npm/node_modules/strip-ansi-cjs": {
            "name": "strip-ansi",
            "version": "6.0.1",
            "inBundle": true,
            "license": "MIT",
            "dependencies": {
                "ansi-regex": "^5.0.1"
            },
            "engines": {
                "node": ">=8"
            }
        },
        "node_modules/npm/node_modules/supports-color": {
            "version": "10.0.0",
            "inBundle": true,
            "license": "MIT",
            "engines": {
                "node": ">=18"
            },
            "funding": {
                "url": "https://github.com/chalk/supports-color?sponsor=1"
            }
        },
        "node_modules/npm/node_modules/tar": {
            "version": "6.2.1",
            "inBundle": true,
            "license": "ISC",
            "dependencies": {
                "chownr": "^2.0.0",
                "fs-minipass": "^2.0.0",
                "minipass": "^5.0.0",
                "minizlib": "^2.1.1",
                "mkdirp": "^1.0.3",
                "yallist": "^4.0.0"
            },
            "engines": {
                "node": ">=10"
            }
        },
        "node_modules/npm/node_modules/tar/node_modules/fs-minipass": {
            "version": "2.1.0",
            "inBundle": true,
            "license": "ISC",
            "dependencies": {
                "minipass": "^3.0.0"
            },
            "engines": {
                "node": ">= 8"
            }
        },
        "node_modules/npm/node_modules/tar/node_modules/fs-minipass/node_modules/minipass": {
            "version": "3.3.6",
            "inBundle": true,
            "license": "ISC",
            "dependencies": {
                "yallist": "^4.0.0"
            },
            "engines": {
                "node": ">=8"
            }
        },
        "node_modules/npm/node_modules/tar/node_modules/minipass": {
            "version": "5.0.0",
            "inBundle": true,
            "license": "ISC",
            "engines": {
                "node": ">=8"
            }
        },
        "node_modules/npm/node_modules/text-table": {
            "version": "0.2.0",
            "inBundle": true,
            "license": "MIT"
        },
        "node_modules/npm/node_modules/tiny-relative-date": {
            "version": "1.3.0",
            "inBundle": true,
            "license": "MIT"
        },
        "node_modules/npm/node_modules/tinyglobby": {
            "version": "0.2.14",
            "inBundle": true,
            "license": "MIT",
            "dependencies": {
                "fdir": "^6.4.4",
                "picomatch": "^4.0.2"
            },
            "engines": {
                "node": ">=12.0.0"
            },
            "funding": {
                "url": "https://github.com/sponsors/SuperchupuDev"
            }
        },
        "node_modules/npm/node_modules/tinyglobby/node_modules/fdir": {
            "version": "6.4.6",
            "inBundle": true,
            "license": "MIT",
            "peerDependencies": {
                "picomatch": "^3 || ^4"
            },
            "peerDependenciesMeta": {
                "picomatch": {
                    "optional": true
                }
            }
        },
        "node_modules/npm/node_modules/tinyglobby/node_modules/picomatch": {
            "version": "4.0.3",
            "inBundle": true,
            "license": "MIT",
            "engines": {
                "node": ">=12"
            },
            "funding": {
                "url": "https://github.com/sponsors/jonschlinkert"
            }
        },
        "node_modules/npm/node_modules/treeverse": {
            "version": "3.0.0",
            "inBundle": true,
            "license": "ISC",
            "engines": {
                "node": "^14.17.0 || ^16.13.0 || >=18.0.0"
            }
        },
        "node_modules/npm/node_modules/tuf-js": {
            "version": "3.1.0",
            "inBundle": true,
            "license": "MIT",
            "dependencies": {
                "@tufjs/models": "3.0.1",
                "debug": "^4.4.1",
                "make-fetch-happen": "^14.0.3"
            },
            "engines": {
                "node": "^18.17.0 || >=20.5.0"
            }
        },
        "node_modules/npm/node_modules/unique-filename": {
            "version": "4.0.0",
            "inBundle": true,
            "license": "ISC",
            "dependencies": {
                "unique-slug": "^5.0.0"
            },
            "engines": {
                "node": "^18.17.0 || >=20.5.0"
            }
        },
        "node_modules/npm/node_modules/unique-slug": {
            "version": "5.0.0",
            "inBundle": true,
            "license": "ISC",
            "dependencies": {
                "imurmurhash": "^0.1.4"
            },
            "engines": {
                "node": "^18.17.0 || >=20.5.0"
            }
        },
        "node_modules/npm/node_modules/util-deprecate": {
            "version": "1.0.2",
            "inBundle": true,
            "license": "MIT"
        },
        "node_modules/npm/node_modules/validate-npm-package-license": {
            "version": "3.0.4",
            "inBundle": true,
            "license": "Apache-2.0",
            "dependencies": {
                "spdx-correct": "^3.0.0",
                "spdx-expression-parse": "^3.0.0"
            }
        },
        "node_modules/npm/node_modules/validate-npm-package-license/node_modules/spdx-expression-parse": {
            "version": "3.0.1",
            "inBundle": true,
            "license": "MIT",
            "dependencies": {
                "spdx-exceptions": "^2.1.0",
                "spdx-license-ids": "^3.0.0"
            }
        },
        "node_modules/npm/node_modules/validate-npm-package-name": {
            "version": "6.0.2",
            "inBundle": true,
            "license": "ISC",
            "engines": {
                "node": "^18.17.0 || >=20.5.0"
            }
        },
        "node_modules/npm/node_modules/walk-up-path": {
            "version": "4.0.0",
            "inBundle": true,
            "license": "ISC",
            "engines": {
                "node": "20 || >=22"
            }
        },
        "node_modules/npm/node_modules/which": {
            "version": "5.0.0",
            "inBundle": true,
            "license": "ISC",
            "dependencies": {
                "isexe": "^3.1.1"
            },
            "bin": {
                "node-which": "bin/which.js"
            },
            "engines": {
                "node": "^18.17.0 || >=20.5.0"
            }
        },
        "node_modules/npm/node_modules/which/node_modules/isexe": {
            "version": "3.1.1",
            "inBundle": true,
            "license": "ISC",
            "engines": {
                "node": ">=16"
            }
        },
        "node_modules/npm/node_modules/wrap-ansi": {
            "version": "8.1.0",
            "inBundle": true,
            "license": "MIT",
            "dependencies": {
                "ansi-styles": "^6.1.0",
                "string-width": "^5.0.1",
                "strip-ansi": "^7.0.1"
            },
            "engines": {
                "node": ">=12"
            },
            "funding": {
                "url": "https://github.com/chalk/wrap-ansi?sponsor=1"
            }
        },
        "node_modules/npm/node_modules/wrap-ansi-cjs": {
            "name": "wrap-ansi",
            "version": "7.0.0",
            "inBundle": true,
            "license": "MIT",
            "dependencies": {
                "ansi-styles": "^4.0.0",
                "string-width": "^4.1.0",
                "strip-ansi": "^6.0.0"
            },
            "engines": {
                "node": ">=10"
            },
            "funding": {
                "url": "https://github.com/chalk/wrap-ansi?sponsor=1"
            }
        },
        "node_modules/npm/node_modules/wrap-ansi-cjs/node_modules/ansi-styles": {
            "version": "4.3.0",
            "inBundle": true,
            "license": "MIT",
            "dependencies": {
                "color-convert": "^2.0.1"
            },
            "engines": {
                "node": ">=8"
            },
            "funding": {
                "url": "https://github.com/chalk/ansi-styles?sponsor=1"
            }
        },
        "node_modules/npm/node_modules/wrap-ansi/node_modules/ansi-regex": {
            "version": "6.1.0",
            "inBundle": true,
            "license": "MIT",
            "engines": {
                "node": ">=12"
            },
            "funding": {
                "url": "https://github.com/chalk/ansi-regex?sponsor=1"
            }
        },
        "node_modules/npm/node_modules/wrap-ansi/node_modules/emoji-regex": {
            "version": "9.2.2",
            "inBundle": true,
            "license": "MIT"
        },
        "node_modules/npm/node_modules/wrap-ansi/node_modules/string-width": {
            "version": "5.1.2",
            "inBundle": true,
            "license": "MIT",
            "dependencies": {
                "eastasianwidth": "^0.2.0",
                "emoji-regex": "^9.2.2",
                "strip-ansi": "^7.0.1"
            },
            "engines": {
                "node": ">=12"
            },
            "funding": {
                "url": "https://github.com/sponsors/sindresorhus"
            }
        },
        "node_modules/npm/node_modules/wrap-ansi/node_modules/strip-ansi": {
            "version": "7.1.0",
            "inBundle": true,
            "license": "MIT",
            "dependencies": {
                "ansi-regex": "^6.0.1"
            },
            "engines": {
                "node": ">=12"
            },
            "funding": {
                "url": "https://github.com/chalk/strip-ansi?sponsor=1"
            }
        },
        "node_modules/npm/node_modules/write-file-atomic": {
            "version": "6.0.0",
            "inBundle": true,
            "license": "ISC",
            "dependencies": {
                "imurmurhash": "^0.1.4",
                "signal-exit": "^4.0.1"
            },
            "engines": {
                "node": "^18.17.0 || >=20.5.0"
            }
        },
        "node_modules/npm/node_modules/yallist": {
            "version": "4.0.0",
            "inBundle": true,
            "license": "ISC"
        },
        "node_modules/object-assign": {
            "version": "4.1.1",
            "resolved": "https://registry.npmjs.org/object-assign/-/object-assign-4.1.1.tgz",
            "integrity": "sha512-rJgTQnkUnH1sFw8yT6VSU3zD3sWmu6sZhIseY8VX+GRu3P6F7Fu+JNDoXfklElbLJSnc3FUQHVe4cU5hj+BcUg==",
            "engines": {
                "node": ">=0.10.0"
            }
        },
        "node_modules/object-hash": {
            "version": "3.0.0",
            "resolved": "https://registry.npmjs.org/object-hash/-/object-hash-3.0.0.tgz",
            "integrity": "sha512-RSn9F68PjH9HqtltsSnqYC1XXoWe9Bju5+213R98cNGttag9q9yAOTzdbsqvIa7aNm5WffBZFpWYr2aWrklWAw==",
            "dev": true,
            "engines": {
                "node": ">= 6"
            }
        },
        "node_modules/object-inspect": {
            "version": "1.13.4",
            "resolved": "https://registry.npmjs.org/object-inspect/-/object-inspect-1.13.4.tgz",
            "integrity": "sha512-W67iLl4J2EXEGTbfeHCffrjDfitvLANg0UlX3wFUUSTx92KXRFegMHUVgSqE+wvhAbi4WqjGg9czysTV2Epbew==",
            "dev": true,
            "engines": {
                "node": ">= 0.4"
            },
            "funding": {
                "url": "https://github.com/sponsors/ljharb"
            }
        },
        "node_modules/object-keys": {
            "version": "1.1.1",
            "resolved": "https://registry.npmjs.org/object-keys/-/object-keys-1.1.1.tgz",
            "integrity": "sha512-NuAESUOUMrlIXOfHKzD6bpPu3tYt3xvjNdRIQ+FeT0lNb4K8WR70CaDxhuNguS2XG+GjkyMwOzsN5ZktImfhLA==",
            "dev": true,
            "engines": {
                "node": ">= 0.4"
            }
        },
        "node_modules/object.assign": {
            "version": "4.1.7",
            "resolved": "https://registry.npmjs.org/object.assign/-/object.assign-4.1.7.tgz",
            "integrity": "sha512-nK28WOo+QIjBkDduTINE4JkF/UJJKyf2EJxvJKfblDpyg0Q+pkOHNTL0Qwy6NP6FhE/EnzV73BxxqcJaXY9anw==",
            "dev": true,
            "dependencies": {
                "call-bind": "^1.0.8",
                "call-bound": "^1.0.3",
                "define-properties": "^1.2.1",
                "es-object-atoms": "^1.0.0",
                "has-symbols": "^1.1.0",
                "object-keys": "^1.1.1"
            },
            "engines": {
                "node": ">= 0.4"
            },
            "funding": {
                "url": "https://github.com/sponsors/ljharb"
            }
        },
        "node_modules/object.entries": {
            "version": "1.1.9",
            "resolved": "https://registry.npmjs.org/object.entries/-/object.entries-1.1.9.tgz",
            "integrity": "sha512-8u/hfXFRBD1O0hPUjioLhoWFHRmt6tKA4/vZPyckBr18l1KE9uHrFaFaUi8MDRTpi4uak2goyPTSNJLXX2k2Hw==",
            "dev": true,
            "dependencies": {
                "call-bind": "^1.0.8",
                "call-bound": "^1.0.4",
                "define-properties": "^1.2.1",
                "es-object-atoms": "^1.1.1"
            },
            "engines": {
                "node": ">= 0.4"
            }
        },
        "node_modules/object.fromentries": {
            "version": "2.0.8",
            "resolved": "https://registry.npmjs.org/object.fromentries/-/object.fromentries-2.0.8.tgz",
            "integrity": "sha512-k6E21FzySsSK5a21KRADBd/NGneRegFO5pLHfdQLpRDETUNJueLXs3WCzyQ3tFRDYgbq3KHGXfTbi2bs8WQ6rQ==",
            "dev": true,
            "dependencies": {
                "call-bind": "^1.0.7",
                "define-properties": "^1.2.1",
                "es-abstract": "^1.23.2",
                "es-object-atoms": "^1.0.0"
            },
            "engines": {
                "node": ">= 0.4"
            },
            "funding": {
                "url": "https://github.com/sponsors/ljharb"
            }
        },
        "node_modules/object.groupby": {
            "version": "1.0.3",
            "resolved": "https://registry.npmjs.org/object.groupby/-/object.groupby-1.0.3.tgz",
            "integrity": "sha512-+Lhy3TQTuzXI5hevh8sBGqbmurHbbIjAi0Z4S63nthVLmLxfbj4T54a4CfZrXIrt9iP4mVAPYMo/v99taj3wjQ==",
            "dev": true,
            "dependencies": {
                "call-bind": "^1.0.7",
                "define-properties": "^1.2.1",
                "es-abstract": "^1.23.2"
            },
            "engines": {
                "node": ">= 0.4"
            }
        },
        "node_modules/object.values": {
            "version": "1.2.1",
            "resolved": "https://registry.npmjs.org/object.values/-/object.values-1.2.1.tgz",
            "integrity": "sha512-gXah6aZrcUxjWg2zR2MwouP2eHlCBzdV4pygudehaKXSGW4v2AsRQUK+lwwXhii6KFZcunEnmSUoYp5CXibxtA==",
            "dev": true,
            "dependencies": {
                "call-bind": "^1.0.8",
                "call-bound": "^1.0.3",
                "define-properties": "^1.2.1",
                "es-object-atoms": "^1.0.0"
            },
            "engines": {
                "node": ">= 0.4"
            },
            "funding": {
                "url": "https://github.com/sponsors/ljharb"
            }
        },
        "node_modules/once": {
            "version": "1.4.0",
            "resolved": "https://registry.npmjs.org/once/-/once-1.4.0.tgz",
            "integrity": "sha512-lNaJgI+2Q5URQBkccEKHTQOPaXdUxnZZElQTZY0MFUAuaEqe1E+Nyvgdz/aIyNi6Z9MzO5dv1H8n58/GELp3+w==",
            "dev": true,
            "dependencies": {
                "wrappy": "1"
            }
        },
        "node_modules/optionator": {
            "version": "0.9.4",
            "resolved": "https://registry.npmjs.org/optionator/-/optionator-0.9.4.tgz",
            "integrity": "sha512-6IpQ7mKUxRcZNLIObR0hz7lxsapSSIYNZJwXPGeF0mTVqGKFIXj1DQcMoT22S3ROcLyY/rz0PWaWZ9ayWmad9g==",
            "dev": true,
            "dependencies": {
                "deep-is": "^0.1.3",
                "fast-levenshtein": "^2.0.6",
                "levn": "^0.4.1",
                "prelude-ls": "^1.2.1",
                "type-check": "^0.4.0",
                "word-wrap": "^1.2.5"
            },
            "engines": {
                "node": ">= 0.8.0"
            }
        },
        "node_modules/own-keys": {
            "version": "1.0.1",
            "resolved": "https://registry.npmjs.org/own-keys/-/own-keys-1.0.1.tgz",
            "integrity": "sha512-qFOyK5PjiWZd+QQIh+1jhdb9LpxTF0qs7Pm8o5QHYZ0M3vKqSqzsZaEB6oWlxZ+q2sJBMI/Ktgd2N5ZwQoRHfg==",
            "dev": true,
            "dependencies": {
                "get-intrinsic": "^1.2.6",
                "object-keys": "^1.1.1",
                "safe-push-apply": "^1.0.0"
            },
            "engines": {
                "node": ">= 0.4"
            },
            "funding": {
                "url": "https://github.com/sponsors/ljharb"
            }
        },
        "node_modules/p-limit": {
            "version": "3.1.0",
            "resolved": "https://registry.npmjs.org/p-limit/-/p-limit-3.1.0.tgz",
            "integrity": "sha512-TYOanM3wGwNGsZN2cVTYPArw454xnXj5qmWF1bEoAc4+cU/ol7GVh7odevjp1FNHduHc3KZMcFduxU5Xc6uJRQ==",
            "dev": true,
            "dependencies": {
                "yocto-queue": "^0.1.0"
            },
            "engines": {
                "node": ">=10"
            },
            "funding": {
                "url": "https://github.com/sponsors/sindresorhus"
            }
        },
        "node_modules/p-locate": {
            "version": "5.0.0",
            "resolved": "https://registry.npmjs.org/p-locate/-/p-locate-5.0.0.tgz",
            "integrity": "sha512-LaNjtRWUBY++zB5nE/NwcaoMylSPk+S+ZHNB1TzdbMJMny6dynpAGt7X/tl/QYq3TIeE6nxHppbo2LGymrG5Pw==",
            "dev": true,
            "dependencies": {
                "p-limit": "^3.0.2"
            },
            "engines": {
                "node": ">=10"
            },
            "funding": {
                "url": "https://github.com/sponsors/sindresorhus"
            }
        },
        "node_modules/package-json-from-dist": {
            "version": "1.0.1",
            "resolved": "https://registry.npmjs.org/package-json-from-dist/-/package-json-from-dist-1.0.1.tgz",
            "integrity": "sha512-UEZIS3/by4OC8vL3P2dTXRETpebLI2NiI5vIrjaD/5UtrkFX/tNbwjTSRAGC/+7CAo2pIcBaRgWmcBBHcsaCIw==",
            "dev": true
        },
        "node_modules/parent-module": {
            "version": "1.0.1",
            "resolved": "https://registry.npmjs.org/parent-module/-/parent-module-1.0.1.tgz",
            "integrity": "sha512-GQ2EWRpQV8/o+Aw8YqtfZZPfNRWZYkbidE9k5rpl/hC3vtHHBfGm2Ifi6qWV+coDGkrUKZAxE3Lot5kcsRlh+g==",
            "dev": true,
            "dependencies": {
                "callsites": "^3.0.0"
            },
            "engines": {
                "node": ">=6"
            }
        },
        "node_modules/path-exists": {
            "version": "4.0.0",
            "resolved": "https://registry.npmjs.org/path-exists/-/path-exists-4.0.0.tgz",
            "integrity": "sha512-ak9Qy5Q7jYb2Wwcey5Fpvg2KoAc/ZIhLSLOSBmRmygPsGwkVVt0fZa0qrtMz+m6tJTAHfZQ8FnmB4MG4LWy7/w==",
            "dev": true,
            "engines": {
                "node": ">=8"
            }
        },
        "node_modules/path-is-absolute": {
            "version": "1.0.1",
            "resolved": "https://registry.npmjs.org/path-is-absolute/-/path-is-absolute-1.0.1.tgz",
            "integrity": "sha512-AVbw3UJ2e9bq64vSaS9Am0fje1Pa8pbGqTTsmXfaIiMpnr5DlDhfJOuLj9Sf95ZPVDAUerDfEk88MPmPe7UCQg==",
            "dev": true,
            "engines": {
                "node": ">=0.10.0"
            }
        },
        "node_modules/path-key": {
            "version": "3.1.1",
            "resolved": "https://registry.npmjs.org/path-key/-/path-key-3.1.1.tgz",
            "integrity": "sha512-ojmeN0qd+y0jszEtoY48r0Peq5dwMEkIlCOu6Q5f41lfkswXuKtYrhgoTpLnyIcHm24Uhqx+5Tqm2InSwLhE6Q==",
            "dev": true,
            "engines": {
                "node": ">=8"
            }
        },
        "node_modules/path-parse": {
            "version": "1.0.7",
            "resolved": "https://registry.npmjs.org/path-parse/-/path-parse-1.0.7.tgz",
            "integrity": "sha512-LDJzPVEEEPR+y48z93A0Ed0yXb8pAByGWo/k5YYdYgpY2/2EsOsksJrq7lOHxryrVOn1ejG6oAp8ahvOIQD8sw==",
            "dev": true
        },
        "node_modules/path-scurry": {
            "version": "1.11.1",
            "resolved": "https://registry.npmjs.org/path-scurry/-/path-scurry-1.11.1.tgz",
            "integrity": "sha512-Xa4Nw17FS9ApQFJ9umLiJS4orGjm7ZzwUrwamcGQuHSzDyth9boKDaycYdDcZDuqYATXw4HFXgaqWTctW/v1HA==",
            "dev": true,
            "dependencies": {
                "lru-cache": "^10.2.0",
                "minipass": "^5.0.0 || ^6.0.2 || ^7.0.0"
            },
            "engines": {
                "node": ">=16 || 14 >=14.18"
            },
            "funding": {
                "url": "https://github.com/sponsors/isaacs"
            }
        },
        "node_modules/path-type": {
            "version": "4.0.0",
            "resolved": "https://registry.npmjs.org/path-type/-/path-type-4.0.0.tgz",
            "integrity": "sha512-gDKb8aZMDeD/tZWs9P6+q0J9Mwkdl6xMV8TjnGP3qJVJ06bdMgkbBlLU8IdfOsIsFz2BW1rNVT3XuNEl8zPAvw==",
            "dev": true,
            "engines": {
                "node": ">=8"
            }
        },
        "node_modules/pg": {
            "version": "8.16.3",
            "resolved": "https://registry.npmjs.org/pg/-/pg-8.16.3.tgz",
            "integrity": "sha512-enxc1h0jA/aq5oSDMvqyW3q89ra6XIIDZgCX9vkMrnz5DFTw/Ny3Li2lFQ+pt3L6MCgm/5o2o8HW9hiJji+xvw==",
            "dependencies": {
                "pg-connection-string": "^2.9.1",
                "pg-pool": "^3.10.1",
                "pg-protocol": "^1.10.3",
                "pg-types": "2.2.0",
                "pgpass": "1.0.5"
            },
            "engines": {
                "node": ">= 16.0.0"
            },
            "optionalDependencies": {
                "pg-cloudflare": "^1.2.7"
            },
            "peerDependencies": {
                "pg-native": ">=3.0.1"
            },
            "peerDependenciesMeta": {
                "pg-native": {
                    "optional": true
                }
            }
        },
        "node_modules/pg-cloudflare": {
            "version": "1.2.7",
            "resolved": "https://registry.npmjs.org/pg-cloudflare/-/pg-cloudflare-1.2.7.tgz",
            "integrity": "sha512-YgCtzMH0ptvZJslLM1ffsY4EuGaU0cx4XSdXLRFae8bPP4dS5xL1tNB3k2o/N64cHJpwU7dxKli/nZ2lUa5fLg==",
            "optional": true
        },
        "node_modules/pg-connection-string": {
            "version": "2.9.1",
            "resolved": "https://registry.npmjs.org/pg-connection-string/-/pg-connection-string-2.9.1.tgz",
            "integrity": "sha512-nkc6NpDcvPVpZXxrreI/FOtX3XemeLl8E0qFr6F2Lrm/I8WOnaWNhIPK2Z7OHpw7gh5XJThi6j6ppgNoaT1w4w=="
        },
        "node_modules/pg-int8": {
            "version": "1.0.1",
            "resolved": "https://registry.npmjs.org/pg-int8/-/pg-int8-1.0.1.tgz",
            "integrity": "sha512-WCtabS6t3c8SkpDBUlb1kjOs7l66xsGdKpIPZsg4wR+B3+u9UAum2odSsF9tnvxg80h4ZxLWMy4pRjOsFIqQpw==",
            "engines": {
                "node": ">=4.0.0"
            }
        },
        "node_modules/pg-pool": {
            "version": "3.10.1",
            "resolved": "https://registry.npmjs.org/pg-pool/-/pg-pool-3.10.1.tgz",
            "integrity": "sha512-Tu8jMlcX+9d8+QVzKIvM/uJtp07PKr82IUOYEphaWcoBhIYkoHpLXN3qO59nAI11ripznDsEzEv8nUxBVWajGg==",
            "peerDependencies": {
                "pg": ">=8.0"
            }
        },
        "node_modules/pg-protocol": {
            "version": "1.10.3",
            "resolved": "https://registry.npmjs.org/pg-protocol/-/pg-protocol-1.10.3.tgz",
            "integrity": "sha512-6DIBgBQaTKDJyxnXaLiLR8wBpQQcGWuAESkRBX/t6OwA8YsqP+iVSiond2EDy6Y/dsGk8rh/jtax3js5NeV7JQ=="
        },
        "node_modules/pg-types": {
            "version": "2.2.0",
            "resolved": "https://registry.npmjs.org/pg-types/-/pg-types-2.2.0.tgz",
            "integrity": "sha512-qTAAlrEsl8s4OiEQY69wDvcMIdQN6wdz5ojQiOy6YRMuynxenON0O5oCpJI6lshc6scgAY8qvJ2On/p+CXY0GA==",
            "dependencies": {
                "pg-int8": "1.0.1",
                "postgres-array": "~2.0.0",
                "postgres-bytea": "~1.0.0",
                "postgres-date": "~1.0.4",
                "postgres-interval": "^1.1.0"
            },
            "engines": {
                "node": ">=4"
            }
        },
        "node_modules/pgpass": {
            "version": "1.0.5",
            "resolved": "https://registry.npmjs.org/pgpass/-/pgpass-1.0.5.tgz",
            "integrity": "sha512-FdW9r/jQZhSeohs1Z3sI1yxFQNFvMcnmfuj4WBMUTxOrAyLMaTcE1aAMBiTlbMNaXvBCQuVi0R7hd8udDSP7ug==",
            "dependencies": {
                "split2": "^4.1.0"
            }
        },
        "node_modules/picocolors": {
            "version": "1.1.1",
            "resolved": "https://registry.npmjs.org/picocolors/-/picocolors-1.1.1.tgz",
            "integrity": "sha512-xceH2snhtb5M9liqDsmEw56le376mTZkEX/jEb/RxNFyegNul7eNslCXP9FDj/Lcu0X8KEyMceP2ntpaHrDEVA=="
        },
        "node_modules/picomatch": {
            "version": "2.3.1",
            "resolved": "https://registry.npmjs.org/picomatch/-/picomatch-2.3.1.tgz",
            "integrity": "sha512-JU3teHTNjmE2VCGFzuY8EXzCDVwEqB2a8fsIvwaStHhAWJEeVd1o1QD80CU6+ZdEXXSLbSsuLwJjkCBWqRQUVA==",
            "dev": true,
            "engines": {
                "node": ">=8.6"
            },
            "funding": {
                "url": "https://github.com/sponsors/jonschlinkert"
            }
        },
        "node_modules/pify": {
            "version": "2.3.0",
            "resolved": "https://registry.npmjs.org/pify/-/pify-2.3.0.tgz",
            "integrity": "sha512-udgsAY+fTnvv7kI7aaxbqwWNb0AHiB0qBO89PZKPkoTmGOgdbrHDKD+0B2X4uTfJ/FT1R09r9gTsjUjNJotuog==",
            "dev": true,
            "engines": {
                "node": ">=0.10.0"
            }
        },
        "node_modules/pirates": {
            "version": "4.0.7",
            "resolved": "https://registry.npmjs.org/pirates/-/pirates-4.0.7.tgz",
            "integrity": "sha512-TfySrs/5nm8fQJDcBDuUng3VOUKsd7S+zqvbOTiGXHfxX4wK31ard+hoNuvkicM/2YFzlpDgABOevKSsB4G/FA==",
            "dev": true,
            "engines": {
                "node": ">= 6"
            }
        },
        "node_modules/possible-typed-array-names": {
            "version": "1.1.0",
            "resolved": "https://registry.npmjs.org/possible-typed-array-names/-/possible-typed-array-names-1.1.0.tgz",
            "integrity": "sha512-/+5VFTchJDoVj3bhoqi6UeymcD00DAwb1nJwamzPvHEszJ4FpF6SNNbUbOS8yI56qHzdV8eK0qEfOSiodkTdxg==",
            "dev": true,
            "engines": {
                "node": ">= 0.4"
            }
        },
        "node_modules/postcss": {
            "version": "8.5.6",
            "resolved": "https://registry.npmjs.org/postcss/-/postcss-8.5.6.tgz",
            "integrity": "sha512-3Ybi1tAuwAP9s0r1UQ2J4n5Y0G05bJkpUIO0/bI9MhwmD70S5aTWbXGBwxHrelT+XM1k6dM0pk+SwNkpTRN7Pg==",
            "dev": true,
            "funding": [
                {
                    "type": "opencollective",
                    "url": "https://opencollective.com/postcss/"
                },
                {
                    "type": "tidelift",
                    "url": "https://tidelift.com/funding/github/npm/postcss"
                },
                {
                    "type": "github",
                    "url": "https://github.com/sponsors/ai"
                }
            ],
            "dependencies": {
                "nanoid": "^3.3.11",
                "picocolors": "^1.1.1",
                "source-map-js": "^1.2.1"
            },
            "engines": {
                "node": "^10 || ^12 || >=14"
            }
        },
        "node_modules/postcss-import": {
            "version": "15.1.0",
            "resolved": "https://registry.npmjs.org/postcss-import/-/postcss-import-15.1.0.tgz",
            "integrity": "sha512-hpr+J05B2FVYUAXHeK1YyI267J/dDDhMU6B6civm8hSY1jYJnBXxzKDKDswzJmtLHryrjhnDjqqp/49t8FALew==",
            "dev": true,
            "dependencies": {
                "postcss-value-parser": "^4.0.0",
                "read-cache": "^1.0.0",
                "resolve": "^1.1.7"
            },
            "engines": {
                "node": ">=14.0.0"
            },
            "peerDependencies": {
                "postcss": "^8.0.0"
            }
        },
        "node_modules/postcss-js": {
            "version": "4.0.1",
            "resolved": "https://registry.npmjs.org/postcss-js/-/postcss-js-4.0.1.tgz",
            "integrity": "sha512-dDLF8pEO191hJMtlHFPRa8xsizHaM82MLfNkUHdUtVEV3tgTp5oj+8qbEqYM57SLfc74KSbw//4SeJma2LRVIw==",
            "dev": true,
            "dependencies": {
                "camelcase-css": "^2.0.1"
            },
            "engines": {
                "node": "^12 || ^14 || >= 16"
            },
            "funding": {
                "type": "opencollective",
                "url": "https://opencollective.com/postcss/"
            },
            "peerDependencies": {
                "postcss": "^8.4.21"
            }
        },
        "node_modules/postcss-nested": {
            "version": "6.2.0",
            "resolved": "https://registry.npmjs.org/postcss-nested/-/postcss-nested-6.2.0.tgz",
            "integrity": "sha512-HQbt28KulC5AJzG+cZtj9kvKB93CFCdLvog1WFLf1D+xmMvPGlBstkpTEZfK5+AN9hfJocyBFCNiqyS48bpgzQ==",
            "dev": true,
            "funding": [
                {
                    "type": "opencollective",
                    "url": "https://opencollective.com/postcss/"
                },
                {
                    "type": "github",
                    "url": "https://github.com/sponsors/ai"
                }
            ],
            "dependencies": {
                "postcss-selector-parser": "^6.1.1"
            },
            "engines": {
                "node": ">=12.0"
            },
            "peerDependencies": {
                "postcss": "^8.2.14"
            }
        },
        "node_modules/postcss-selector-parser": {
            "version": "6.1.2",
            "resolved": "https://registry.npmjs.org/postcss-selector-parser/-/postcss-selector-parser-6.1.2.tgz",
            "integrity": "sha512-Q8qQfPiZ+THO/3ZrOrO0cJJKfpYCagtMUkXbnEfmgUjwXg6z/WBeOyS9APBBPCTSiDV+s4SwQGu8yFsiMRIudg==",
            "dev": true,
            "dependencies": {
                "cssesc": "^3.0.0",
                "util-deprecate": "^1.0.2"
            },
            "engines": {
                "node": ">=4"
            }
        },
        "node_modules/postcss-value-parser": {
            "version": "4.2.0",
            "resolved": "https://registry.npmjs.org/postcss-value-parser/-/postcss-value-parser-4.2.0.tgz",
            "integrity": "sha512-1NNCs6uurfkVbeXG4S8JFT9t19m45ICnif8zWLd5oPSZ50QnwMfK+H3jv408d4jw/7Bttv5axS5IiHoLaVNHeQ==",
            "dev": true
        },
        "node_modules/postgres-array": {
            "version": "2.0.0",
            "resolved": "https://registry.npmjs.org/postgres-array/-/postgres-array-2.0.0.tgz",
            "integrity": "sha512-VpZrUqU5A69eQyW2c5CA1jtLecCsN2U/bD6VilrFDWq5+5UIEVO7nazS3TEcHf1zuPYO/sqGvUvW62g86RXZuA==",
            "engines": {
                "node": ">=4"
            }
        },
        "node_modules/postgres-bytea": {
            "version": "1.0.0",
            "resolved": "https://registry.npmjs.org/postgres-bytea/-/postgres-bytea-1.0.0.tgz",
            "integrity": "sha512-xy3pmLuQqRBZBXDULy7KbaitYqLcmxigw14Q5sj8QBVLqEwXfeybIKVWiqAXTlcvdvb0+xkOtDbfQMOf4lST1w==",
            "engines": {
                "node": ">=0.10.0"
            }
        },
        "node_modules/postgres-date": {
            "version": "1.0.7",
            "resolved": "https://registry.npmjs.org/postgres-date/-/postgres-date-1.0.7.tgz",
            "integrity": "sha512-suDmjLVQg78nMK2UZ454hAG+OAW+HQPZ6n++TNDUX+L0+uUlLywnoxJKDou51Zm+zTCjrCl0Nq6J9C5hP9vK/Q==",
            "engines": {
                "node": ">=0.10.0"
            }
        },
        "node_modules/postgres-interval": {
            "version": "1.2.0",
            "resolved": "https://registry.npmjs.org/postgres-interval/-/postgres-interval-1.2.0.tgz",
            "integrity": "sha512-9ZhXKM/rw350N1ovuWHbGxnGh/SNJ4cnxHiM0rxE4VN41wsg8P8zWn9hv/buK00RP4WvlOyr/RBDiptyxVbkZQ==",
            "dependencies": {
                "xtend": "^4.0.0"
            },
            "engines": {
                "node": ">=0.10.0"
            }
        },
        "node_modules/prelude-ls": {
            "version": "1.2.1",
            "resolved": "https://registry.npmjs.org/prelude-ls/-/prelude-ls-1.2.1.tgz",
            "integrity": "sha512-vkcDPrRZo1QZLbn5RLGPpg/WmIQ65qoWWhcGKf/b5eplkkarX0m9z8ppCat4mlOqUsWpyNuYgO3VRyrYHSzX5g==",
            "dev": true,
            "engines": {
                "node": ">= 0.8.0"
            }
        },
        "node_modules/prop-types": {
            "version": "15.8.1",
            "resolved": "https://registry.npmjs.org/prop-types/-/prop-types-15.8.1.tgz",
            "integrity": "sha512-oj87CgZICdulUohogVAR7AjlC0327U4el4L6eAvOqCeudMDVU0NThNaV+b9Df4dXgSP1gXMTnPdhfe/2qDH5cg==",
            "dependencies": {
                "loose-envify": "^1.4.0",
                "object-assign": "^4.1.1",
                "react-is": "^16.13.1"
            }
        },
        "node_modules/punycode": {
            "version": "2.3.1",
            "resolved": "https://registry.npmjs.org/punycode/-/punycode-2.3.1.tgz",
            "integrity": "sha512-vYt7UD1U9Wg6138shLtLOvdAu+8DsC/ilFtEVHcH+wydcSpNE20AfSOduf6MkRFahL5FY7X1oU7nKVZFtfq8Fg==",
            "dev": true,
            "engines": {
                "node": ">=6"
            }
        },
        "node_modules/queue-microtask": {
            "version": "1.2.3",
            "resolved": "https://registry.npmjs.org/queue-microtask/-/queue-microtask-1.2.3.tgz",
            "integrity": "sha512-NuaNSa6flKT5JaSYQzJok04JzTL1CA6aGhv5rfLW3PgqA+M2ChpZQnAC8h8i4ZFkBS8X5RqkDBHA7r4hej3K9A==",
            "dev": true,
            "funding": [
                {
                    "type": "github",
                    "url": "https://github.com/sponsors/feross"
                },
                {
                    "type": "patreon",
                    "url": "https://www.patreon.com/feross"
                },
                {
                    "type": "consulting",
                    "url": "https://feross.org/support"
                }
            ]
        },
        "node_modules/react": {
            "version": "18.3.1",
            "resolved": "https://registry.npmjs.org/react/-/react-18.3.1.tgz",
            "integrity": "sha512-wS+hAgJShR0KhEvPJArfuPVN1+Hz1t0Y6n5jLrGQbkb4urgPE/0Rve+1kMB1v/oWgHgm4WIcV+i7F2pTVj+2iQ==",
            "dependencies": {
                "loose-envify": "^1.1.0"
            },
            "engines": {
                "node": ">=0.10.0"
            }
        },
        "node_modules/react-dom": {
            "version": "18.3.1",
            "resolved": "https://registry.npmjs.org/react-dom/-/react-dom-18.3.1.tgz",
            "integrity": "sha512-5m4nQKp+rZRb09LNH59GM4BxTh9251/ylbKIbpe7TpGxfJ+9kv6BLkLBXIjjspbgbnIBNqlI23tRnTWT0snUIw==",
            "dependencies": {
                "loose-envify": "^1.1.0",
                "scheduler": "^0.23.2"
            },
            "peerDependencies": {
                "react": "^18.3.1"
            }
        },
        "node_modules/react-dropzone": {
            "version": "14.3.8",
            "resolved": "https://registry.npmjs.org/react-dropzone/-/react-dropzone-14.3.8.tgz",
            "integrity": "sha512-sBgODnq+lcA4P296DY4wacOZz3JFpD99fp+hb//iBO2HHnyeZU3FwWyXJ6salNpqQdsZrgMrotuko/BdJMV8Ug==",
            "dependencies": {
                "attr-accept": "^2.2.4",
                "file-selector": "^2.1.0",
                "prop-types": "^15.8.1"
            },
            "engines": {
                "node": ">= 10.13"
            },
            "peerDependencies": {
                "react": ">= 16.8 || 18.0.0"
            }
        },
        "node_modules/react-hook-form": {
            "version": "7.62.0",
            "resolved": "https://registry.npmjs.org/react-hook-form/-/react-hook-form-7.62.0.tgz",
            "integrity": "sha512-7KWFejc98xqG/F4bAxpL41NB3o1nnvQO1RWZT3TqRZYL8RryQETGfEdVnJN2fy1crCiBLLjkRBVK05j24FxJGA==",
            "engines": {
                "node": ">=18.0.0"
            },
            "funding": {
                "type": "opencollective",
                "url": "https://opencollective.com/react-hook-form"
            },
            "peerDependencies": {
                "react": "^16.8.0 || ^17 || ^18 || ^19"
            }
        },
        "node_modules/react-is": {
            "version": "16.13.1",
            "resolved": "https://registry.npmjs.org/react-is/-/react-is-16.13.1.tgz",
            "integrity": "sha512-24e6ynE2H+OKt4kqsOvNd8kBpV65zoxbA4BVsEOB3ARVWQki/DHzaUoC5KuON/BiccDaCCTZBuOcfZs70kR8bQ=="
        },
        "node_modules/react-remove-scroll": {
            "version": "2.7.1",
            "resolved": "https://registry.npmjs.org/react-remove-scroll/-/react-remove-scroll-2.7.1.tgz",
            "integrity": "sha512-HpMh8+oahmIdOuS5aFKKY6Pyog+FNaZV/XyJOq7b4YFwsFHe5yYfdbIalI4k3vU2nSDql7YskmUseHsRrJqIPA==",
            "dependencies": {
                "react-remove-scroll-bar": "^2.3.7",
                "react-style-singleton": "^2.2.3",
                "tslib": "^2.1.0",
                "use-callback-ref": "^1.3.3",
                "use-sidecar": "^1.1.3"
            },
            "engines": {
                "node": ">=10"
            },
            "peerDependencies": {
                "@types/react": "*",
                "react": "^16.8.0 || ^17.0.0 || ^18.0.0 || ^19.0.0 || ^19.0.0-rc"
            },
            "peerDependenciesMeta": {
                "@types/react": {
                    "optional": true
                }
            }
        },
        "node_modules/react-remove-scroll-bar": {
            "version": "2.3.8",
            "resolved": "https://registry.npmjs.org/react-remove-scroll-bar/-/react-remove-scroll-bar-2.3.8.tgz",
            "integrity": "sha512-9r+yi9+mgU33AKcj6IbT9oRCO78WriSj6t/cF8DWBZJ9aOGPOTEDvdUDz1FwKim7QXWwmHqtdHnRJfhAxEG46Q==",
            "dependencies": {
                "react-style-singleton": "^2.2.2",
                "tslib": "^2.0.0"
            },
            "engines": {
                "node": ">=10"
            },
            "peerDependencies": {
                "@types/react": "*",
                "react": "^16.8.0 || ^17.0.0 || ^18.0.0 || ^19.0.0"
            },
            "peerDependenciesMeta": {
                "@types/react": {
                    "optional": true
                }
            }
        },
        "node_modules/react-smooth": {
            "version": "4.0.4",
            "resolved": "https://registry.npmjs.org/react-smooth/-/react-smooth-4.0.4.tgz",
            "integrity": "sha512-gnGKTpYwqL0Iii09gHobNolvX4Kiq4PKx6eWBCYYix+8cdw+cGo3do906l1NBPKkSWx1DghC1dlWG9L2uGd61Q==",
            "dependencies": {
                "fast-equals": "^5.0.1",
                "prop-types": "^15.8.1",
                "react-transition-group": "^4.4.5"
            },
            "peerDependencies": {
                "react": "^16.8.0 || ^17.0.0 || ^18.0.0 || ^19.0.0",
                "react-dom": "^16.8.0 || ^17.0.0 || ^18.0.0 || ^19.0.0"
            }
        },
        "node_modules/react-style-singleton": {
            "version": "2.2.3",
            "resolved": "https://registry.npmjs.org/react-style-singleton/-/react-style-singleton-2.2.3.tgz",
            "integrity": "sha512-b6jSvxvVnyptAiLjbkWLE/lOnR4lfTtDAl+eUC7RZy+QQWc6wRzIV2CE6xBuMmDxc2qIihtDCZD5NPOFl7fRBQ==",
            "dependencies": {
                "get-nonce": "^1.0.0",
                "tslib": "^2.0.0"
            },
            "engines": {
                "node": ">=10"
            },
            "peerDependencies": {
                "@types/react": "*",
                "react": "^16.8.0 || ^17.0.0 || ^18.0.0 || ^19.0.0 || ^19.0.0-rc"
            },
            "peerDependenciesMeta": {
                "@types/react": {
                    "optional": true
                }
            }
        },
        "node_modules/react-transition-group": {
            "version": "4.4.5",
            "resolved": "https://registry.npmjs.org/react-transition-group/-/react-transition-group-4.4.5.tgz",
            "integrity": "sha512-pZcd1MCJoiKiBR2NRxeCRg13uCXbydPnmB4EOeRrY7480qNWO8IIgQG6zlDkm6uRMsURXPuKq0GWtiM59a5Q6g==",
            "dependencies": {
                "@babel/runtime": "^7.5.5",
                "dom-helpers": "^5.0.1",
                "loose-envify": "^1.4.0",
                "prop-types": "^15.6.2"
            },
            "peerDependencies": {
                "react": ">=16.6.0",
                "react-dom": ">=16.6.0"
            }
        },
        "node_modules/read-cache": {
            "version": "1.0.0",
            "resolved": "https://registry.npmjs.org/read-cache/-/read-cache-1.0.0.tgz",
            "integrity": "sha512-Owdv/Ft7IjOgm/i0xvNDZ1LrRANRfew4b2prF3OWMQLxLfu3bS8FVhCsrSCMK4lR56Y9ya+AThoTpDCTxCmpRA==",
            "dev": true,
            "dependencies": {
                "pify": "^2.3.0"
            }
        },
        "node_modules/readdirp": {
            "version": "3.6.0",
            "resolved": "https://registry.npmjs.org/readdirp/-/readdirp-3.6.0.tgz",
            "integrity": "sha512-hOS089on8RduqdbhvQ5Z37A0ESjsqz6qnRcffsMU3495FuTdqSm+7bhJ29JvIOsBDEEnan5DPu9t3To9VRlMzA==",
            "dev": true,
            "dependencies": {
                "picomatch": "^2.2.1"
            },
            "engines": {
                "node": ">=8.10.0"
            }
        },
        "node_modules/recharts": {
            "version": "2.15.4",
            "resolved": "https://registry.npmjs.org/recharts/-/recharts-2.15.4.tgz",
            "integrity": "sha512-UT/q6fwS3c1dHbXv2uFgYJ9BMFHu3fwnd7AYZaEQhXuYQ4hgsxLvsUXzGdKeZrW5xopzDCvuA2N41WJ88I7zIw==",
            "dependencies": {
                "clsx": "^2.0.0",
                "eventemitter3": "^4.0.1",
                "lodash": "^4.17.21",
                "react-is": "^18.3.1",
                "react-smooth": "^4.0.4",
                "recharts-scale": "^0.4.4",
                "tiny-invariant": "^1.3.1",
                "victory-vendor": "^36.6.8"
            },
            "engines": {
                "node": ">=14"
            },
            "peerDependencies": {
                "react": "^16.0.0 || ^17.0.0 || ^18.0.0 || ^19.0.0",
                "react-dom": "^16.0.0 || ^17.0.0 || ^18.0.0 || ^19.0.0"
            }
        },
        "node_modules/recharts-scale": {
            "version": "0.4.5",
            "resolved": "https://registry.npmjs.org/recharts-scale/-/recharts-scale-0.4.5.tgz",
            "integrity": "sha512-kivNFO+0OcUNu7jQquLXAxz1FIwZj8nrj+YkOKc5694NbjCvcT6aSZiIzNzd2Kul4o4rTto8QVR9lMNtxD4G1w==",
            "dependencies": {
                "decimal.js-light": "^2.4.1"
            }
        },
        "node_modules/recharts/node_modules/react-is": {
            "version": "18.3.1",
            "resolved": "https://registry.npmjs.org/react-is/-/react-is-18.3.1.tgz",
            "integrity": "sha512-/LLMVyas0ljjAtoYiPqYiL8VWXzUUdThrmU5+n20DZv+a+ClRoevUzw5JxU+Ieh5/c87ytoTBV9G1FiKfNJdmg=="
        },
        "node_modules/reflect.getprototypeof": {
            "version": "1.0.10",
            "resolved": "https://registry.npmjs.org/reflect.getprototypeof/-/reflect.getprototypeof-1.0.10.tgz",
            "integrity": "sha512-00o4I+DVrefhv+nX0ulyi3biSHCPDe+yLv5o/p6d/UVlirijB8E16FtfwSAi4g3tcqrQ4lRAqQSoFEZJehYEcw==",
            "dev": true,
            "dependencies": {
                "call-bind": "^1.0.8",
                "define-properties": "^1.2.1",
                "es-abstract": "^1.23.9",
                "es-errors": "^1.3.0",
                "es-object-atoms": "^1.0.0",
                "get-intrinsic": "^1.2.7",
                "get-proto": "^1.0.1",
                "which-builtin-type": "^1.2.1"
            },
            "engines": {
                "node": ">= 0.4"
            },
            "funding": {
                "url": "https://github.com/sponsors/ljharb"
            }
        },
        "node_modules/regexp.prototype.flags": {
            "version": "1.5.4",
            "resolved": "https://registry.npmjs.org/regexp.prototype.flags/-/regexp.prototype.flags-1.5.4.tgz",
            "integrity": "sha512-dYqgNSZbDwkaJ2ceRd9ojCGjBq+mOm9LmtXnAnEGyHhN/5R7iDW2TRw3h+o/jCFxus3P2LfWIIiwowAjANm7IA==",
            "dev": true,
            "dependencies": {
                "call-bind": "^1.0.8",
                "define-properties": "^1.2.1",
                "es-errors": "^1.3.0",
                "get-proto": "^1.0.1",
                "gopd": "^1.2.0",
                "set-function-name": "^2.0.2"
            },
            "engines": {
                "node": ">= 0.4"
            },
            "funding": {
                "url": "https://github.com/sponsors/ljharb"
            }
        },
        "node_modules/resolve": {
            "version": "1.22.10",
            "resolved": "https://registry.npmjs.org/resolve/-/resolve-1.22.10.tgz",
            "integrity": "sha512-NPRy+/ncIMeDlTAsuqwKIiferiawhefFJtkNSW0qZJEqMEb+qBt/77B/jGeeek+F0uOeN05CDa6HXbbIgtVX4w==",
            "dev": true,
            "dependencies": {
                "is-core-module": "^2.16.0",
                "path-parse": "^1.0.7",
                "supports-preserve-symlinks-flag": "^1.0.0"
            },
            "bin": {
                "resolve": "bin/resolve"
            },
            "engines": {
                "node": ">= 0.4"
            },
            "funding": {
                "url": "https://github.com/sponsors/ljharb"
            }
        },
        "node_modules/resolve-from": {
            "version": "4.0.0",
            "resolved": "https://registry.npmjs.org/resolve-from/-/resolve-from-4.0.0.tgz",
            "integrity": "sha512-pb/MYmXstAkysRFx8piNI1tGFNQIFA3vkE3Gq4EuA1dF6gHp/+vgZqsCGJapvy8N3Q+4o7FwvquPJcnZ7RYy4g==",
            "dev": true,
            "engines": {
                "node": ">=4"
            }
        },
        "node_modules/resolve-pkg-maps": {
            "version": "1.0.0",
            "resolved": "https://registry.npmjs.org/resolve-pkg-maps/-/resolve-pkg-maps-1.0.0.tgz",
            "integrity": "sha512-seS2Tj26TBVOC2NIc2rOe2y2ZO7efxITtLZcGSOnHHNOQ7CkiUBfw0Iw2ck6xkIhPwLhKNLS8BO+hEpngQlqzw==",
            "dev": true,
            "funding": {
                "url": "https://github.com/privatenumber/resolve-pkg-maps?sponsor=1"
            }
        },
        "node_modules/reusify": {
            "version": "1.1.0",
            "resolved": "https://registry.npmjs.org/reusify/-/reusify-1.1.0.tgz",
            "integrity": "sha512-g6QUff04oZpHs0eG5p83rFLhHeV00ug/Yf9nZM6fLeUrPguBTkTQOdpAWWspMh55TZfVQDPaN3NQJfbVRAxdIw==",
            "dev": true,
            "engines": {
                "iojs": ">=1.0.0",
                "node": ">=0.10.0"
            }
        },
        "node_modules/rimraf": {
            "version": "3.0.2",
            "resolved": "https://registry.npmjs.org/rimraf/-/rimraf-3.0.2.tgz",
            "integrity": "sha512-JZkJMZkAGFFPP2YqXZXPbMlMBgsxzE8ILs4lMIX/2o0L9UBw9O/Y3o6wFw/i9YLapcUJWwqbi3kdxIPdC62TIA==",
            "deprecated": "Rimraf versions prior to v4 are no longer supported",
            "dev": true,
            "dependencies": {
                "glob": "^7.1.3"
            },
            "bin": {
                "rimraf": "bin.js"
            },
            "funding": {
                "url": "https://github.com/sponsors/isaacs"
            }
        },
        "node_modules/run-parallel": {
            "version": "1.2.0",
            "resolved": "https://registry.npmjs.org/run-parallel/-/run-parallel-1.2.0.tgz",
            "integrity": "sha512-5l4VyZR86LZ/lDxZTR6jqL8AFE2S0IFLMP26AbjsLVADxHdhB/c0GUsH+y39UfCi3dzz8OlQuPmnaJOMoDHQBA==",
            "dev": true,
            "funding": [
                {
                    "type": "github",
                    "url": "https://github.com/sponsors/feross"
                },
                {
                    "type": "patreon",
                    "url": "https://www.patreon.com/feross"
                },
                {
                    "type": "consulting",
                    "url": "https://feross.org/support"
                }
            ],
            "dependencies": {
                "queue-microtask": "^1.2.2"
            }
        },
        "node_modules/safe-array-concat": {
            "version": "1.1.3",
            "resolved": "https://registry.npmjs.org/safe-array-concat/-/safe-array-concat-1.1.3.tgz",
            "integrity": "sha512-AURm5f0jYEOydBj7VQlVvDrjeFgthDdEF5H1dP+6mNpoXOMo1quQqJ4wvJDyRZ9+pO3kGWoOdmV08cSv2aJV6Q==",
            "dev": true,
            "dependencies": {
                "call-bind": "^1.0.8",
                "call-bound": "^1.0.2",
                "get-intrinsic": "^1.2.6",
                "has-symbols": "^1.1.0",
                "isarray": "^2.0.5"
            },
            "engines": {
                "node": ">=0.4"
            },
            "funding": {
                "url": "https://github.com/sponsors/ljharb"
            }
        },
        "node_modules/safe-push-apply": {
            "version": "1.0.0",
            "resolved": "https://registry.npmjs.org/safe-push-apply/-/safe-push-apply-1.0.0.tgz",
            "integrity": "sha512-iKE9w/Z7xCzUMIZqdBsp6pEQvwuEebH4vdpjcDWnyzaI6yl6O9FHvVpmGelvEHNsoY6wGblkxR6Zty/h00WiSA==",
            "dev": true,
            "dependencies": {
                "es-errors": "^1.3.0",
                "isarray": "^2.0.5"
            },
            "engines": {
                "node": ">= 0.4"
            },
            "funding": {
                "url": "https://github.com/sponsors/ljharb"
            }
        },
        "node_modules/safe-regex-test": {
            "version": "1.1.0",
            "resolved": "https://registry.npmjs.org/safe-regex-test/-/safe-regex-test-1.1.0.tgz",
            "integrity": "sha512-x/+Cz4YrimQxQccJf5mKEbIa1NzeCRNI5Ecl/ekmlYaampdNLPalVyIcCZNNH3MvmqBugV5TMYZXv0ljslUlaw==",
            "dev": true,
            "dependencies": {
                "call-bound": "^1.0.2",
                "es-errors": "^1.3.0",
                "is-regex": "^1.2.1"
            },
            "engines": {
                "node": ">= 0.4"
            },
            "funding": {
                "url": "https://github.com/sponsors/ljharb"
            }
        },
        "node_modules/scheduler": {
            "version": "0.23.2",
            "resolved": "https://registry.npmjs.org/scheduler/-/scheduler-0.23.2.tgz",
            "integrity": "sha512-UOShsPwz7NrMUqhR6t0hWjFduvOzbtv7toDH1/hIrfRNIDBnnBWd0CwJTGvTpngVlmwGCdP9/Zl/tVrDqcuYzQ==",
            "dependencies": {
                "loose-envify": "^1.1.0"
            }
        },
        "node_modules/semver": {
            "version": "7.7.2",
            "resolved": "https://registry.npmjs.org/semver/-/semver-7.7.2.tgz",
            "integrity": "sha512-RF0Fw+rO5AMf9MAyaRXI4AV0Ulj5lMHqVxxdSgiVbixSCXoEmmX/jk0CuJw4+3SqroYO9VoUh+HcuJivvtJemA==",
            "dev": true,
            "bin": {
                "semver": "bin/semver.js"
            },
            "engines": {
                "node": ">=10"
            }
        },
        "node_modules/set-function-length": {
            "version": "1.2.2",
            "resolved": "https://registry.npmjs.org/set-function-length/-/set-function-length-1.2.2.tgz",
            "integrity": "sha512-pgRc4hJ4/sNjWCSS9AmnS40x3bNMDTknHgL5UaMBTMyJnU90EgWh1Rz+MC9eFu4BuN/UwZjKQuY/1v3rM7HMfg==",
            "dev": true,
            "dependencies": {
                "define-data-property": "^1.1.4",
                "es-errors": "^1.3.0",
                "function-bind": "^1.1.2",
                "get-intrinsic": "^1.2.4",
                "gopd": "^1.0.1",
                "has-property-descriptors": "^1.0.2"
            },
            "engines": {
                "node": ">= 0.4"
            }
        },
        "node_modules/set-function-name": {
            "version": "2.0.2",
            "resolved": "https://registry.npmjs.org/set-function-name/-/set-function-name-2.0.2.tgz",
            "integrity": "sha512-7PGFlmtwsEADb0WYyvCMa1t+yke6daIG4Wirafur5kcf+MhUnPms1UeR0CKQdTZD81yESwMHbtn+TR+dMviakQ==",
            "dev": true,
            "dependencies": {
                "define-data-property": "^1.1.4",
                "es-errors": "^1.3.0",
                "functions-have-names": "^1.2.3",
                "has-property-descriptors": "^1.0.2"
            },
            "engines": {
                "node": ">= 0.4"
            }
        },
        "node_modules/set-proto": {
            "version": "1.0.0",
            "resolved": "https://registry.npmjs.org/set-proto/-/set-proto-1.0.0.tgz",
            "integrity": "sha512-RJRdvCo6IAnPdsvP/7m6bsQqNnn1FCBX5ZNtFL98MmFF/4xAIJTIg1YbHW5DC2W5SKZanrC6i4HsJqlajw/dZw==",
            "dev": true,
            "dependencies": {
                "dunder-proto": "^1.0.1",
                "es-errors": "^1.3.0",
                "es-object-atoms": "^1.0.0"
            },
            "engines": {
                "node": ">= 0.4"
            }
        },
        "node_modules/shebang-command": {
            "version": "2.0.0",
            "resolved": "https://registry.npmjs.org/shebang-command/-/shebang-command-2.0.0.tgz",
            "integrity": "sha512-kHxr2zZpYtdmrN1qDjrrX/Z1rR1kG8Dx+gkpK1G4eXmvXswmcE1hTWBWYUzlraYw1/yZp6YuDY77YtvbN0dmDA==",
            "dev": true,
            "dependencies": {
                "shebang-regex": "^3.0.0"
            },
            "engines": {
                "node": ">=8"
            }
        },
        "node_modules/shebang-regex": {
            "version": "3.0.0",
            "resolved": "https://registry.npmjs.org/shebang-regex/-/shebang-regex-3.0.0.tgz",
            "integrity": "sha512-7++dFhtcx3353uBaq8DDR4NuxBetBzC7ZQOhmTQInHEd6bSrXdiEyzCvG07Z44UYdLShWUyXt5M/yhz8ekcb1A==",
            "dev": true,
            "engines": {
                "node": ">=8"
            }
        },
        "node_modules/side-channel": {
            "version": "1.1.0",
            "resolved": "https://registry.npmjs.org/side-channel/-/side-channel-1.1.0.tgz",
            "integrity": "sha512-ZX99e6tRweoUXqR+VBrslhda51Nh5MTQwou5tnUDgbtyM0dBgmhEDtWGP/xbKn6hqfPRHujUNwz5fy/wbbhnpw==",
            "dev": true,
            "dependencies": {
                "es-errors": "^1.3.0",
                "object-inspect": "^1.13.3",
                "side-channel-list": "^1.0.0",
                "side-channel-map": "^1.0.1",
                "side-channel-weakmap": "^1.0.2"
            },
            "engines": {
                "node": ">= 0.4"
            },
            "funding": {
                "url": "https://github.com/sponsors/ljharb"
            }
        },
        "node_modules/side-channel-list": {
            "version": "1.0.0",
            "resolved": "https://registry.npmjs.org/side-channel-list/-/side-channel-list-1.0.0.tgz",
            "integrity": "sha512-FCLHtRD/gnpCiCHEiJLOwdmFP+wzCmDEkc9y7NsYxeF4u7Btsn1ZuwgwJGxImImHicJArLP4R0yX4c2KCrMrTA==",
            "dev": true,
            "dependencies": {
                "es-errors": "^1.3.0",
                "object-inspect": "^1.13.3"
            },
            "engines": {
                "node": ">= 0.4"
            },
            "funding": {
                "url": "https://github.com/sponsors/ljharb"
            }
        },
        "node_modules/side-channel-map": {
            "version": "1.0.1",
            "resolved": "https://registry.npmjs.org/side-channel-map/-/side-channel-map-1.0.1.tgz",
            "integrity": "sha512-VCjCNfgMsby3tTdo02nbjtM/ewra6jPHmpThenkTYh8pG9ucZ/1P8So4u4FGBek/BjpOVsDCMoLA/iuBKIFXRA==",
            "dev": true,
            "dependencies": {
                "call-bound": "^1.0.2",
                "es-errors": "^1.3.0",
                "get-intrinsic": "^1.2.5",
                "object-inspect": "^1.13.3"
            },
            "engines": {
                "node": ">= 0.4"
            },
            "funding": {
                "url": "https://github.com/sponsors/ljharb"
            }
        },
        "node_modules/side-channel-weakmap": {
            "version": "1.0.2",
            "resolved": "https://registry.npmjs.org/side-channel-weakmap/-/side-channel-weakmap-1.0.2.tgz",
            "integrity": "sha512-WPS/HvHQTYnHisLo9McqBHOJk2FkHO/tlpvldyrnem4aeQp4hai3gythswg6p01oSoTl58rcpiFAjF2br2Ak2A==",
            "dev": true,
            "dependencies": {
                "call-bound": "^1.0.2",
                "es-errors": "^1.3.0",
                "get-intrinsic": "^1.2.5",
                "object-inspect": "^1.13.3",
                "side-channel-map": "^1.0.1"
            },
            "engines": {
                "node": ">= 0.4"
            },
            "funding": {
                "url": "https://github.com/sponsors/ljharb"
            }
        },
        "node_modules/signal-exit": {
            "version": "4.1.0",
            "resolved": "https://registry.npmjs.org/signal-exit/-/signal-exit-4.1.0.tgz",
            "integrity": "sha512-bzyZ1e88w9O1iNJbKnOlvYTrWPDl46O1bG0D3XInv+9tkPrxrN8jUUTiFlDkkmKWgn1M6CfIA13SuGqOa9Korw==",
            "dev": true,
            "engines": {
                "node": ">=14"
            },
            "funding": {
                "url": "https://github.com/sponsors/isaacs"
            }
        },
        "node_modules/slash": {
            "version": "3.0.0",
            "resolved": "https://registry.npmjs.org/slash/-/slash-3.0.0.tgz",
            "integrity": "sha512-g9Q1haeby36OSStwb4ntCGGGaKsaVSjQ68fBxoQcutl5fS1vuY18H3wSt3jFyFtrkx+Kz0V1G85A4MyAdDMi2Q==",
            "dev": true,
            "engines": {
                "node": ">=8"
            }
        },
        "node_modules/source-map-js": {
            "version": "1.2.1",
            "resolved": "https://registry.npmjs.org/source-map-js/-/source-map-js-1.2.1.tgz",
            "integrity": "sha512-UXWMKhLOwVKb728IUtQPXxfYU+usdybtUrK/8uGE8CQMvrhOpwvzDBwj0QhSL7MQc7vIsISBG8VQ8+IDQxpfQA==",
            "engines": {
                "node": ">=0.10.0"
            }
        },
        "node_modules/split2": {
            "version": "4.2.0",
            "resolved": "https://registry.npmjs.org/split2/-/split2-4.2.0.tgz",
            "integrity": "sha512-UcjcJOWknrNkF6PLX83qcHM6KHgVKNkV62Y8a5uYDVv9ydGQVwAHMKqHdJje1VTWpljG0WYpCDhrCdAOYH4TWg==",
            "engines": {
                "node": ">= 10.x"
            }
        },
        "node_modules/ssf": {
            "version": "0.11.2",
            "resolved": "https://registry.npmjs.org/ssf/-/ssf-0.11.2.tgz",
            "integrity": "sha512-+idbmIXoYET47hH+d7dfm2epdOMUDjqcB4648sTZ+t2JwoyBFL/insLfB/racrDmsKB3diwsDA696pZMieAC5g==",
            "dependencies": {
                "frac": "~1.1.2"
            },
            "engines": {
                "node": ">=0.8"
            }
        },
        "node_modules/stable-hash": {
            "version": "0.0.5",
            "resolved": "https://registry.npmjs.org/stable-hash/-/stable-hash-0.0.5.tgz",
            "integrity": "sha512-+L3ccpzibovGXFK+Ap/f8LOS0ahMrHTf3xu7mMLSpEGU0EO9ucaysSylKo9eRDFNhWve/y275iPmIZ4z39a9iA==",
            "dev": true
        },
        "node_modules/stop-iteration-iterator": {
            "version": "1.1.0",
            "resolved": "https://registry.npmjs.org/stop-iteration-iterator/-/stop-iteration-iterator-1.1.0.tgz",
            "integrity": "sha512-eLoXW/DHyl62zxY4SCaIgnRhuMr6ri4juEYARS8E6sCEqzKpOiE521Ucofdx+KnDZl5xmvGYaaKCk5FEOxJCoQ==",
            "dev": true,
            "dependencies": {
                "es-errors": "^1.3.0",
                "internal-slot": "^1.1.0"
            },
            "engines": {
                "node": ">= 0.4"
            }
        },
        "node_modules/streamsearch": {
            "version": "1.1.0",
            "resolved": "https://registry.npmjs.org/streamsearch/-/streamsearch-1.1.0.tgz",
            "integrity": "sha512-Mcc5wHehp9aXz1ax6bZUyY5afg9u2rv5cqQI3mRrYkGC8rW2hM02jWuwjtL++LS5qinSyhj2QfLyNsuc+VsExg==",
            "engines": {
                "node": ">=10.0.0"
            }
        },
        "node_modules/string-width": {
            "version": "5.1.2",
            "resolved": "https://registry.npmjs.org/string-width/-/string-width-5.1.2.tgz",
            "integrity": "sha512-HnLOCR3vjcY8beoNLtcjZ5/nxn2afmME6lhrDrebokqMap+XbeW8n9TXpPDOqdGK5qcI3oT0GKTW6wC7EMiVqA==",
            "dev": true,
            "dependencies": {
                "eastasianwidth": "^0.2.0",
                "emoji-regex": "^9.2.2",
                "strip-ansi": "^7.0.1"
            },
            "engines": {
                "node": ">=12"
            },
            "funding": {
                "url": "https://github.com/sponsors/sindresorhus"
            }
        },
        "node_modules/string-width-cjs": {
            "name": "string-width",
            "version": "4.2.3",
            "resolved": "https://registry.npmjs.org/string-width/-/string-width-4.2.3.tgz",
            "integrity": "sha512-wKyQRQpjJ0sIp62ErSZdGsjMJWsap5oRNihHhu6G7JVO/9jIB6UyevL+tXuOqrng8j/cxKTWyWUwvSTriiZz/g==",
            "dev": true,
            "dependencies": {
                "emoji-regex": "^8.0.0",
                "is-fullwidth-code-point": "^3.0.0",
                "strip-ansi": "^6.0.1"
            },
            "engines": {
                "node": ">=8"
            }
        },
        "node_modules/string-width-cjs/node_modules/emoji-regex": {
            "version": "8.0.0",
            "resolved": "https://registry.npmjs.org/emoji-regex/-/emoji-regex-8.0.0.tgz",
            "integrity": "sha512-MSjYzcWNOA0ewAHpz0MxpYFvwg6yjy1NG3xteoqz644VCo/RPgnr1/GGt+ic3iJTzQ8Eu3TdM14SawnVUmGE6A==",
            "dev": true
        },
        "node_modules/string-width/node_modules/ansi-regex": {
            "version": "6.2.0",
            "resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-6.2.0.tgz",
            "integrity": "sha512-TKY5pyBkHyADOPYlRT9Lx6F544mPl0vS5Ew7BJ45hA08Q+t3GjbueLliBWN3sMICk6+y7HdyxSzC4bWS8baBdg==",
            "dev": true,
            "engines": {
                "node": ">=12"
            },
            "funding": {
                "url": "https://github.com/chalk/ansi-regex?sponsor=1"
            }
        },
        "node_modules/string-width/node_modules/strip-ansi": {
            "version": "7.1.0",
            "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-7.1.0.tgz",
            "integrity": "sha512-iq6eVVI64nQQTRYq2KtEg2d2uU7LElhTJwsH4YzIHZshxlgZms/wIc4VoDQTlG/IvVIrBKG06CrZnp0qv7hkcQ==",
            "dev": true,
            "dependencies": {
                "ansi-regex": "^6.0.1"
            },
            "engines": {
                "node": ">=12"
            },
            "funding": {
                "url": "https://github.com/chalk/strip-ansi?sponsor=1"
            }
        },
        "node_modules/string.prototype.includes": {
            "version": "2.0.1",
            "resolved": "https://registry.npmjs.org/string.prototype.includes/-/string.prototype.includes-2.0.1.tgz",
            "integrity": "sha512-o7+c9bW6zpAdJHTtujeePODAhkuicdAryFsfVKwA+wGw89wJ4GTY484WTucM9hLtDEOpOvI+aHnzqnC5lHp4Rg==",
            "dev": true,
            "dependencies": {
                "call-bind": "^1.0.7",
                "define-properties": "^1.2.1",
                "es-abstract": "^1.23.3"
            },
            "engines": {
                "node": ">= 0.4"
            }
        },
        "node_modules/string.prototype.matchall": {
            "version": "4.0.12",
            "resolved": "https://registry.npmjs.org/string.prototype.matchall/-/string.prototype.matchall-4.0.12.tgz",
            "integrity": "sha512-6CC9uyBL+/48dYizRf7H7VAYCMCNTBeM78x/VTUe9bFEaxBepPJDa1Ow99LqI/1yF7kuy7Q3cQsYMrcjGUcskA==",
            "dev": true,
            "dependencies": {
                "call-bind": "^1.0.8",
                "call-bound": "^1.0.3",
                "define-properties": "^1.2.1",
                "es-abstract": "^1.23.6",
                "es-errors": "^1.3.0",
                "es-object-atoms": "^1.0.0",
                "get-intrinsic": "^1.2.6",
                "gopd": "^1.2.0",
                "has-symbols": "^1.1.0",
                "internal-slot": "^1.1.0",
                "regexp.prototype.flags": "^1.5.3",
                "set-function-name": "^2.0.2",
                "side-channel": "^1.1.0"
            },
            "engines": {
                "node": ">= 0.4"
            },
            "funding": {
                "url": "https://github.com/sponsors/ljharb"
            }
        },
        "node_modules/string.prototype.repeat": {
            "version": "1.0.0",
            "resolved": "https://registry.npmjs.org/string.prototype.repeat/-/string.prototype.repeat-1.0.0.tgz",
            "integrity": "sha512-0u/TldDbKD8bFCQ/4f5+mNRrXwZ8hg2w7ZR8wa16e8z9XpePWl3eGEcUD0OXpEH/VJH/2G3gjUtR3ZOiBe2S/w==",
            "dev": true,
            "dependencies": {
                "define-properties": "^1.1.3",
                "es-abstract": "^1.17.5"
            }
        },
        "node_modules/string.prototype.trim": {
            "version": "1.2.10",
            "resolved": "https://registry.npmjs.org/string.prototype.trim/-/string.prototype.trim-1.2.10.tgz",
            "integrity": "sha512-Rs66F0P/1kedk5lyYyH9uBzuiI/kNRmwJAR9quK6VOtIpZ2G+hMZd+HQbbv25MgCA6gEffoMZYxlTod4WcdrKA==",
            "dev": true,
            "dependencies": {
                "call-bind": "^1.0.8",
                "call-bound": "^1.0.2",
                "define-data-property": "^1.1.4",
                "define-properties": "^1.2.1",
                "es-abstract": "^1.23.5",
                "es-object-atoms": "^1.0.0",
                "has-property-descriptors": "^1.0.2"
            },
            "engines": {
                "node": ">= 0.4"
            },
            "funding": {
                "url": "https://github.com/sponsors/ljharb"
            }
        },
        "node_modules/string.prototype.trimend": {
            "version": "1.0.9",
            "resolved": "https://registry.npmjs.org/string.prototype.trimend/-/string.prototype.trimend-1.0.9.tgz",
            "integrity": "sha512-G7Ok5C6E/j4SGfyLCloXTrngQIQU3PWtXGst3yM7Bea9FRURf1S42ZHlZZtsNque2FN2PoUhfZXYLNWwEr4dLQ==",
            "dev": true,
            "dependencies": {
                "call-bind": "^1.0.8",
                "call-bound": "^1.0.2",
                "define-properties": "^1.2.1",
                "es-object-atoms": "^1.0.0"
            },
            "engines": {
                "node": ">= 0.4"
            },
            "funding": {
                "url": "https://github.com/sponsors/ljharb"
            }
        },
        "node_modules/string.prototype.trimstart": {
            "version": "1.0.8",
            "resolved": "https://registry.npmjs.org/string.prototype.trimstart/-/string.prototype.trimstart-1.0.8.tgz",
            "integrity": "sha512-UXSH262CSZY1tfu3G3Secr6uGLCFVPMhIqHjlgCUtCCcgihYc/xKs9djMTMUOb2j1mVSeU8EU6NWc/iQKU6Gfg==",
            "dev": true,
            "dependencies": {
                "call-bind": "^1.0.7",
                "define-properties": "^1.2.1",
                "es-object-atoms": "^1.0.0"
            },
            "engines": {
                "node": ">= 0.4"
            },
            "funding": {
                "url": "https://github.com/sponsors/ljharb"
            }
        },
        "node_modules/strip-ansi": {
            "version": "6.0.1",
            "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-6.0.1.tgz",
            "integrity": "sha512-Y38VPSHcqkFrCpFnQ9vuSXmquuv5oXOKpGeT6aGrr3o3Gc9AlVa6JBfUSOCnbxGGZF+/0ooI7KrPuUSztUdU5A==",
            "dev": true,
            "dependencies": {
                "ansi-regex": "^5.0.1"
            },
            "engines": {
                "node": ">=8"
            }
        },
        "node_modules/strip-ansi-cjs": {
            "name": "strip-ansi",
            "version": "6.0.1",
            "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-6.0.1.tgz",
            "integrity": "sha512-Y38VPSHcqkFrCpFnQ9vuSXmquuv5oXOKpGeT6aGrr3o3Gc9AlVa6JBfUSOCnbxGGZF+/0ooI7KrPuUSztUdU5A==",
            "dev": true,
            "dependencies": {
                "ansi-regex": "^5.0.1"
            },
            "engines": {
                "node": ">=8"
            }
        },
        "node_modules/strip-bom": {
            "version": "3.0.0",
            "resolved": "https://registry.npmjs.org/strip-bom/-/strip-bom-3.0.0.tgz",
            "integrity": "sha512-vavAMRXOgBVNF6nyEEmL3DBK19iRpDcoIwW+swQ+CbGiu7lju6t+JklA1MHweoWtadgt4ISVUsXLyDq34ddcwA==",
            "dev": true,
            "engines": {
                "node": ">=4"
            }
        },
        "node_modules/strip-json-comments": {
            "version": "3.1.1",
            "resolved": "https://registry.npmjs.org/strip-json-comments/-/strip-json-comments-3.1.1.tgz",
            "integrity": "sha512-6fPc+R4ihwqP6N/aIv2f1gMH8lOVtWQHoqC4yK6oSDVVocumAsfCqjkXnqiYMhmMwS/mEHLp7Vehlt3ql6lEig==",
            "dev": true,
            "engines": {
                "node": ">=8"
            },
            "funding": {
                "url": "https://github.com/sponsors/sindresorhus"
            }
        },
        "node_modules/styled-jsx": {
            "version": "5.1.1",
            "resolved": "https://registry.npmjs.org/styled-jsx/-/styled-jsx-5.1.1.tgz",
            "integrity": "sha512-pW7uC1l4mBZ8ugbiZrcIsiIvVx1UmTfw7UkC3Um2tmfUq9Bhk8IiyEIPl6F8agHgjzku6j0xQEZbfA5uSgSaCw==",
            "dependencies": {
                "client-only": "0.0.1"
            },
            "engines": {
                "node": ">= 12.0.0"
            },
            "peerDependencies": {
                "react": ">= 16.8.0 || 17.x.x || ^18.0.0-0"
            },
            "peerDependenciesMeta": {
                "@babel/core": {
                    "optional": true
                },
                "babel-plugin-macros": {
                    "optional": true
                }
            }
        },
        "node_modules/sucrase": {
            "version": "3.35.0",
            "resolved": "https://registry.npmjs.org/sucrase/-/sucrase-3.35.0.tgz",
            "integrity": "sha512-8EbVDiu9iN/nESwxeSxDKe0dunta1GOlHufmSSXxMD2z2/tMZpDMpvXQGsc+ajGo8y2uYUmixaSRUc/QPoQ0GA==",
            "dev": true,
            "dependencies": {
                "@jridgewell/gen-mapping": "^0.3.2",
                "commander": "^4.0.0",
                "glob": "^10.3.10",
                "lines-and-columns": "^1.1.6",
                "mz": "^2.7.0",
                "pirates": "^4.0.1",
                "ts-interface-checker": "^0.1.9"
            },
            "bin": {
                "sucrase": "bin/sucrase",
                "sucrase-node": "bin/sucrase-node"
            },
            "engines": {
                "node": ">=16 || 14 >=14.17"
            }
        },
        "node_modules/sucrase/node_modules/brace-expansion": {
            "version": "2.0.2",
            "resolved": "https://registry.npmjs.org/brace-expansion/-/brace-expansion-2.0.2.tgz",
            "integrity": "sha512-Jt0vHyM+jmUBqojB7E1NIYadt0vI0Qxjxd2TErW94wDz+E2LAm5vKMXXwg6ZZBTHPuUlDgQHKXvjGBdfcF1ZDQ==",
            "dev": true,
            "dependencies": {
                "balanced-match": "^1.0.0"
            }
        },
        "node_modules/sucrase/node_modules/glob": {
            "version": "10.4.5",
            "resolved": "https://registry.npmjs.org/glob/-/glob-10.4.5.tgz",
            "integrity": "sha512-7Bv8RF0k6xjo7d4A/PxYLbUCfb6c+Vpd2/mB2yRDlew7Jb5hEXiCD9ibfO7wpk8i4sevK6DFny9h7EYbM3/sHg==",
            "dev": true,
            "dependencies": {
                "foreground-child": "^3.1.0",
                "jackspeak": "^3.1.2",
                "minimatch": "^9.0.4",
                "minipass": "^7.1.2",
                "package-json-from-dist": "^1.0.0",
                "path-scurry": "^1.11.1"
            },
            "bin": {
                "glob": "dist/esm/bin.mjs"
            },
            "funding": {
                "url": "https://github.com/sponsors/isaacs"
            }
        },
        "node_modules/sucrase/node_modules/minimatch": {
            "version": "9.0.5",
            "resolved": "https://registry.npmjs.org/minimatch/-/minimatch-9.0.5.tgz",
            "integrity": "sha512-G6T0ZX48xgozx7587koeX9Ys2NYy6Gmv//P89sEte9V9whIapMNF4idKxnW2QtCcLiTWlb/wfCabAtAFWhhBow==",
            "dev": true,
            "dependencies": {
                "brace-expansion": "^2.0.1"
            },
            "engines": {
                "node": ">=16 || 14 >=14.17"
            },
            "funding": {
                "url": "https://github.com/sponsors/isaacs"
            }
        },
        "node_modules/supports-color": {
            "version": "7.2.0",
            "resolved": "https://registry.npmjs.org/supports-color/-/supports-color-7.2.0.tgz",
            "integrity": "sha512-qpCAvRl9stuOHveKsn7HncJRvv501qIacKzQlO/+Lwxc9+0q2wLyv4Dfvt80/DPn2pqOBsJdDiogXGR9+OvwRw==",
            "dev": true,
            "dependencies": {
                "has-flag": "^4.0.0"
            },
            "engines": {
                "node": ">=8"
            }
        },
        "node_modules/supports-preserve-symlinks-flag": {
            "version": "1.0.0",
            "resolved": "https://registry.npmjs.org/supports-preserve-symlinks-flag/-/supports-preserve-symlinks-flag-1.0.0.tgz",
            "integrity": "sha512-ot0WnXS9fgdkgIcePe6RHNk1WA8+muPa6cSjeR3V8K27q9BB1rTE3R1p7Hv0z1ZyAc8s6Vvv8DIyWf681MAt0w==",
            "dev": true,
            "engines": {
                "node": ">= 0.4"
            },
            "funding": {
                "url": "https://github.com/sponsors/ljharb"
            }
        },
        "node_modules/tailwind-merge": {
            "version": "1.14.0",
            "resolved": "https://registry.npmjs.org/tailwind-merge/-/tailwind-merge-1.14.0.tgz",
            "integrity": "sha512-3mFKyCo/MBcgyOTlrY8T7odzZFx+w+qKSMAmdFzRvqBfLlSigU6TZnlFHK0lkMwj9Bj8OYU+9yW9lmGuS0QEnQ==",
            "funding": {
                "type": "github",
                "url": "https://github.com/sponsors/dcastil"
            }
        },
        "node_modules/tailwindcss": {
            "version": "3.4.17",
            "resolved": "https://registry.npmjs.org/tailwindcss/-/tailwindcss-3.4.17.tgz",
            "integrity": "sha512-w33E2aCvSDP0tW9RZuNXadXlkHXqFzSkQew/aIa2i/Sj8fThxwovwlXHSPXTbAHwEIhBFXAedUhP2tueAKP8Og==",
            "dev": true,
            "dependencies": {
                "@alloc/quick-lru": "^5.2.0",
                "arg": "^5.0.2",
                "chokidar": "^3.6.0",
                "didyoumean": "^1.2.2",
                "dlv": "^1.1.3",
                "fast-glob": "^3.3.2",
                "glob-parent": "^6.0.2",
                "is-glob": "^4.0.3",
                "jiti": "^1.21.6",
                "lilconfig": "^3.1.3",
                "micromatch": "^4.0.8",
                "normalize-path": "^3.0.0",
                "object-hash": "^3.0.0",
                "picocolors": "^1.1.1",
                "postcss": "^8.4.47",
                "postcss-import": "^15.1.0",
                "postcss-js": "^4.0.1",
                "postcss-load-config": "^4.0.2",
                "postcss-nested": "^6.2.0",
                "postcss-selector-parser": "^6.1.2",
                "resolve": "^1.22.8",
                "sucrase": "^3.35.0"
            },
            "bin": {
                "tailwind": "lib/cli.js",
                "tailwindcss": "lib/cli.js"
            },
            "engines": {
                "node": ">=14.0.0"
            }
        },
        "node_modules/tailwindcss/node_modules/postcss-load-config": {
            "version": "4.0.2",
            "resolved": "https://registry.npmjs.org/postcss-load-config/-/postcss-load-config-4.0.2.tgz",
            "integrity": "sha512-bSVhyJGL00wMVoPUzAVAnbEoWyqRxkjv64tUl427SKnPrENtq6hJwUojroMz2VB+Q1edmi4IfrAPpami5VVgMQ==",
            "dev": true,
            "funding": [
                {
                    "type": "opencollective",
                    "url": "https://opencollective.com/postcss/"
                },
                {
                    "type": "github",
                    "url": "https://github.com/sponsors/ai"
                }
            ],
            "dependencies": {
                "lilconfig": "^3.0.0",
                "yaml": "^2.3.4"
            },
            "engines": {
                "node": ">= 14"
            },
            "peerDependencies": {
                "postcss": ">=8.0.9",
                "ts-node": ">=9.0.0"
            },
            "peerDependenciesMeta": {
                "postcss": {
                    "optional": true
                },
                "ts-node": {
                    "optional": true
                }
            }
        },
        "node_modules/text-table": {
            "version": "0.2.0",
            "resolved": "https://registry.npmjs.org/text-table/-/text-table-0.2.0.tgz",
            "integrity": "sha512-N+8UisAXDGk8PFXP4HAzVR9nbfmVJ3zYLAWiTIoqC5v5isinhr+r5uaO8+7r3BMfuNIufIsA7RdpVgacC2cSpw==",
            "dev": true
        },
        "node_modules/thenify": {
            "version": "3.3.1",
            "resolved": "https://registry.npmjs.org/thenify/-/thenify-3.3.1.tgz",
            "integrity": "sha512-RVZSIV5IG10Hk3enotrhvz0T9em6cyHBLkH/YAZuKqd8hRkKhSfCGIcP2KUY0EPxndzANBmNllzWPwak+bheSw==",
            "dev": true,
            "dependencies": {
                "any-promise": "^1.0.0"
            }
        },
        "node_modules/thenify-all": {
            "version": "1.6.0",
            "resolved": "https://registry.npmjs.org/thenify-all/-/thenify-all-1.6.0.tgz",
            "integrity": "sha512-RNxQH/qI8/t3thXJDwcstUO4zeqo64+Uy/+sNVRBx4Xn2OX+OZ9oP+iJnNFqplFra2ZUVeKCSa2oVWi3T4uVmA==",
            "dev": true,
            "dependencies": {
                "thenify": ">= 3.1.0 < 4"
            },
            "engines": {
                "node": ">=0.8"
            }
        },
        "node_modules/tiny-invariant": {
            "version": "1.3.3",
            "resolved": "https://registry.npmjs.org/tiny-invariant/-/tiny-invariant-1.3.3.tgz",
            "integrity": "sha512-+FbBPE1o9QAYvviau/qC5SE3caw21q3xkvWKBtja5vgqOWIHHJ3ioaq1VPfn/Szqctz2bU/oYeKd9/z5BL+PVg=="
        },
        "node_modules/tinyglobby": {
            "version": "0.2.15",
            "resolved": "https://registry.npmjs.org/tinyglobby/-/tinyglobby-0.2.15.tgz",
            "integrity": "sha512-j2Zq4NyQYG5XMST4cbs02Ak8iJUdxRM0XI5QyxXuZOzKOINmWurp3smXu3y5wDcJrptwpSjgXHzIQxR0omXljQ==",
            "dev": true,
            "dependencies": {
                "fdir": "^6.5.0",
                "picomatch": "^4.0.3"
            },
            "engines": {
                "node": ">=12.0.0"
            },
            "funding": {
                "url": "https://github.com/sponsors/SuperchupuDev"
            }
        },
        "node_modules/tinyglobby/node_modules/fdir": {
            "version": "6.5.0",
            "resolved": "https://registry.npmjs.org/fdir/-/fdir-6.5.0.tgz",
            "integrity": "sha512-tIbYtZbucOs0BRGqPJkshJUYdL+SDH7dVM8gjy+ERp3WAUjLEFJE+02kanyHtwjWOnwrKYBiwAmM0p4kLJAnXg==",
            "dev": true,
            "engines": {
                "node": ">=12.0.0"
            },
            "peerDependencies": {
                "picomatch": "^3 || ^4"
            },
            "peerDependenciesMeta": {
                "picomatch": {
                    "optional": true
                }
            }
        },
        "node_modules/tinyglobby/node_modules/picomatch": {
            "version": "4.0.3",
            "resolved": "https://registry.npmjs.org/picomatch/-/picomatch-4.0.3.tgz",
            "integrity": "sha512-5gTmgEY/sqK6gFXLIsQNH19lWb4ebPDLA4SdLP7dsWkIXHWlG66oPuVvXSGFPppYZz8ZDZq0dYYrbHfBCVUb1Q==",
            "dev": true,
            "engines": {
                "node": ">=12"
            },
            "funding": {
                "url": "https://github.com/sponsors/jonschlinkert"
            }
        },
        "node_modules/to-regex-range": {
            "version": "5.0.1",
            "resolved": "https://registry.npmjs.org/to-regex-range/-/to-regex-range-5.0.1.tgz",
            "integrity": "sha512-65P7iz6X5yEr1cwcgvQxbbIw7Uk3gOy5dIdtZ4rDveLqhrdJP+Li/Hx6tyK0NEb+2GCyneCMJiGqrADCSNk8sQ==",
            "dev": true,
            "dependencies": {
                "is-number": "^7.0.0"
            },
            "engines": {
                "node": ">=8.0"
            }
        },
        "node_modules/ts-api-utils": {
            "version": "1.4.3",
            "resolved": "https://registry.npmjs.org/ts-api-utils/-/ts-api-utils-1.4.3.tgz",
            "integrity": "sha512-i3eMG77UTMD0hZhgRS562pv83RC6ukSAC2GMNWc+9dieh/+jDM5u5YG+NHX6VNDRHQcHwmsTHctP9LhbC3WxVw==",
            "dev": true,
            "engines": {
                "node": ">=16"
            },
            "peerDependencies": {
                "typescript": ">=4.2.0"
            }
        },
        "node_modules/ts-interface-checker": {
            "version": "0.1.13",
            "resolved": "https://registry.npmjs.org/ts-interface-checker/-/ts-interface-checker-0.1.13.tgz",
            "integrity": "sha512-Y/arvbn+rrz3JCKl9C4kVNfTfSm2/mEp5FSz5EsZSANGPSlQrpRI5M4PKF+mJnE52jOO90PnPSc3Ur3bTQw0gA==",
            "dev": true
        },
        "node_modules/tsconfig-paths": {
            "version": "3.15.0",
            "resolved": "https://registry.npmjs.org/tsconfig-paths/-/tsconfig-paths-3.15.0.tgz",
            "integrity": "sha512-2Ac2RgzDe/cn48GvOe3M+o82pEFewD3UPbyoUHHdKasHwJKjds4fLXWf/Ux5kATBKN20oaFGu+jbElp1pos0mg==",
            "dev": true,
            "dependencies": {
                "@types/json5": "^0.0.29",
                "json5": "^1.0.2",
                "minimist": "^1.2.6",
                "strip-bom": "^3.0.0"
            }
        },
        "node_modules/tslib": {
            "version": "2.8.1",
            "resolved": "https://registry.npmjs.org/tslib/-/tslib-2.8.1.tgz",
            "integrity": "sha512-oJFu94HQb+KVduSUQL7wnpmqnfmLsOA/nAh6b6EH0wCEoK0/mPeXU6c3wKDV83MkOuHPRHtSXKKU99IBazS/2w=="
        },
        "node_modules/type-check": {
            "version": "0.4.0",
            "resolved": "https://registry.npmjs.org/type-check/-/type-check-0.4.0.tgz",
            "integrity": "sha512-XleUoc9uwGXqjWwXaUTZAmzMcFZ5858QA2vvx1Ur5xIcixXIP+8LnFDgRplU30us6teqdlskFfu+ae4K79Ooew==",
            "dev": true,
            "dependencies": {
                "prelude-ls": "^1.2.1"
            },
            "engines": {
                "node": ">= 0.8.0"
            }
        },
        "node_modules/type-fest": {
            "version": "0.20.2",
            "resolved": "https://registry.npmjs.org/type-fest/-/type-fest-0.20.2.tgz",
            "integrity": "sha512-Ne+eE4r0/iWnpAxD852z3A+N0Bt5RN//NjJwRd2VFHEmrywxf5vsZlh4R6lixl6B+wz/8d+maTSAkN1FIkI3LQ==",
            "dev": true,
            "engines": {
                "node": ">=10"
            },
            "funding": {
                "url": "https://github.com/sponsors/sindresorhus"
            }
        },
        "node_modules/typed-array-buffer": {
            "version": "1.0.3",
            "resolved": "https://registry.npmjs.org/typed-array-buffer/-/typed-array-buffer-1.0.3.tgz",
            "integrity": "sha512-nAYYwfY3qnzX30IkA6AQZjVbtK6duGontcQm1WSG1MD94YLqK0515GNApXkoxKOWMusVssAHWLh9SeaoefYFGw==",
            "dev": true,
            "dependencies": {
                "call-bound": "^1.0.3",
                "es-errors": "^1.3.0",
                "is-typed-array": "^1.1.14"
            },
            "engines": {
                "node": ">= 0.4"
            }
        },
        "node_modules/typed-array-byte-length": {
            "version": "1.0.3",
            "resolved": "https://registry.npmjs.org/typed-array-byte-length/-/typed-array-byte-length-1.0.3.tgz",
            "integrity": "sha512-BaXgOuIxz8n8pIq3e7Atg/7s+DpiYrxn4vdot3w9KbnBhcRQq6o3xemQdIfynqSeXeDrF32x+WvfzmOjPiY9lg==",
            "dev": true,
            "dependencies": {
                "call-bind": "^1.0.8",
                "for-each": "^0.3.3",
                "gopd": "^1.2.0",
                "has-proto": "^1.2.0",
                "is-typed-array": "^1.1.14"
            },
            "engines": {
                "node": ">= 0.4"
            },
            "funding": {
                "url": "https://github.com/sponsors/ljharb"
            }
        },
        "node_modules/typed-array-byte-offset": {
            "version": "1.0.4",
            "resolved": "https://registry.npmjs.org/typed-array-byte-offset/-/typed-array-byte-offset-1.0.4.tgz",
            "integrity": "sha512-bTlAFB/FBYMcuX81gbL4OcpH5PmlFHqlCCpAl8AlEzMz5k53oNDvN8p1PNOWLEmI2x4orp3raOFB51tv9X+MFQ==",
            "dev": true,
            "dependencies": {
                "available-typed-arrays": "^1.0.7",
                "call-bind": "^1.0.8",
                "for-each": "^0.3.3",
                "gopd": "^1.2.0",
                "has-proto": "^1.2.0",
                "is-typed-array": "^1.1.15",
                "reflect.getprototypeof": "^1.0.9"
            },
            "engines": {
                "node": ">= 0.4"
            },
            "funding": {
                "url": "https://github.com/sponsors/ljharb"
            }
        },
        "node_modules/typed-array-length": {
            "version": "1.0.7",
            "resolved": "https://registry.npmjs.org/typed-array-length/-/typed-array-length-1.0.7.tgz",
            "integrity": "sha512-3KS2b+kL7fsuk/eJZ7EQdnEmQoaho/r6KUef7hxvltNA5DR8NAUM+8wJMbJyZ4G9/7i3v5zPBIMN5aybAh2/Jg==",
            "dev": true,
            "dependencies": {
                "call-bind": "^1.0.7",
                "for-each": "^0.3.3",
                "gopd": "^1.0.1",
                "is-typed-array": "^1.1.13",
                "possible-typed-array-names": "^1.0.0",
                "reflect.getprototypeof": "^1.0.6"
            },
            "engines": {
                "node": ">= 0.4"
            },
            "funding": {
                "url": "https://github.com/sponsors/ljharb"
            }
        },
        "node_modules/typescript": {
            "version": "5.9.2",
            "resolved": "https://registry.npmjs.org/typescript/-/typescript-5.9.2.tgz",
            "integrity": "sha512-CWBzXQrc/qOkhidw1OzBTQuYRbfyxDXJMVJ1XNwUHGROVmuaeiEm3OslpZ1RV96d7SKKjZKrSJu3+t/xlw3R9A==",
            "dev": true,
            "bin": {
                "tsc": "bin/tsc",
                "tsserver": "bin/tsserver"
            },
            "engines": {
                "node": ">=14.17"
            }
        },
        "node_modules/unbox-primitive": {
            "version": "1.1.0",
            "resolved": "https://registry.npmjs.org/unbox-primitive/-/unbox-primitive-1.1.0.tgz",
            "integrity": "sha512-nWJ91DjeOkej/TA8pXQ3myruKpKEYgqvpw9lz4OPHj/NWFNluYrjbz9j01CJ8yKQd2g4jFoOkINCTW2I5LEEyw==",
            "dev": true,
            "dependencies": {
                "call-bound": "^1.0.3",
                "has-bigints": "^1.0.2",
                "has-symbols": "^1.1.0",
                "which-boxed-primitive": "^1.1.1"
            },
            "engines": {
                "node": ">= 0.4"
            },
            "funding": {
                "url": "https://github.com/sponsors/ljharb"
            }
        },
        "node_modules/undici-types": {
            "version": "6.21.0",
            "resolved": "https://registry.npmjs.org/undici-types/-/undici-types-6.21.0.tgz",
            "integrity": "sha512-iwDZqg0QAGrg9Rav5H4n0M64c3mkR59cJ6wQp+7C4nI0gsmExaedaYLNO44eT4AtBBwjbTiGPMlt2Md0T9H9JQ=="
        },
        "node_modules/unrs-resolver": {
            "version": "1.11.1",
            "resolved": "https://registry.npmjs.org/unrs-resolver/-/unrs-resolver-1.11.1.tgz",
            "integrity": "sha512-bSjt9pjaEBnNiGgc9rUiHGKv5l4/TGzDmYw3RhnkJGtLhbnnA/5qJj7x3dNDCRx/PJxu774LlH8lCOlB4hEfKg==",
            "dev": true,
            "hasInstallScript": true,
            "dependencies": {
                "napi-postinstall": "^0.3.0"
            },
            "funding": {
                "url": "https://opencollective.com/unrs-resolver"
            },
            "optionalDependencies": {
                "@unrs/resolver-binding-android-arm-eabi": "1.11.1",
                "@unrs/resolver-binding-android-arm64": "1.11.1",
                "@unrs/resolver-binding-darwin-arm64": "1.11.1",
                "@unrs/resolver-binding-darwin-x64": "1.11.1",
                "@unrs/resolver-binding-freebsd-x64": "1.11.1",
                "@unrs/resolver-binding-linux-arm-gnueabihf": "1.11.1",
                "@unrs/resolver-binding-linux-arm-musleabihf": "1.11.1",
                "@unrs/resolver-binding-linux-arm64-gnu": "1.11.1",
                "@unrs/resolver-binding-linux-arm64-musl": "1.11.1",
                "@unrs/resolver-binding-linux-ppc64-gnu": "1.11.1",
                "@unrs/resolver-binding-linux-riscv64-gnu": "1.11.1",
                "@unrs/resolver-binding-linux-riscv64-musl": "1.11.1",
                "@unrs/resolver-binding-linux-s390x-gnu": "1.11.1",
                "@unrs/resolver-binding-linux-x64-gnu": "1.11.1",
                "@unrs/resolver-binding-linux-x64-musl": "1.11.1",
                "@unrs/resolver-binding-wasm32-wasi": "1.11.1",
                "@unrs/resolver-binding-win32-arm64-msvc": "1.11.1",
                "@unrs/resolver-binding-win32-ia32-msvc": "1.11.1",
                "@unrs/resolver-binding-win32-x64-msvc": "1.11.1"
            }
        },
        "node_modules/update-browserslist-db": {
            "version": "1.1.3",
            "resolved": "https://registry.npmjs.org/update-browserslist-db/-/update-browserslist-db-1.1.3.tgz",
            "integrity": "sha512-UxhIZQ+QInVdunkDAaiazvvT/+fXL5Osr0JZlJulepYu6Jd7qJtDZjlur0emRlT71EN3ScPoE7gvsuIKKNavKw==",
            "dev": true,
            "funding": [
                {
                    "type": "opencollective",
                    "url": "https://opencollective.com/browserslist"
                },
                {
                    "type": "tidelift",
                    "url": "https://tidelift.com/funding/github/npm/browserslist"
                },
                {
                    "type": "github",
                    "url": "https://github.com/sponsors/ai"
                }
            ],
            "dependencies": {
                "escalade": "^3.2.0",
                "picocolors": "^1.1.1"
            },
            "bin": {
                "update-browserslist-db": "cli.js"
            },
            "peerDependencies": {
                "browserslist": ">= 4.21.0"
            }
        },
        "node_modules/uri-js": {
            "version": "4.4.1",
            "resolved": "https://registry.npmjs.org/uri-js/-/uri-js-4.4.1.tgz",
            "integrity": "sha512-7rKUyy33Q1yc98pQ1DAmLtwX109F7TIfWlW1Ydo8Wl1ii1SeHieeh0HHfPeL2fMXK6z0s8ecKs9frCuLJvndBg==",
            "dev": true,
            "dependencies": {
                "punycode": "^2.1.0"
            }
        },
        "node_modules/use-callback-ref": {
            "version": "1.3.3",
            "resolved": "https://registry.npmjs.org/use-callback-ref/-/use-callback-ref-1.3.3.tgz",
            "integrity": "sha512-jQL3lRnocaFtu3V00JToYz/4QkNWswxijDaCVNZRiRTO3HQDLsdu1ZtmIUvV4yPp+rvWm5j0y0TG/S61cuijTg==",
            "dependencies": {
                "tslib": "^2.0.0"
            },
            "engines": {
                "node": ">=10"
            },
            "peerDependencies": {
                "@types/react": "*",
                "react": "^16.8.0 || ^17.0.0 || ^18.0.0 || ^19.0.0 || ^19.0.0-rc"
            },
            "peerDependenciesMeta": {
                "@types/react": {
                    "optional": true
                }
            }
        },
        "node_modules/use-sidecar": {
            "version": "1.1.3",
            "resolved": "https://registry.npmjs.org/use-sidecar/-/use-sidecar-1.1.3.tgz",
            "integrity": "sha512-Fedw0aZvkhynoPYlA5WXrMCAMm+nSWdZt6lzJQ7Ok8S6Q+VsHmHpRWndVRJ8Be0ZbkfPc5LRYH+5XrzXcEeLRQ==",
            "dependencies": {
                "detect-node-es": "^1.1.0",
                "tslib": "^2.0.0"
            },
            "engines": {
                "node": ">=10"
            },
            "peerDependencies": {
                "@types/react": "*",
                "react": "^16.8.0 || ^17.0.0 || ^18.0.0 || ^19.0.0 || ^19.0.0-rc"
            },
            "peerDependenciesMeta": {
                "@types/react": {
                    "optional": true
                }
            }
        },
        "node_modules/use-sync-external-store": {
            "version": "1.5.0",
            "resolved": "https://registry.npmjs.org/use-sync-external-store/-/use-sync-external-store-1.5.0.tgz",
            "integrity": "sha512-Rb46I4cGGVBmjamjphe8L/UnvJD+uPPtTkNvX5mZgqdbavhI4EbgIWJiIHXJ8bc/i9EQGPRh4DwEURJ552Do0A==",
            "peerDependencies": {
                "react": "^16.8.0 || ^17.0.0 || ^18.0.0 || ^19.0.0"
            }
        },
        "node_modules/util-deprecate": {
            "version": "1.0.2",
            "resolved": "https://registry.npmjs.org/util-deprecate/-/util-deprecate-1.0.2.tgz",
            "integrity": "sha512-EPD5q1uXyFxJpCrLnCc1nHnq3gOa6DZBocAIiI2TaSCA7VCJ1UJDMagCzIkXNsUYfD1daK//LTEQ8xiIbrHtcw==",
            "dev": true
        },
        "node_modules/uuid": {
            "version": "12.0.0",
            "resolved": "https://registry.npmjs.org/uuid/-/uuid-12.0.0.tgz",
            "integrity": "sha512-USe1zesMYh4fjCA8ZH5+X5WIVD0J4V1Jksm1bFTVBX2F/cwSXt0RO5w/3UXbdLKmZX65MiWV+hwhSS8p6oBTGA==",
            "funding": [
                "https://github.com/sponsors/broofa",
                "https://github.com/sponsors/ctavan"
            ],
            "bin": {
                "uuid": "dist/bin/uuid"
            }
        },
        "node_modules/victory-vendor": {
            "version": "36.9.2",
            "resolved": "https://registry.npmjs.org/victory-vendor/-/victory-vendor-36.9.2.tgz",
            "integrity": "sha512-PnpQQMuxlwYdocC8fIJqVXvkeViHYzotI+NJrCuav0ZYFoq912ZHBk3mCeuj+5/VpodOjPe1z0Fk2ihgzlXqjQ==",
            "dependencies": {
                "@types/d3-array": "^3.0.3",
                "@types/d3-ease": "^3.0.0",
                "@types/d3-interpolate": "^3.0.1",
                "@types/d3-scale": "^4.0.2",
                "@types/d3-shape": "^3.1.0",
                "@types/d3-time": "^3.0.0",
                "@types/d3-timer": "^3.0.0",
                "d3-array": "^3.1.6",
                "d3-ease": "^3.0.1",
                "d3-interpolate": "^3.0.1",
                "d3-scale": "^4.0.2",
                "d3-shape": "^3.1.0",
                "d3-time": "^3.0.0",
                "d3-timer": "^3.0.1"
            }
        },
        "node_modules/watchpack": {
            "version": "2.4.0",
            "resolved": "https://registry.npmjs.org/watchpack/-/watchpack-2.4.0.tgz",
            "integrity": "sha512-Lcvm7MGST/4fup+ifyKi2hjyIAwcdI4HRgtvTpIUxBRhB+RFtUh8XtDOxUfctVCnhVi+QQj49i91OyvzkJl6cg==",
            "dependencies": {
                "glob-to-regexp": "^0.4.1",
                "graceful-fs": "^4.1.2"
            },
            "engines": {
                "node": ">=10.13.0"
            }
        },
        "node_modules/which": {
            "version": "2.0.2",
            "resolved": "https://registry.npmjs.org/which/-/which-2.0.2.tgz",
            "integrity": "sha512-BLI3Tl1TW3Pvl70l3yq3Y64i+awpwXqsGBYWkkqMtnbXgrMD+yj7rhW0kuEDxzJaYXGjEW5ogapKNMEKNMjibA==",
            "dev": true,
            "dependencies": {
                "isexe": "^2.0.0"
            },
            "bin": {
                "node-which": "bin/node-which"
            },
            "engines": {
                "node": ">= 8"
            }
        },
        "node_modules/which-boxed-primitive": {
            "version": "1.1.1",
            "resolved": "https://registry.npmjs.org/which-boxed-primitive/-/which-boxed-primitive-1.1.1.tgz",
            "integrity": "sha512-TbX3mj8n0odCBFVlY8AxkqcHASw3L60jIuF8jFP78az3C2YhmGvqbHBpAjTRH2/xqYunrJ9g1jSyjCjpoWzIAA==",
            "dev": true,
            "dependencies": {
                "is-bigint": "^1.1.0",
                "is-boolean-object": "^1.2.1",
                "is-number-object": "^1.1.1",
                "is-string": "^1.1.1",
                "is-symbol": "^1.1.1"
            },
            "engines": {
                "node": ">= 0.4"
            },
            "funding": {
                "url": "https://github.com/sponsors/ljharb"
            }
        },
        "node_modules/which-builtin-type": {
            "version": "1.2.1",
            "resolved": "https://registry.npmjs.org/which-builtin-type/-/which-builtin-type-1.2.1.tgz",
            "integrity": "sha512-6iBczoX+kDQ7a3+YJBnh3T+KZRxM/iYNPXicqk66/Qfm1b93iu+yOImkg0zHbj5LNOcNv1TEADiZ0xa34B4q6Q==",
            "dev": true,
            "dependencies": {
                "call-bound": "^1.0.2",
                "function.prototype.name": "^1.1.6",
                "has-tostringtag": "^1.0.2",
                "is-async-function": "^2.0.0",
                "is-date-object": "^1.1.0",
                "is-finalizationregistry": "^1.1.0",
                "is-generator-function": "^1.0.10",
                "is-regex": "^1.2.1",
                "is-weakref": "^1.0.2",
                "isarray": "^2.0.5",
                "which-boxed-primitive": "^1.1.0",
                "which-collection": "^1.0.2",
                "which-typed-array": "^1.1.16"
            },
            "engines": {
                "node": ">= 0.4"
            },
            "funding": {
                "url": "https://github.com/sponsors/ljharb"
            }
        },
        "node_modules/which-collection": {
            "version": "1.0.2",
            "resolved": "https://registry.npmjs.org/which-collection/-/which-collection-1.0.2.tgz",
            "integrity": "sha512-K4jVyjnBdgvc86Y6BkaLZEN933SwYOuBFkdmBu9ZfkcAbdVbpITnDmjvZ/aQjRXQrv5EPkTnD1s39GiiqbngCw==",
            "dev": true,
            "dependencies": {
                "is-map": "^2.0.3",
                "is-set": "^2.0.3",
                "is-weakmap": "^2.0.2",
                "is-weakset": "^2.0.3"
            },
            "engines": {
                "node": ">= 0.4"
            },
            "funding": {
                "url": "https://github.com/sponsors/ljharb"
            }
        },
        "node_modules/which-typed-array": {
            "version": "1.1.19",
            "resolved": "https://registry.npmjs.org/which-typed-array/-/which-typed-array-1.1.19.tgz",
            "integrity": "sha512-rEvr90Bck4WZt9HHFC4DJMsjvu7x+r6bImz0/BrbWb7A2djJ8hnZMrWnHo9F8ssv0OMErasDhftrfROTyqSDrw==",
            "dev": true,
            "dependencies": {
                "available-typed-arrays": "^1.0.7",
                "call-bind": "^1.0.8",
                "call-bound": "^1.0.4",
                "for-each": "^0.3.5",
                "get-proto": "^1.0.1",
                "gopd": "^1.2.0",
                "has-tostringtag": "^1.0.2"
            },
            "engines": {
                "node": ">= 0.4"
            },
            "funding": {
                "url": "https://github.com/sponsors/ljharb"
            }
        },
        "node_modules/wmf": {
            "version": "1.0.2",
            "resolved": "https://registry.npmjs.org/wmf/-/wmf-1.0.2.tgz",
            "integrity": "sha512-/p9K7bEh0Dj6WbXg4JG0xvLQmIadrner1bi45VMJTfnbVHsc7yIajZyoSoK60/dtVBs12Fm6WkUI5/3WAVsNMw==",
            "engines": {
                "node": ">=0.8"
            }
        },
        "node_modules/word": {
            "version": "0.3.0",
            "resolved": "https://registry.npmjs.org/word/-/word-0.3.0.tgz",
            "integrity": "sha512-OELeY0Q61OXpdUfTp+oweA/vtLVg5VDOXh+3he3PNzLGG/y0oylSOC1xRVj0+l4vQ3tj/bB1HVHv1ocXkQceFA==",
            "engines": {
                "node": ">=0.8"
            }
        },
        "node_modules/word-wrap": {
            "version": "1.2.5",
            "resolved": "https://registry.npmjs.org/word-wrap/-/word-wrap-1.2.5.tgz",
            "integrity": "sha512-BN22B5eaMMI9UMtjrGd5g5eCYPpCPDUy0FJXbYsaT5zYxjFOckS53SQDE3pWkVoWpHXVb3BrYcEN4Twa55B5cA==",
            "dev": true,
            "engines": {
                "node": ">=0.10.0"
            }
        },
        "node_modules/wrap-ansi": {
            "version": "8.1.0",
            "resolved": "https://registry.npmjs.org/wrap-ansi/-/wrap-ansi-8.1.0.tgz",
            "integrity": "sha512-si7QWI6zUMq56bESFvagtmzMdGOtoxfR+Sez11Mobfc7tm+VkUckk9bW2UeffTGVUbOksxmSw0AA2gs8g71NCQ==",
            "dev": true,
            "dependencies": {
                "ansi-styles": "^6.1.0",
                "string-width": "^5.0.1",
                "strip-ansi": "^7.0.1"
            },
            "engines": {
                "node": ">=12"
            },
            "funding": {
                "url": "https://github.com/chalk/wrap-ansi?sponsor=1"
            }
        },
        "node_modules/wrap-ansi-cjs": {
            "name": "wrap-ansi",
            "version": "7.0.0",
            "resolved": "https://registry.npmjs.org/wrap-ansi/-/wrap-ansi-7.0.0.tgz",
            "integrity": "sha512-YVGIj2kamLSTxw6NsZjoBxfSwsn0ycdesmc4p+Q21c5zPuZ1pl+NfxVdxPtdHvmNVOQ6XSYG4AUtyt/Fi7D16Q==",
            "dev": true,
            "dependencies": {
                "ansi-styles": "^4.0.0",
                "string-width": "^4.1.0",
                "strip-ansi": "^6.0.0"
            },
            "engines": {
                "node": ">=10"
            },
            "funding": {
                "url": "https://github.com/chalk/wrap-ansi?sponsor=1"
            }
        },
        "node_modules/wrap-ansi-cjs/node_modules/emoji-regex": {
            "version": "8.0.0",
            "resolved": "https://registry.npmjs.org/emoji-regex/-/emoji-regex-8.0.0.tgz",
            "integrity": "sha512-MSjYzcWNOA0ewAHpz0MxpYFvwg6yjy1NG3xteoqz644VCo/RPgnr1/GGt+ic3iJTzQ8Eu3TdM14SawnVUmGE6A==",
            "dev": true
        },
        "node_modules/wrap-ansi-cjs/node_modules/string-width": {
            "version": "4.2.3",
            "resolved": "https://registry.npmjs.org/string-width/-/string-width-4.2.3.tgz",
            "integrity": "sha512-wKyQRQpjJ0sIp62ErSZdGsjMJWsap5oRNihHhu6G7JVO/9jIB6UyevL+tXuOqrng8j/cxKTWyWUwvSTriiZz/g==",
            "dev": true,
            "dependencies": {
                "emoji-regex": "^8.0.0",
                "is-fullwidth-code-point": "^3.0.0",
                "strip-ansi": "^6.0.1"
            },
            "engines": {
                "node": ">=8"
            }
        },
        "node_modules/wrap-ansi/node_modules/ansi-regex": {
            "version": "6.2.0",
            "resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-6.2.0.tgz",
            "integrity": "sha512-TKY5pyBkHyADOPYlRT9Lx6F544mPl0vS5Ew7BJ45hA08Q+t3GjbueLliBWN3sMICk6+y7HdyxSzC4bWS8baBdg==",
            "dev": true,
            "engines": {
                "node": ">=12"
            },
            "funding": {
                "url": "https://github.com/chalk/ansi-regex?sponsor=1"
            }
        },
        "node_modules/wrap-ansi/node_modules/ansi-styles": {
            "version": "6.2.1",
            "resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-6.2.1.tgz",
            "integrity": "sha512-bN798gFfQX+viw3R7yrGWRqnrN2oRkEkUjjl4JNn4E8GxxbjtG3FbrEIIY3l8/hrwUwIeCZvi4QuOTP4MErVug==",
            "dev": true,
            "engines": {
                "node": ">=12"
            },
            "funding": {
                "url": "https://github.com/chalk/ansi-styles?sponsor=1"
            }
        },
        "node_modules/wrap-ansi/node_modules/strip-ansi": {
            "version": "7.1.0",
            "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-7.1.0.tgz",
            "integrity": "sha512-iq6eVVI64nQQTRYq2KtEg2d2uU7LElhTJwsH4YzIHZshxlgZms/wIc4VoDQTlG/IvVIrBKG06CrZnp0qv7hkcQ==",
            "dev": true,
            "dependencies": {
                "ansi-regex": "^6.0.1"
            },
            "engines": {
                "node": ">=12"
            },
            "funding": {
                "url": "https://github.com/chalk/strip-ansi?sponsor=1"
            }
        },
        "node_modules/wrappy": {
            "version": "1.0.2",
            "resolved": "https://registry.npmjs.org/wrappy/-/wrappy-1.0.2.tgz",
            "integrity": "sha512-l4Sp/DRseor9wL6EvV2+TuQn63dMkPjZ/sp9XkghTEbV9KlPS1xUsZ3u7/IQO4wxtcFB4bgpQPRcR3QCvezPcQ==",
            "dev": true
        },
        "node_modules/xlsx": {
            "version": "0.18.5",
            "resolved": "https://registry.npmjs.org/xlsx/-/xlsx-0.18.5.tgz",
            "integrity": "sha512-dmg3LCjBPHZnQp5/F/+nnTa+miPJxUXB6vtk42YjBBKayDNagxGEeIdWApkYPOf3Z3pm3k62Knjzp7lMeTEtFQ==",
            "dependencies": {
                "adler-32": "~1.3.0",
                "cfb": "~1.2.1",
                "codepage": "~1.15.0",
                "crc-32": "~1.2.1",
                "ssf": "~0.11.2",
                "wmf": "~1.0.1",
                "word": "~0.3.0"
            },
            "bin": {
                "xlsx": "bin/xlsx.njs"
            },
            "engines": {
                "node": ">=0.8"
            }
        },
        "node_modules/xtend": {
            "version": "4.0.2",
            "resolved": "https://registry.npmjs.org/xtend/-/xtend-4.0.2.tgz",
            "integrity": "sha512-LKYU1iAXJXUgAXn9URjiu+MWhyUXHsvfp7mcuYm9dSUKK0/CjtrUwFAxD82/mCWbtLsGjFIad0wIsod4zrTAEQ==",
            "engines": {
                "node": ">=0.4"
            }
        },
        "node_modules/yaml": {
            "version": "2.8.1",
            "resolved": "https://registry.npmjs.org/yaml/-/yaml-2.8.1.tgz",
            "integrity": "sha512-lcYcMxX2PO9XMGvAJkJ3OsNMw+/7FKes7/hgerGUYWIoWu5j/+YQqcZr5JnPZWzOsEBgMbSbiSTn/dv/69Mkpw==",
            "dev": true,
            "bin": {
                "yaml": "bin.mjs"
            },
            "engines": {
                "node": ">= 14.6"
            }
        },
        "node_modules/yocto-queue": {
            "version": "0.1.0",
            "resolved": "https://registry.npmjs.org/yocto-queue/-/yocto-queue-0.1.0.tgz",
            "integrity": "sha512-rVksvsnNCdJ/ohGc6xgPwyN8eheCxsiLM8mxuE/t/mOVqJewPuO1miLpTHQiRgTKCLexL4MeAFVagts7HmNZ2Q==",
            "dev": true,
            "engines": {
                "node": ">=10"
            },
            "funding": {
                "url": "https://github.com/sponsors/sindresorhus"
            }
        },
        "node_modules/zod": {
            "version": "3.25.76",
            "resolved": "https://registry.npmjs.org/zod/-/zod-3.25.76.tgz",
            "integrity": "sha512-gzUt/qt81nXsFGKIFcC3YnfEAx5NkunCfnDlvuBSSFS02bcXu4Lmea0AFIUwbLWxWPx3d9p8S5QoaujKcNQxcQ==",
            "funding": {
                "url": "https://github.com/sponsors/colinhacks"
            }
        }
    }
}


// ===== package.json =====

{
    "name": "newcap",
    "version": "0.1.0",
    "private": true,
    "scripts": {
        "dev": "next dev",
        "build": "next build",
        "start": "next start",
        "lint": "next lint",
        "type-check": "tsc --noEmit"
    },
    "dependencies": {
        "@hookform/resolvers": "^3.3.1",
        "@radix-ui/react-alert-dialog": "^1.0.5",
        "@radix-ui/react-checkbox": "^1.0.4",
        "@radix-ui/react-dropdown-menu": "^2.0.6",
        "@radix-ui/react-label": "^2.0.2",
        "@radix-ui/react-progress": "^1.1.7",
        "@radix-ui/react-select": "^2.0.0",
        "@radix-ui/react-switch": "^1.2.6",
        "@radix-ui/react-tabs": "^1.1.13",
        "@radix-ui/react-toast": "^1.1.5",
        "@radix-ui/react-tooltip": "^1.0.7",
        "@tanstack/react-query": "^4.36.1",
        "@types/pg": "^8.15.5",
        "@types/uuid": "^10.0.0",
        "bcryptjs": "^3.0.2",
        "class-variance-authority": "^0.7.0",
        "clsx": "^2.0.0",
        "install": "^0.13.0",
        "lucide-react": "^0.294.0",
        "next": "14.0.0",
        "npm": "^11.6.0",
        "pg": "^8.16.3",
        "react": "^18.2.0",
        "react-dom": "^18.2.0",
        "react-dropzone": "^14.3.8",
        "react-hook-form": "^7.48.2",
        "recharts": "^2.15.4",
        "tailwind-merge": "^1.14.0",
        "uuid": "^12.0.0",
        "xlsx": "^0.18.5",
        "zod": "^3.22.4"
    },
    "devDependencies": {
        "@types/bcryptjs": "^3.0.0",
        "@types/node": "^20",
        "@types/react": "^18",
        "@types/react-dom": "^18",
        "autoprefixer": "^10.0.1",
        "eslint": "^8",
        "eslint-config-next": "14.0.0",
        "postcss": "^8",
        "tailwindcss": "^3.3.0",
        "typescript": "^5"
    }
}


// ===== pagesinfo\certificates\page.tsx =====

'use client';

import { useSafeQuery } from "@/hooks/useSafeQuery";
import Sidebar from "@/components/sidebar";
import CertificateGenerator from "@/components/certificate-generator";
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card";
import { Badge } from "@/components/ui/badge";
import { Button } from "@/components/ui/button";
import { Award, Download, Eye, QrCode } from "lucide-react";
import { Certificate } from "@/types";
import { exportCertificatesToExcel } from "@/lib/exportUtils";
import { useToast } from "@/hooks/use-toast";

export default function Certificates() {
    const { toast } = useToast();

    const { data: certificates, isLoading: certificatesLoading } = useSafeQuery<Certificate[]>({
        queryKey: ['/api/certificates'],
    });

    const handleExportCertificates = () => {
        if (certificates && certificates.length > 0) {
            exportCertificatesToExcel(certificates);
            toast({
                title: "Exportación exitosa",
                description: "Los datos de certificados han sido exportados a Excel.",
            });
        } else {
            toast({
                title: "Sin datos",
                description: "No hay certificados para exportar.",
                variant: "destructive",
            });
        }
    };

    return (
        <div className="flex h-screen overflow-hidden bg-gray-50">
            <Sidebar />

            <div className="flex-1 flex flex-col overflow-hidden">
                <header className="bg-white shadow-sm border-b border-gray-200 px-6 py-4">
                    <div className="flex items-center justify-between">
                        <div className="flex items-center space-x-3">
                            <Award className="text-blue-600" size={28} />
                            <div>
                                <h2 className="text-2xl font-bold text-gray-900">Certificados</h2>
                                <p className="text-gray-600">Gestiona y genera certificados de completación</p>
                            </div>
                        </div>
                        <Button
                            variant="outline"
                            onClick={handleExportCertificates}
                            disabled={!certificates || certificates.length === 0}
                        >
                            <Download className="mr-2" size={16} />
                            Exportar
                        </Button>
                    </div>
                </header>

                <main className="flex-1 overflow-auto p-6 space-y-6">
                    <CertificateGenerator />

                    <div className="bg-white rounded-lg shadow border border-gray-200">
                        <div className="p-4 border-b border-gray-200">
                            <h3 className="text-lg font-semibold text-gray-900">Certificados Emitidos</h3>
                            <p className="text-sm text-gray-600">Historial de certificados generados</p>
                        </div>

                        <div className="p-4">
                            {certificatesLoading ? (
                                <div className="flex justify-center items-center h-32">
                                    <div className="text-center">
                                        <div className="animate-spin rounded-full h-6 w-6 border-b-2 border-blue-600 mx-auto mb-2"></div>
                                        <p className="text-gray-600 text-sm">Cargando certificados...</p>
                                    </div>
                                </div>
                            ) : certificates && certificates.length > 0 ? (
                                <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4">
                                    {certificates.map((certificate) => (
                                        <Card key={certificate.id} className="hover:shadow-md transition-shadow">
                                            <CardHeader className="pb-3">
                                                <div className="flex items-start justify-between">
                                                    <div className="w-10 h-10 bg-yellow-100 rounded-lg flex items-center justify-center">
                                                        <Award className="text-yellow-600" size={20} />
                                                    </div>
                                                    <Badge variant="outline">
                                                        {certificate.certificateNumber}
                                                    </Badge>
                                                </div>
                                                <CardTitle className="text-sm font-medium">
                                                    Certificado de Completación
                                                </CardTitle>
                                                <CardDescription className="text-xs">
                                                    Emitido por {certificate.issuedBy}
                                                </CardDescription>
                                            </CardHeader>
                                            <CardContent className="pt-0">
                                                <div className="space-y-3">
                                                    <div className="text-xs text-gray-600">
                                                        <p>Fecha: {new Date(certificate.issuedAt).toLocaleDateString()}</p>
                                                        <p>Puntuación: {certificate.score}%</p>
                                                    </div>
                                                    <div className="flex items-center space-x-2">
                                                        <Button size="sm" variant="outline" className="flex-1">
                                                            <Eye className="mr-1" size={12} />
                                                            Ver
                                                        </Button>
                                                        <Button size="sm" variant="outline" className="flex-1">
                                                            <Download className="mr-1" size={12} />
                                                            PDF
                                                        </Button>
                                                        <Button size="sm" variant="outline">
                                                            <QrCode size={12} />
                                                        </Button>
                                                    </div>
                                                </div>
                                            </CardContent>
                                        </Card>
                                    ))}
                                </div>
                            ) : (
                                <div className="text-center py-8">
                                    <Award className="mx-auto h-12 w-12 text-gray-400 mb-4" />
                                    <h3 className="text-sm font-medium text-gray-900 mb-2">No hay certificados</h3>
                                    <p className="text-sm text-gray-600">Los certificados aparecerán aquí una vez generados</p>
                                </div>
                            )}
                        </div>
                    </div>
                </main>
            </div>
        </div>
    );
}

// ===== pagesinfo\courses\page.tsx =====

'use client';

import { useSafeQuery } from "@/hooks/useSafeQuery";
import Sidebar from "@/components/sidebar";
import { Button } from "@/components/ui/button";
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card";
import { Badge } from "@/components/ui/badge";
import { BookOpen, Users, Clock, Plus, Download } from "lucide-react";
import Link from "next/link";
import { Course } from "@/types";
import { exportCoursesToExcel } from "@/lib/exportUtils";
import { useToast } from "@/hooks/use-toast";

export default function Courses() {
    const { toast } = useToast();

    const { data: courses, isLoading: coursesLoading } = useSafeQuery<Course[]>({
        queryKey: ['/api/courses'],
    });

    const handleExportCourses = () => {
        if (courses && courses.length > 0) {
            exportCoursesToExcel(courses);
            toast({
                title: "Exportación exitosa",
                description: "Los datos de cursos han sido exportados a Excel.",
            });
        } else {
            toast({
                title: "Sin datos",
                description: "No hay cursos para exportar.",
                variant: "destructive",
            });
        }
    };

    return (
        <div className="flex h-screen overflow-hidden bg-gray-50">
            <Sidebar />

            <div className="flex-1 flex flex-col overflow-hidden">
                <header className="bg-white shadow-sm border-b border-gray-200 px-6 py-4">
                    <div className="flex items-center justify-between">
                        <div>
                            <h2 className="text-2xl font-bold text-gray-900">Capacitaciones</h2>
                            <p className="text-gray-600">Gestiona y visualiza todos los cursos disponibles</p>
                        </div>
                        <div className="flex items-center space-x-3">
                            <Button
                                variant="outline"
                                onClick={handleExportCourses}
                                disabled={!courses || courses.length === 0}
                            >
                                <Download className="mr-2" size={16} />
                                Exportar a Excel
                            </Button>
                            <Button className="bg-blue-600 hover:bg-blue-700">
                                <Plus className="mr-2" size={16} />
                                Nuevo Curso
                            </Button>
                        </div>
                    </div>
                </header>

                <main className="flex-1 overflow-auto p-6">
                    {coursesLoading ? (
                        <div className="flex justify-center items-center h-64">
                            <div className="text-center">
                                <div className="animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600 mx-auto mb-4"></div>
                                <p className="text-gray-600">Cargando cursos...</p>
                            </div>
                        </div>
                    ) : courses && courses.length > 0 ? (
                        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
                            {courses.map((course) => (
                                <Card key={course.id} className="hover:shadow-lg transition-shadow cursor-pointer">
                                    <CardHeader>
                                        <div className="flex items-start justify-between">
                                            <div className="w-12 h-12 bg-blue-600 rounded-lg flex items-center justify-center mb-4">
                                                <BookOpen className="text-white" size={24} />
                                            </div>
                                            <Badge variant={course.isActive ? "default" : "secondary"}>
                                                {course.isActive ? "Activo" : "Inactivo"}
                                            </Badge>
                                        </div>
                                        <CardTitle className="line-clamp-2">{course.title}</CardTitle>
                                        <CardDescription className="line-clamp-3">
                                            {course.description || "Sin descripción disponible"}
                                        </CardDescription>
                                    </CardHeader>
                                    <CardContent>
                                        <div className="space-y-3">
                                            <div className="flex items-center justify-between text-sm text-gray-600">
                                                <div className="flex items-center space-x-1">
                                                    <Clock size={14} />
                                                    <span>{course.duration ? `${course.duration} min` : "Sin duración"}</span>
                                                </div>
                                                <div className="flex items-center space-x-1">
                                                    <Users size={14} />
                                                    <span>0 estudiantes</span>
                                                </div>
                                            </div>
                                            <Link href={`/courses/${course.id}`}>
                                                <Button className="w-full bg-blue-600 hover:bg-blue-700">
                                                    Ver Curso
                                                </Button>
                                            </Link>
                                        </div>
                                    </CardContent>
                                </Card>
                            ))}
                        </div>
                    ) : (
                        <div className="text-center py-16">
                            <BookOpen className="mx-auto h-16 w-16 text-gray-400 mb-4" />
                            <h3 className="text-lg font-medium text-gray-900 mb-2">No hay cursos disponibles</h3>
                            <p className="text-gray-600 mb-6">Comienza creando tu primer curso de capacitación</p>
                            <Button className="bg-blue-600 hover:bg-blue-700">
                                <Plus className="mr-2" size={16} />
                                Crear Primer Curso
                            </Button>
                        </div>
                    )}
                </main>
            </div>
        </div>
    );
}

// ===== pagesinfo\reports\page.tsx =====

'use client';

import { useSafeQuery } from "@/hooks/useSafeQuery";
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from "@/components/ui/select";
import { Badge } from "@/components/ui/badge";
import {
    BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer,
    PieChart, Pie, Cell, AreaChart, Area
} from "recharts";
import {
    Users, BookOpen, Award, TrendingUp, Download, Calendar,
    CheckCircle, Target
} from "lucide-react";
import { useState } from "react";
import { exportToExcel } from "@/lib/exportUtils";
import { useToast } from "@/hooks/use-toast";

const COLORS = ['#3b82f6', '#10b981', '#f59e0b', '#ef4444', '#8b5cf6', '#06b6d4'];

export default function Reports() {
    const [selectedCourse, setSelectedCourse] = useState<string>("all");
    const { toast } = useToast();

    const { data: stats } = useSafeQuery({
        queryKey: ['/api/dashboard/stats'],
    });

    const { data: courses = [] } = useSafeQuery({
        queryKey: ['/api/courses'],
    });

    // Datos de ejemplo serializables
    const courseCompletionData = [
        { course: 'Seguridad Industrial', completed: 45, inProgress: 12, notStarted: 8 },
        { course: 'Primeros Auxilios', completed: 38, inProgress: 15, notStarted: 12 },
        { course: 'Manejo Defensivo', completed: 52, inProgress: 8, notStarted: 5 },
        { course: 'Trabajo en Alturas', completed: 23, inProgress: 18, notStarted: 14 }
    ];

    const monthlyProgressData = [
        { month: 'Ene', usuarios: 15, certificados: 12, evaluaciones: 18 },
        { month: 'Feb', usuarios: 22, certificados: 19, evaluaciones: 25 },
        { month: 'Mar', usuarios: 18, certificados: 15, evaluaciones: 22 },
        { month: 'Abr', usuarios: 25, certificados: 22, evaluaciones: 28 },
        { month: 'May', usuarios: 30, certificados: 28, evaluaciones: 35 },
        { month: 'Jun', usuarios: 28, certificados: 25, evaluaciones: 32 }
    ];

    const userRoleDistribution = [
        { name: 'Estudiantes', value: 82, count: 164 },
        { name: 'Instructores', value: 12, count: 24 },
        { name: 'Administradores', value: 6, count: 12 }
    ];

    const topPerformingCourses = [
        { course: 'Manejo Defensivo', score: 94, completions: 52 },
        { course: 'Seguridad Industrial', score: 89, completions: 45 },
        { course: 'Primeros Auxilios', score: 87, completions: 38 },
        { course: 'Trabajo en Alturas', score: 85, completions: 23 }
    ];

    const exportReport = (reportType: string) => {
        let data: any[] = [];
        let filename = '';

        switch (reportType) {
            case 'completion':
                data = courseCompletionData;
                filename = 'reporte_completacion_cursos';
                break;
            case 'monthly':
                data = monthlyProgressData;
                filename = 'reporte_progreso_mensual';
                break;
            case 'performance':
                data = topPerformingCourses;
                filename = 'reporte_rendimiento_cursos';
                break;
            default:
                return;
        }

        exportToExcel(data, `${filename}_${new Date().toISOString().split('T')[0]}`);
        toast({
            title: "Reporte exportado",
            description: "El reporte ha sido exportado a Excel exitosamente.",
        });
    };

    return (
        <div className="space-y-6 p-6">
            <div className="flex items-center justify-between">
                <div>
                    <h1 className="text-3xl font-bold text-gray-900">Reportes y Analíticas</h1>
                    <p className="text-gray-600">Panel de control con métricas detalladas del desempeño</p>
                </div>
                <div className="flex items-center space-x-3">
                    <Button variant="outline">
                        <Calendar className="mr-2" size={16} />
                        Filtrar por fecha
                    </Button>
                    <Select value={selectedCourse} onValueChange={setSelectedCourse}>
                        <SelectTrigger className="w-48">
                            <SelectValue placeholder="Todos los cursos" />
                        </SelectTrigger>
                        <SelectContent>
                            <SelectItem value="all">Todos los cursos</SelectItem>
                            {courses.map((course: any) => (
                                <SelectItem key={course.id} value={course.id}>
                                    {course.title}
                                </SelectItem>
                            ))}
                        </SelectContent>
                    </Select>
                </div>
            </div>

            <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6">
                <Card>
                    <CardHeader className="flex flex-row items-center justify-between space-y-0 pb-2">
                        <CardTitle className="text-sm font-medium">Total Usuarios</CardTitle>
                        <Users className="h-4 w-4 text-muted-foreground" />
                    </CardHeader>
                    <CardContent>
                        <div className="text-2xl font-bold">{(stats as any)?.totalUsers || 0}</div>
                        <p className="text-xs text-muted-foreground">
                            +12% desde el mes pasado
                        </p>
                    </CardContent>
                </Card>

                <Card>
                    <CardHeader className="flex flex-row items-center justify-between space-y-0 pb-2">
                        <CardTitle className="text-sm font-medium">Cursos Completados</CardTitle>
                        <CheckCircle className="h-4 w-4 text-green-600" />
                    </CardHeader>
                    <CardContent>
                        <div className="text-2xl font-bold">{(stats as any)?.completedCourses || 0}</div>
                        <p className="text-xs text-muted-foreground">
                            +8% desde el mes pasado
                        </p>
                    </CardContent>
                </Card>

                <Card>
                    <CardHeader className="flex flex-row items-center justify-between space-y-0 pb-2">
                        <CardTitle className="text-sm font-medium">Certificados Emitidos</CardTitle>
                        <Award className="h-4 w-4 text-yellow-600" />
                    </CardHeader>
                    <CardContent>
                        <div className="text-2xl font-bold">{(stats as any)?.totalCertificates || 0}</div>
                        <p className="text-xs text-muted-foreground">
                            +15% desde el mes pasado
                        </p>
                    </CardContent>
                </Card>

                <Card>
                    <CardHeader className="flex flex-row items-center justify-between space-y-0 pb-2">
                        <CardTitle className="text-sm font-medium">Tasa de Completación</CardTitle>
                        <Target className="h-4 w-4 text-blue-600" />
                    </CardHeader>
                    <CardContent>
                        <div className="text-2xl font-bold">87.5%</div>
                        <p className="text-xs text-muted-foreground">
                            +2.3% desde el mes pasado
                        </p>
                    </CardContent>
                </Card>
            </div>

            <div className="grid grid-cols-1 lg:grid-cols-2 gap-6">
                <Card>
                    <CardHeader className="flex flex-row items-center justify-between">
                        <div>
                            <CardTitle>Progreso por Curso</CardTitle>
                            <CardDescription>Estado de completación de cada curso</CardDescription>
                        </div>
                        <Button
                            variant="outline"
                            size="sm"
                            onClick={() => exportReport('completion')}
                        >
                            <Download className="mr-2" size={14} />
                            Exportar
                        </Button>
                    </CardHeader>
                    <CardContent>
                        <ResponsiveContainer width="100%" height={300}>
                            <BarChart data={courseCompletionData}>
                                <CartesianGrid strokeDasharray="3 3" />
                                <XAxis dataKey="course" />
                                <YAxis />
                                <Tooltip />
                                <Legend />
                                <Bar dataKey="completed" fill="#10b981" name="Completados" />
                                <Bar dataKey="inProgress" fill="#f59e0b" name="En Progreso" />
                                <Bar dataKey="notStarted" fill="#ef4444" name="No Iniciados" />
                            </BarChart>
                        </ResponsiveContainer>
                    </CardContent>
                </Card>

                <Card>
                    <CardHeader>
                        <CardTitle>Distribución de Usuarios</CardTitle>
                        <CardDescription>Tipos de usuario en la plataforma</CardDescription>
                    </CardHeader>
                    <CardContent>
                        <ResponsiveContainer width="100%" height={300}>
                            <PieChart>
                                <Pie
                                    data={userRoleDistribution}
                                    cx="50%"
                                    cy="50%"
                                    labelLine={false}
                                    label={({ name, value }) => `${name}: ${value}%`}
                                    outerRadius={80}
                                    fill="#8884d8"
                                    dataKey="value"
                                >
                                    {userRoleDistribution.map((entry, index) => (
                                        <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />
                                    ))}
                                </Pie>
                                <Tooltip />
                            </PieChart>
                        </ResponsiveContainer>
                    </CardContent>
                </Card>

                <Card>
                    <CardHeader className="flex flex-row items-center justify-between">
                        <div>
                            <CardTitle>Tendencia Mensual</CardTitle>
                            <CardDescription>Progreso de actividades por mes</CardDescription>
                        </div>
                        <Button
                            variant="outline"
                            size="sm"
                            onClick={() => exportReport('monthly')}
                        >
                            <Download className="mr-2" size={14} />
                            Exportar
                        </Button>
                    </CardHeader>
                    <CardContent>
                        <ResponsiveContainer width="100%" height={300}>
                            <AreaChart data={monthlyProgressData}>
                                <CartesianGrid strokeDasharray="3 3" />
                                <XAxis dataKey="month" />
                                <YAxis />
                                <Tooltip />
                                <Legend />
                                <Area type="monotone" dataKey="usuarios" stackId="1" stroke="#3b82f6" fill="#3b82f6" name="Nuevos Usuarios" />
                                <Area type="monotone" dataKey="certificados" stackId="1" stroke="#10b981" fill="#10b981" name="Certificados" />
                                <Area type="monotone" dataKey="evaluaciones" stackId="1" stroke="#f59e0b" fill="#f59e0b" name="Evaluaciones" />
                            </AreaChart>
                        </ResponsiveContainer>
                    </CardContent>
                </Card>

                <Card>
                    <CardHeader className="flex flex-row items-center justify-between">
                        <div>
                            <CardTitle>Cursos con Mejor Rendimiento</CardTitle>
                            <CardDescription>Ranking por puntuación promedio</CardDescription>
                        </div>
                        <Button
                            variant="outline"
                            size="sm"
                            onClick={() => exportReport('performance')}
                        >
                            <Download className="mr-2" size={14} />
                            Exportar
                        </Button>
                    </CardHeader>
                    <CardContent>
                        <div className="space-y-4">
                            {topPerformingCourses.map((course, index) => (
                                <div key={course.course} className="flex items-center justify-between p-3 bg-gray-50 rounded-lg">
                                    <div className="flex items-center space-x-3">
                                        <div className="w-8 h-8 bg-blue-600 rounded-full flex items-center justify-center text-white font-bold text-sm">
                                            {index + 1}
                                        </div>
                                        <div>
                                            <p className="font-medium">{course.course}</p>
                                            <p className="text-sm text-gray-600">{course.completions} completados</p>
                                        </div>
                                    </div>
                                    <Badge variant="secondary" className="bg-green-100 text-green-800">
                                        {course.score}% promedio
                                    </Badge>
                                </div>
                            ))}
                        </div>
                    </CardContent>
                </Card>
            </div>

            <Card>
                <CardHeader>
                    <CardTitle>Resumen Detallado</CardTitle>
                    <CardDescription>Estadísticas detalladas del rendimiento general</CardDescription>
                </CardHeader>
                <CardContent>
                    <div className="grid grid-cols-1 md:grid-cols-3 gap-6">
                        <div className="text-center">
                            <div className="text-3xl font-bold text-green-600">94.2%</div>
                            <p className="text-sm text-gray-600">Tasa de satisfacción</p>
                        </div>
                        <div className="text-center">
                            <div className="text-3xl font-bold text-blue-600">2.8 hrs</div>
                            <p className="text-sm text-gray-600">Tiempo promedio por curso</p>
                        </div>
                        <div className="text-center">
                            <div className="text-3xl font-bold text-purple-600">89.5%</div>
                            <p className="text-sm text-gray-600">Tasa de retención</p>
                        </div>
                    </div>
                </CardContent>
            </Card>
        </div>
    );
}

// ===== pagesinfo\users\page.tsx =====

'use client';

import Sidebar from "@/components/sidebar";
import UserTable from "@/components/user-table";
import { Users as UsersIcon, Plus, Download } from "lucide-react";
import { Button } from "@/components/ui/button";

export default function Users() {
    return (
        <div className="flex h-screen overflow-hidden bg-gray-50">
            <Sidebar />

            <div className="flex-1 flex flex-col overflow-hidden">
                <header className="bg-white shadow-sm border-b border-gray-200 px-6 py-4">
                    <div className="flex items-center justify-between">
                        <div className="flex items-center space-x-3">
                            <UsersIcon className="text-blue-600" size={28} />
                            <div>
                                <h2 className="text-2xl font-bold text-gray-900">Gestión de Usuarios</h2>
                                <p className="text-gray-600">Administra usuarios y sus capacitaciones</p>
                            </div>
                        </div>
                        <div className="flex items-center space-x-3">
                            <Button variant="outline" className="border-gray-300 text-gray-700 hover:bg-gray-50">
                                <Download className="mr-2" size={16} />
                                Exportar
                            </Button>
                            <Button className="bg-blue-600 hover:bg-blue-700">
                                <Plus className="mr-2" size={16} />
                                Agregar Usuario
                            </Button>
                        </div>
                    </div>
                </header>

                <main className="flex-1 overflow-auto p-6">
                    <UserTable />
                </main>
            </div>
        </div>
    );
}

// ===== postcss.config.js =====

module.exports = {
    plugins: {
        tailwindcss: {},
        autoprefixer: {},
    },
}

// ===== tailwind.config.js =====

/** @type {import('tailwindcss').Config} */
module.exports = {
    content: [
        './pages/**/*.{js,ts,jsx,tsx,mdx}',
        './components/**/*.{js,ts,jsx,tsx,mdx}',
        './app/**/*.{js,ts,jsx,tsx,mdx}',
    ],
    theme: {
        container: {
            center: true,
            padding: "2rem",
            screens: {
                "2xl": "1400px",
            },
        },
        extend: {
            colors: {
                border: "hsl(var(--border))",
                input: "hsl(var(--input))",
                ring: "hsl(var(--ring))",
                background: "hsl(var(--background))",
                foreground: "hsl(var(--foreground))",
                primary: {
                    DEFAULT: "hsl(var(--primary))",
                    foreground: "hsl(var(--primary-foreground))",
                },
                secondary: {
                    DEFAULT: "hsl(var(--secondary))",
                    foreground: "hsl(var(--secondary-foreground))",
                },
                destructive: {
                    DEFAULT: "hsl(var(--destructive))",
                    foreground: "hsl(var(--destructive-foreground))",
                },
                muted: {
                    DEFAULT: "hsl(var(--muted))",
                    foreground: "hsl(var(--muted-foreground))",
                },
                accent: {
                    DEFAULT: "hsl(var(--accent))",
                    foreground: "hsl(var(--accent-foreground))",
                },
                popover: {
                    DEFAULT: "hsl(var(--popover))",
                    foreground: "hsl(var(--popover-foreground))",
                },
                card: {
                    DEFAULT: "hsl(var(--card))",
                    foreground: "hsl(var(--card-foreground))",
                },
            },
            borderRadius: {
                lg: "var(--radius)",
                md: "calc(var(--radius) - 2px)",
                sm: "calc(var(--radius) - 4px)",
            },
            keyframes: {
                "accordion-down": {
                    from: { height: 0 },
                    to: { height: "var(--radix-accordion-content-height)" },
                },
                "accordion-up": {
                    from: { height: "var(--radix-accordion-content-height)" },
                    to: { height: 0 },
                },
            },
            animation: {
                "accordion-down": "accordion-down 0.2s ease-out",
                "accordion-up": "accordion-up 0.2s ease-out",
            },
        },
    },
    plugins: [],
}

// ===== tsconfig.json =====

{
    "compilerOptions": {
        "lib": [
            "dom",
            "dom.iterable",
            "es6"
        ],
        "allowJs": true,
        "skipLibCheck": true,
        "strict": true,
        "noEmit": true,
        "esModuleInterop": true,
        "module": "esnext",
        "moduleResolution": "bundler",
        "resolveJsonModule": true,
        "isolatedModules": true,
        "jsx": "preserve",
        "incremental": true,
        "plugins": [
            {
                "name": "next"
            }
        ],
        "baseUrl": ".",
        "paths": {
            "@/*": [
                "./*"
            ],
            "@/components/*": [
                "./components/*"
            ],
            "@/hooks/*": [
                "./hooks/*"
            ],
            "@/lib/*": [
                "./lib/*"
            ],
            "@/types/*": [
                "./types/*"
            ],
            "@/app/*": [
                "./app/*"
            ]
        }
    },
    "include": [
        "next-env.d.ts",
        "**/*.ts",
        "**/*.tsx",
        ".next/types/**/*.ts",
        "lib/db.ts"
    ],
    "exclude": [
        "node_modules"
    ]
}

// ===== types\database.ts =====

export interface User {
    id: string;
    email: string;
    first_name: string;
    last_name: string;
    role: 'admin' | 'instructor' | 'student';
    status: 'active' | 'inactive' | 'suspended';
    profile_image_url?: string;
    phone_number?: string;
    department?: string;
    position?: string;
    last_login?: string;
    created_at: string;
    updated_at: string;
    deleted_at?: string;
}

export interface Course {
    id: string;
    title: string;
    description: string;
    instructor_id: string;
    duration: number;
    category: string;
    level: 'beginner' | 'intermediate' | 'advanced';
    is_active: boolean;
    objectives?: string;
    requirements?: string;
    thumbnail_url?: string;
    created_at: string;
    updated_at: string;
    deleted_at?: string;
    instructor_first_name?: string;
    instructor_last_name?: string;
    enrolled_students?: number;
    certificates_issued?: number;
}

export interface CourseModule {
    id: string;
    course_id: string;
    title: string;
    description: string;
    content_type: 'video' | 'image' | 'text' | 'pdf' | 'quiz';
    media_id?: string;
    order_index: number;
    duration: number;
    is_published: boolean;
    created_at: string;
    updated_at: string;
    deleted_at?: string;
    content_url?: string;
    media_filename?: string;
    media_type?: string;
}

export interface Certificate {
    id: string;
    user_id: string;
    course_id: string;
    certificate_number: string;
    issued_at: string;
    expiration_date: string;
    score: number;
    issued_by: string;
    created_at: string;
    updated_at: string;
}

export interface Enrollment {
    id: string;
    user_id: string;
    course_id: string;
    enrolled_at: string;
    progress_percentage: number;
    completed_at?: string;
    status: 'enrolled' | 'in-progress' | 'completed' | 'cancelled';
}

export interface Media {
    id: string;
    title: string;
    filename: string;
    original_filename: string;
    file_path: string;
    file_size: number;
    file_type: string;
    media_type_id: string;
    course_id?: string;
    module_id?: string;
    uploaded_by: string;
    thumbnail_url?: string;
    duration?: number;
    created_at: string;
    updated_at: string;
    deleted_at?: string;
}

export interface Evaluation {
    id: string;
    title: string;
    description: string;
    course_id: string;
    module_id?: string;
    time_limit: number;
    passing_score: number;
    max_attempts: number;
    shuffle_questions: boolean;
    shuffle_options: boolean;
    show_correct_answers: boolean;
    is_active: boolean;
    created_by: string;
    created_at: string;
    updated_at: string;
}

export interface DashboardStats {
    totalUsers: number;
    totalCourses: number;
    totalEnrollments: number;
    totalCertificates: number;
    completedCourses: number;
    certificatesIssued: number;
    passRate: number;
    recentEnrollments: any[];
    popularCourses: any[];
}

// ===== types\index.ts =====

// types/index.ts
export * from './database';